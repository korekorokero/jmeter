/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 6.0, "minX": 0.0, "maxY": 9396.0, "series": [{"data": [[0.0, 6.0], [0.1, 6.0], [0.2, 6.0], [0.3, 6.0], [0.4, 16.0], [0.5, 16.0], [0.6, 16.0], [0.7, 27.0], [0.8, 27.0], [0.9, 27.0], [1.0, 41.0], [1.1, 41.0], [1.2, 41.0], [1.3, 41.0], [1.4, 55.0], [1.5, 55.0], [1.6, 55.0], [1.7, 55.0], [1.8, 55.0], [1.9, 55.0], [2.0, 59.0], [2.1, 59.0], [2.2, 59.0], [2.3, 59.0], [2.4, 60.0], [2.5, 60.0], [2.6, 60.0], [2.7, 82.0], [2.8, 82.0], [2.9, 82.0], [3.0, 82.0], [3.1, 83.0], [3.2, 83.0], [3.3, 83.0], [3.4, 86.0], [3.5, 86.0], [3.6, 86.0], [3.7, 86.0], [3.8, 86.0], [3.9, 86.0], [4.0, 86.0], [4.1, 88.0], [4.2, 88.0], [4.3, 88.0], [4.4, 89.0], [4.5, 89.0], [4.6, 89.0], [4.7, 92.0], [4.8, 92.0], [4.9, 92.0], [5.0, 96.0], [5.1, 96.0], [5.2, 96.0], [5.3, 96.0], [5.4, 96.0], [5.5, 96.0], [5.6, 96.0], [5.7, 103.0], [5.8, 103.0], [5.9, 103.0], [6.0, 103.0], [6.1, 103.0], [6.2, 103.0], [6.3, 103.0], [6.4, 104.0], [6.5, 104.0], [6.6, 104.0], [6.7, 104.0], [6.8, 104.0], [6.9, 104.0], [7.0, 104.0], [7.1, 106.0], [7.2, 106.0], [7.3, 106.0], [7.4, 111.0], [7.5, 111.0], [7.6, 111.0], [7.7, 115.0], [7.8, 115.0], [7.9, 115.0], [8.0, 116.0], [8.1, 116.0], [8.2, 116.0], [8.3, 116.0], [8.4, 117.0], [8.5, 117.0], [8.6, 117.0], [8.7, 125.0], [8.8, 125.0], [8.9, 125.0], [9.0, 125.0], [9.1, 133.0], [9.2, 133.0], [9.3, 133.0], [9.4, 140.0], [9.5, 140.0], [9.6, 140.0], [9.7, 142.0], [9.8, 142.0], [9.9, 142.0], [10.0, 142.0], [10.1, 148.0], [10.2, 148.0], [10.3, 148.0], [10.4, 153.0], [10.5, 153.0], [10.6, 153.0], [10.7, 155.0], [10.8, 155.0], [10.9, 155.0], [11.0, 155.0], [11.1, 169.0], [11.2, 169.0], [11.3, 169.0], [11.4, 171.0], [11.5, 171.0], [11.6, 171.0], [11.7, 178.0], [11.8, 178.0], [11.9, 178.0], [12.0, 178.0], [12.1, 183.0], [12.2, 183.0], [12.3, 183.0], [12.4, 189.0], [12.5, 189.0], [12.6, 189.0], [12.7, 196.0], [12.8, 196.0], [12.9, 196.0], [13.0, 196.0], [13.1, 199.0], [13.2, 199.0], [13.3, 199.0], [13.4, 201.0], [13.5, 201.0], [13.6, 201.0], [13.7, 204.0], [13.8, 204.0], [13.9, 204.0], [14.0, 204.0], [14.1, 208.0], [14.2, 208.0], [14.3, 208.0], [14.4, 213.0], [14.5, 213.0], [14.6, 213.0], [14.7, 216.0], [14.8, 216.0], [14.9, 216.0], [15.0, 216.0], [15.1, 219.0], [15.2, 219.0], [15.3, 219.0], [15.4, 222.0], [15.5, 222.0], [15.6, 222.0], [15.7, 225.0], [15.8, 225.0], [15.9, 225.0], [16.0, 225.0], [16.1, 230.0], [16.2, 230.0], [16.3, 230.0], [16.4, 242.0], [16.5, 242.0], [16.6, 242.0], [16.7, 255.0], [16.8, 255.0], [16.9, 255.0], [17.0, 255.0], [17.1, 261.0], [17.2, 261.0], [17.3, 261.0], [17.4, 268.0], [17.5, 268.0], [17.6, 268.0], [17.7, 269.0], [17.8, 269.0], [17.9, 269.0], [18.0, 269.0], [18.1, 271.0], [18.2, 271.0], [18.3, 271.0], [18.4, 279.0], [18.5, 279.0], [18.6, 279.0], [18.7, 280.0], [18.8, 280.0], [18.9, 280.0], [19.0, 280.0], [19.1, 282.0], [19.2, 282.0], [19.3, 282.0], [19.4, 310.0], [19.5, 310.0], [19.6, 310.0], [19.7, 314.0], [19.8, 314.0], [19.9, 314.0], [20.0, 321.0], [20.1, 321.0], [20.2, 321.0], [20.3, 321.0], [20.4, 325.0], [20.5, 325.0], [20.6, 325.0], [20.7, 334.0], [20.8, 334.0], [20.9, 334.0], [21.0, 334.0], [21.1, 334.0], [21.2, 334.0], [21.3, 334.0], [21.4, 349.0], [21.5, 349.0], [21.6, 349.0], [21.7, 352.0], [21.8, 352.0], [21.9, 352.0], [22.0, 357.0], [22.1, 357.0], [22.2, 357.0], [22.3, 357.0], [22.4, 357.0], [22.5, 357.0], [22.6, 357.0], [22.7, 360.0], [22.8, 360.0], [22.9, 360.0], [23.0, 362.0], [23.1, 362.0], [23.2, 362.0], [23.3, 362.0], [23.4, 366.0], [23.5, 366.0], [23.6, 366.0], [23.7, 370.0], [23.8, 370.0], [23.9, 370.0], [24.0, 371.0], [24.1, 371.0], [24.2, 371.0], [24.3, 371.0], [24.4, 378.0], [24.5, 378.0], [24.6, 378.0], [24.7, 381.0], [24.8, 381.0], [24.9, 381.0], [25.0, 387.0], [25.1, 387.0], [25.2, 387.0], [25.3, 387.0], [25.4, 387.0], [25.5, 387.0], [25.6, 387.0], [25.7, 391.0], [25.8, 391.0], [25.9, 391.0], [26.0, 401.0], [26.1, 401.0], [26.2, 401.0], [26.3, 401.0], [26.4, 407.0], [26.5, 407.0], [26.6, 407.0], [26.7, 425.0], [26.8, 425.0], [26.9, 425.0], [27.0, 428.0], [27.1, 428.0], [27.2, 428.0], [27.3, 428.0], [27.4, 429.0], [27.5, 429.0], [27.6, 429.0], [27.7, 429.0], [27.8, 429.0], [27.9, 429.0], [28.0, 433.0], [28.1, 433.0], [28.2, 433.0], [28.3, 433.0], [28.4, 439.0], [28.5, 439.0], [28.6, 439.0], [28.7, 441.0], [28.8, 441.0], [28.9, 441.0], [29.0, 448.0], [29.1, 448.0], [29.2, 448.0], [29.3, 448.0], [29.4, 457.0], [29.5, 457.0], [29.6, 457.0], [29.7, 464.0], [29.8, 464.0], [29.9, 464.0], [30.0, 479.0], [30.1, 479.0], [30.2, 479.0], [30.3, 479.0], [30.4, 486.0], [30.5, 486.0], [30.6, 486.0], [30.7, 487.0], [30.8, 487.0], [30.9, 487.0], [31.0, 493.0], [31.1, 493.0], [31.2, 493.0], [31.3, 493.0], [31.4, 497.0], [31.5, 497.0], [31.6, 497.0], [31.7, 501.0], [31.8, 501.0], [31.9, 501.0], [32.0, 506.0], [32.1, 506.0], [32.2, 506.0], [32.3, 506.0], [32.4, 511.0], [32.5, 511.0], [32.6, 511.0], [32.7, 514.0], [32.8, 514.0], [32.9, 514.0], [33.0, 517.0], [33.1, 517.0], [33.2, 517.0], [33.3, 517.0], [33.4, 518.0], [33.5, 518.0], [33.6, 518.0], [33.7, 518.0], [33.8, 518.0], [33.9, 518.0], [34.0, 531.0], [34.1, 531.0], [34.2, 531.0], [34.3, 531.0], [34.4, 537.0], [34.5, 537.0], [34.6, 537.0], [34.7, 543.0], [34.8, 543.0], [34.9, 543.0], [35.0, 549.0], [35.1, 549.0], [35.2, 549.0], [35.3, 549.0], [35.4, 554.0], [35.5, 554.0], [35.6, 554.0], [35.7, 554.0], [35.8, 554.0], [35.9, 554.0], [36.0, 561.0], [36.1, 561.0], [36.2, 561.0], [36.3, 561.0], [36.4, 563.0], [36.5, 563.0], [36.6, 563.0], [36.7, 564.0], [36.8, 564.0], [36.9, 564.0], [37.0, 566.0], [37.1, 566.0], [37.2, 566.0], [37.3, 566.0], [37.4, 566.0], [37.5, 566.0], [37.6, 566.0], [37.7, 573.0], [37.8, 573.0], [37.9, 573.0], [38.0, 583.0], [38.1, 583.0], [38.2, 583.0], [38.3, 583.0], [38.4, 583.0], [38.5, 583.0], [38.6, 583.0], [38.7, 584.0], [38.8, 584.0], [38.9, 584.0], [39.0, 585.0], [39.1, 585.0], [39.2, 585.0], [39.3, 585.0], [39.4, 585.0], [39.5, 585.0], [39.6, 585.0], [39.7, 599.0], [39.8, 599.0], [39.9, 599.0], [40.0, 601.0], [40.1, 601.0], [40.2, 601.0], [40.3, 601.0], [40.4, 602.0], [40.5, 602.0], [40.6, 602.0], [40.7, 631.0], [40.8, 631.0], [40.9, 631.0], [41.0, 669.0], [41.1, 669.0], [41.2, 669.0], [41.3, 669.0], [41.4, 681.0], [41.5, 681.0], [41.6, 681.0], [41.7, 681.0], [41.8, 681.0], [41.9, 681.0], [42.0, 684.0], [42.1, 684.0], [42.2, 684.0], [42.3, 684.0], [42.4, 693.0], [42.5, 693.0], [42.6, 693.0], [42.7, 696.0], [42.8, 696.0], [42.9, 696.0], [43.0, 696.0], [43.1, 698.0], [43.2, 698.0], [43.3, 698.0], [43.4, 705.0], [43.5, 705.0], [43.6, 705.0], [43.7, 710.0], [43.8, 710.0], [43.9, 710.0], [44.0, 710.0], [44.1, 712.0], [44.2, 712.0], [44.3, 712.0], [44.4, 722.0], [44.5, 722.0], [44.6, 722.0], [44.7, 722.0], [44.8, 722.0], [44.9, 722.0], [45.0, 722.0], [45.1, 734.0], [45.2, 734.0], [45.3, 734.0], [45.4, 738.0], [45.5, 738.0], [45.6, 738.0], [45.7, 742.0], [45.8, 742.0], [45.9, 742.0], [46.0, 742.0], [46.1, 754.0], [46.2, 754.0], [46.3, 754.0], [46.4, 768.0], [46.5, 768.0], [46.6, 768.0], [46.7, 774.0], [46.8, 774.0], [46.9, 774.0], [47.0, 774.0], [47.1, 776.0], [47.2, 776.0], [47.3, 776.0], [47.4, 786.0], [47.5, 786.0], [47.6, 786.0], [47.7, 794.0], [47.8, 794.0], [47.9, 794.0], [48.0, 794.0], [48.1, 796.0], [48.2, 796.0], [48.3, 796.0], [48.4, 799.0], [48.5, 799.0], [48.6, 799.0], [48.7, 829.0], [48.8, 829.0], [48.9, 829.0], [49.0, 829.0], [49.1, 843.0], [49.2, 843.0], [49.3, 843.0], [49.4, 844.0], [49.5, 844.0], [49.6, 844.0], [49.7, 848.0], [49.8, 848.0], [49.9, 848.0], [50.0, 848.0], [50.1, 887.0], [50.2, 887.0], [50.3, 887.0], [50.4, 888.0], [50.5, 888.0], [50.6, 888.0], [50.7, 890.0], [50.8, 890.0], [50.9, 890.0], [51.0, 890.0], [51.1, 899.0], [51.2, 899.0], [51.3, 899.0], [51.4, 914.0], [51.5, 914.0], [51.6, 914.0], [51.7, 929.0], [51.8, 929.0], [51.9, 929.0], [52.0, 929.0], [52.1, 932.0], [52.2, 932.0], [52.3, 932.0], [52.4, 936.0], [52.5, 936.0], [52.6, 936.0], [52.7, 939.0], [52.8, 939.0], [52.9, 939.0], [53.0, 939.0], [53.1, 956.0], [53.2, 956.0], [53.3, 956.0], [53.4, 957.0], [53.5, 957.0], [53.6, 957.0], [53.7, 960.0], [53.8, 960.0], [53.9, 960.0], [54.0, 960.0], [54.1, 984.0], [54.2, 984.0], [54.3, 984.0], [54.4, 985.0], [54.5, 985.0], [54.6, 985.0], [54.7, 991.0], [54.8, 991.0], [54.9, 991.0], [55.0, 991.0], [55.1, 996.0], [55.2, 996.0], [55.3, 996.0], [55.4, 1003.0], [55.5, 1003.0], [55.6, 1003.0], [55.7, 1008.0], [55.8, 1008.0], [55.9, 1008.0], [56.0, 1008.0], [56.1, 1011.0], [56.2, 1011.0], [56.3, 1011.0], [56.4, 1019.0], [56.5, 1019.0], [56.6, 1019.0], [56.7, 1025.0], [56.8, 1025.0], [56.9, 1025.0], [57.0, 1025.0], [57.1, 1028.0], [57.2, 1028.0], [57.3, 1028.0], [57.4, 1049.0], [57.5, 1049.0], [57.6, 1049.0], [57.7, 1065.0], [57.8, 1065.0], [57.9, 1065.0], [58.0, 1065.0], [58.1, 1073.0], [58.2, 1073.0], [58.3, 1073.0], [58.4, 1080.0], [58.5, 1080.0], [58.6, 1080.0], [58.7, 1084.0], [58.8, 1084.0], [58.9, 1084.0], [59.0, 1084.0], [59.1, 1085.0], [59.2, 1085.0], [59.3, 1085.0], [59.4, 1089.0], [59.5, 1089.0], [59.6, 1089.0], [59.7, 1093.0], [59.8, 1093.0], [59.9, 1093.0], [60.0, 1093.0], [60.1, 1095.0], [60.2, 1095.0], [60.3, 1095.0], [60.4, 1098.0], [60.5, 1098.0], [60.6, 1098.0], [60.7, 1100.0], [60.8, 1100.0], [60.9, 1100.0], [61.0, 1100.0], [61.1, 1100.0], [61.2, 1100.0], [61.3, 1100.0], [61.4, 1102.0], [61.5, 1102.0], [61.6, 1102.0], [61.7, 1105.0], [61.8, 1105.0], [61.9, 1105.0], [62.0, 1105.0], [62.1, 1106.0], [62.2, 1106.0], [62.3, 1106.0], [62.4, 1108.0], [62.5, 1108.0], [62.6, 1108.0], [62.7, 1112.0], [62.8, 1112.0], [62.9, 1112.0], [63.0, 1112.0], [63.1, 1112.0], [63.2, 1112.0], [63.3, 1112.0], [63.4, 1118.0], [63.5, 1118.0], [63.6, 1118.0], [63.7, 1120.0], [63.8, 1120.0], [63.9, 1120.0], [64.0, 1120.0], [64.1, 1120.0], [64.2, 1120.0], [64.3, 1120.0], [64.4, 1125.0], [64.5, 1125.0], [64.6, 1125.0], [64.7, 1126.0], [64.8, 1126.0], [64.9, 1126.0], [65.0, 1126.0], [65.1, 1131.0], [65.2, 1131.0], [65.3, 1131.0], [65.4, 1136.0], [65.5, 1136.0], [65.6, 1136.0], [65.7, 1138.0], [65.8, 1138.0], [65.9, 1138.0], [66.0, 1138.0], [66.1, 1139.0], [66.2, 1139.0], [66.3, 1139.0], [66.4, 1140.0], [66.5, 1140.0], [66.6, 1140.0], [66.7, 1146.0], [66.8, 1146.0], [66.9, 1146.0], [67.0, 1146.0], [67.1, 1147.0], [67.2, 1147.0], [67.3, 1147.0], [67.4, 1150.0], [67.5, 1150.0], [67.6, 1150.0], [67.7, 1176.0], [67.8, 1176.0], [67.9, 1176.0], [68.0, 1176.0], [68.1, 1182.0], [68.2, 1182.0], [68.3, 1182.0], [68.4, 1194.0], [68.5, 1194.0], [68.6, 1194.0], [68.7, 1199.0], [68.8, 1199.0], [68.9, 1199.0], [69.0, 1199.0], [69.1, 1216.0], [69.2, 1216.0], [69.3, 1216.0], [69.4, 1220.0], [69.5, 1220.0], [69.6, 1220.0], [69.7, 1236.0], [69.8, 1236.0], [69.9, 1236.0], [70.0, 1236.0], [70.1, 1238.0], [70.2, 1238.0], [70.3, 1238.0], [70.4, 1239.0], [70.5, 1239.0], [70.6, 1239.0], [70.7, 1248.0], [70.8, 1248.0], [70.9, 1248.0], [71.0, 1248.0], [71.1, 1261.0], [71.2, 1261.0], [71.3, 1261.0], [71.4, 1265.0], [71.5, 1265.0], [71.6, 1265.0], [71.7, 1271.0], [71.8, 1271.0], [71.9, 1271.0], [72.0, 1271.0], [72.1, 1278.0], [72.2, 1278.0], [72.3, 1278.0], [72.4, 1292.0], [72.5, 1292.0], [72.6, 1292.0], [72.7, 1293.0], [72.8, 1293.0], [72.9, 1293.0], [73.0, 1293.0], [73.1, 1295.0], [73.2, 1295.0], [73.3, 1295.0], [73.4, 1296.0], [73.5, 1296.0], [73.6, 1296.0], [73.7, 1311.0], [73.8, 1311.0], [73.9, 1311.0], [74.0, 1312.0], [74.1, 1312.0], [74.2, 1312.0], [74.3, 1312.0], [74.4, 1321.0], [74.5, 1321.0], [74.6, 1321.0], [74.7, 1322.0], [74.8, 1322.0], [74.9, 1322.0], [75.0, 1324.0], [75.1, 1324.0], [75.2, 1324.0], [75.3, 1324.0], [75.4, 1329.0], [75.5, 1329.0], [75.6, 1329.0], [75.7, 1332.0], [75.8, 1332.0], [75.9, 1332.0], [76.0, 1360.0], [76.1, 1360.0], [76.2, 1360.0], [76.3, 1360.0], [76.4, 1363.0], [76.5, 1363.0], [76.6, 1363.0], [76.7, 1367.0], [76.8, 1367.0], [76.9, 1367.0], [77.0, 1373.0], [77.1, 1373.0], [77.2, 1373.0], [77.3, 1373.0], [77.4, 1375.0], [77.5, 1375.0], [77.6, 1375.0], [77.7, 1393.0], [77.8, 1393.0], [77.9, 1393.0], [78.0, 1396.0], [78.1, 1396.0], [78.2, 1396.0], [78.3, 1396.0], [78.4, 1396.0], [78.5, 1396.0], [78.6, 1396.0], [78.7, 1408.0], [78.8, 1408.0], [78.9, 1408.0], [79.0, 1422.0], [79.1, 1422.0], [79.2, 1422.0], [79.3, 1422.0], [79.4, 1429.0], [79.5, 1429.0], [79.6, 1429.0], [79.7, 1450.0], [79.8, 1450.0], [79.9, 1450.0], [80.0, 1479.0], [80.1, 1479.0], [80.2, 1479.0], [80.3, 1479.0], [80.4, 1507.0], [80.5, 1507.0], [80.6, 1507.0], [80.7, 1513.0], [80.8, 1513.0], [80.9, 1513.0], [81.0, 1513.0], [81.1, 1513.0], [81.2, 1513.0], [81.3, 1513.0], [81.4, 1514.0], [81.5, 1514.0], [81.6, 1514.0], [81.7, 1517.0], [81.8, 1517.0], [81.9, 1517.0], [82.0, 1529.0], [82.1, 1529.0], [82.2, 1529.0], [82.3, 1529.0], [82.4, 1530.0], [82.5, 1530.0], [82.6, 1530.0], [82.7, 1534.0], [82.8, 1534.0], [82.9, 1534.0], [83.0, 1537.0], [83.1, 1537.0], [83.2, 1537.0], [83.3, 1537.0], [83.4, 1539.0], [83.5, 1539.0], [83.6, 1539.0], [83.7, 1547.0], [83.8, 1547.0], [83.9, 1547.0], [84.0, 1551.0], [84.1, 1551.0], [84.2, 1551.0], [84.3, 1551.0], [84.4, 1559.0], [84.5, 1559.0], [84.6, 1559.0], [84.7, 1560.0], [84.8, 1560.0], [84.9, 1560.0], [85.0, 1573.0], [85.1, 1573.0], [85.2, 1573.0], [85.3, 1573.0], [85.4, 1587.0], [85.5, 1587.0], [85.6, 1587.0], [85.7, 1587.0], [85.8, 1587.0], [85.9, 1587.0], [86.0, 1588.0], [86.1, 1588.0], [86.2, 1588.0], [86.3, 1588.0], [86.4, 1602.0], [86.5, 1602.0], [86.6, 1602.0], [86.7, 1602.0], [86.8, 1602.0], [86.9, 1602.0], [87.0, 1606.0], [87.1, 1606.0], [87.2, 1606.0], [87.3, 1606.0], [87.4, 1614.0], [87.5, 1614.0], [87.6, 1614.0], [87.7, 1614.0], [87.8, 1614.0], [87.9, 1614.0], [88.0, 1627.0], [88.1, 1627.0], [88.2, 1627.0], [88.3, 1627.0], [88.4, 1630.0], [88.5, 1630.0], [88.6, 1630.0], [88.7, 1635.0], [88.8, 1635.0], [88.9, 1635.0], [89.0, 1640.0], [89.1, 1640.0], [89.2, 1640.0], [89.3, 1640.0], [89.4, 1654.0], [89.5, 1654.0], [89.6, 1654.0], [89.7, 1665.0], [89.8, 1665.0], [89.9, 1665.0], [90.0, 1668.0], [90.1, 1668.0], [90.2, 1668.0], [90.3, 1668.0], [90.4, 1668.0], [90.5, 1668.0], [90.6, 1668.0], [90.7, 1676.0], [90.8, 1676.0], [90.9, 1676.0], [91.0, 1702.0], [91.1, 1702.0], [91.2, 1702.0], [91.3, 1702.0], [91.4, 1708.0], [91.5, 1708.0], [91.6, 1708.0], [91.7, 1708.0], [91.8, 1708.0], [91.9, 1708.0], [92.0, 1709.0], [92.1, 1709.0], [92.2, 1709.0], [92.3, 1709.0], [92.4, 1713.0], [92.5, 1713.0], [92.6, 1713.0], [92.7, 1717.0], [92.8, 1717.0], [92.9, 1717.0], [93.0, 1721.0], [93.1, 1721.0], [93.2, 1721.0], [93.3, 1721.0], [93.4, 1725.0], [93.5, 1725.0], [93.6, 1725.0], [93.7, 1752.0], [93.8, 1752.0], [93.9, 1752.0], [94.0, 1762.0], [94.1, 1762.0], [94.2, 1762.0], [94.3, 1762.0], [94.4, 1770.0], [94.5, 1770.0], [94.6, 1770.0], [94.7, 1823.0], [94.8, 1823.0], [94.9, 1823.0], [95.0, 1835.0], [95.1, 1835.0], [95.2, 1835.0], [95.3, 1835.0], [95.4, 1844.0], [95.5, 1844.0], [95.6, 1844.0], [95.7, 1851.0], [95.8, 1851.0], [95.9, 1851.0], [96.0, 1887.0], [96.1, 1887.0], [96.2, 1887.0], [96.3, 1887.0], [96.4, 1913.0], [96.5, 1913.0], [96.6, 1913.0], [96.7, 1916.0], [96.8, 1916.0], [96.9, 1916.0], [97.0, 1993.0], [97.1, 1993.0], [97.2, 1993.0], [97.3, 1993.0], [97.4, 2020.0], [97.5, 2020.0], [97.6, 2020.0], [97.7, 2023.0], [97.8, 2023.0], [97.9, 2023.0], [98.0, 2092.0], [98.1, 2092.0], [98.2, 2092.0], [98.3, 2092.0], [98.4, 2117.0], [98.5, 2117.0], [98.6, 2117.0], [98.7, 2206.0], [98.8, 2206.0], [98.9, 2206.0], [99.0, 2212.0], [99.1, 2212.0], [99.2, 2212.0], [99.3, 2212.0], [99.4, 2358.0], [99.5, 2358.0], [99.6, 2358.0], [99.7, 3771.0], [99.8, 3771.0], [99.9, 3771.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[0.0, 12.0], [0.1, 12.0], [0.2, 12.0], [0.3, 14.0], [0.4, 17.0], [0.5, 17.0], [0.6, 18.0], [0.7, 24.0], [0.8, 29.0], [0.9, 31.0], [1.0, 31.0], [1.1, 33.0], [1.2, 34.0], [1.3, 36.0], [1.4, 40.0], [1.5, 43.0], [1.6, 45.0], [1.7, 45.0], [1.8, 45.0], [1.9, 45.0], [2.0, 45.0], [2.1, 46.0], [2.2, 47.0], [2.3, 48.0], [2.4, 51.0], [2.5, 53.0], [2.6, 55.0], [2.7, 55.0], [2.8, 55.0], [2.9, 56.0], [3.0, 56.0], [3.1, 60.0], [3.2, 63.0], [3.3, 63.0], [3.4, 67.0], [3.5, 70.0], [3.6, 70.0], [3.7, 71.0], [3.8, 72.0], [3.9, 74.0], [4.0, 74.0], [4.1, 74.0], [4.2, 74.0], [4.3, 75.0], [4.4, 82.0], [4.5, 83.0], [4.6, 84.0], [4.7, 85.0], [4.8, 85.0], [4.9, 89.0], [5.0, 97.0], [5.1, 97.0], [5.2, 98.0], [5.3, 98.0], [5.4, 105.0], [5.5, 115.0], [5.6, 117.0], [5.7, 118.0], [5.8, 119.0], [5.9, 120.0], [6.0, 120.0], [6.1, 120.0], [6.2, 121.0], [6.3, 121.0], [6.4, 122.0], [6.5, 122.0], [6.6, 123.0], [6.7, 123.0], [6.8, 125.0], [6.9, 126.0], [7.0, 127.0], [7.1, 127.0], [7.2, 127.0], [7.3, 127.0], [7.4, 128.0], [7.5, 130.0], [7.6, 131.0], [7.7, 131.0], [7.8, 135.0], [7.9, 136.0], [8.0, 137.0], [8.1, 137.0], [8.2, 138.0], [8.3, 138.0], [8.4, 145.0], [8.5, 148.0], [8.6, 151.0], [8.7, 151.0], [8.8, 154.0], [8.9, 155.0], [9.0, 156.0], [9.1, 156.0], [9.2, 169.0], [9.3, 171.0], [9.4, 173.0], [9.5, 178.0], [9.6, 183.0], [9.7, 186.0], [9.8, 188.0], [9.9, 189.0], [10.0, 191.0], [10.1, 191.0], [10.2, 194.0], [10.3, 199.0], [10.4, 204.0], [10.5, 206.0], [10.6, 209.0], [10.7, 212.0], [10.8, 218.0], [10.9, 219.0], [11.0, 223.0], [11.1, 223.0], [11.2, 225.0], [11.3, 226.0], [11.4, 227.0], [11.5, 228.0], [11.6, 228.0], [11.7, 229.0], [11.8, 231.0], [11.9, 232.0], [12.0, 232.0], [12.1, 232.0], [12.2, 235.0], [12.3, 242.0], [12.4, 248.0], [12.5, 251.0], [12.6, 251.0], [12.7, 279.0], [12.8, 284.0], [12.9, 289.0], [13.0, 295.0], [13.1, 295.0], [13.2, 297.0], [13.3, 308.0], [13.4, 317.0], [13.5, 319.0], [13.6, 325.0], [13.7, 327.0], [13.8, 327.0], [13.9, 332.0], [14.0, 333.0], [14.1, 333.0], [14.2, 343.0], [14.3, 343.0], [14.4, 347.0], [14.5, 347.0], [14.6, 355.0], [14.7, 358.0], [14.8, 360.0], [14.9, 361.0], [15.0, 363.0], [15.1, 363.0], [15.2, 363.0], [15.3, 364.0], [15.4, 368.0], [15.5, 371.0], [15.6, 394.0], [15.7, 397.0], [15.8, 401.0], [15.9, 425.0], [16.0, 427.0], [16.1, 427.0], [16.2, 433.0], [16.3, 462.0], [16.4, 462.0], [16.5, 469.0], [16.6, 473.0], [16.7, 486.0], [16.8, 496.0], [16.9, 497.0], [17.0, 497.0], [17.1, 497.0], [17.2, 505.0], [17.3, 509.0], [17.4, 517.0], [17.5, 520.0], [17.6, 523.0], [17.7, 530.0], [17.8, 551.0], [17.9, 552.0], [18.0, 553.0], [18.1, 553.0], [18.2, 557.0], [18.3, 558.0], [18.4, 560.0], [18.5, 564.0], [18.6, 571.0], [18.7, 574.0], [18.8, 575.0], [18.9, 578.0], [19.0, 578.0], [19.1, 578.0], [19.2, 579.0], [19.3, 580.0], [19.4, 582.0], [19.5, 583.0], [19.6, 590.0], [19.7, 590.0], [19.8, 592.0], [19.9, 594.0], [20.0, 596.0], [20.1, 596.0], [20.2, 598.0], [20.3, 607.0], [20.4, 612.0], [20.5, 614.0], [20.6, 620.0], [20.7, 623.0], [20.8, 625.0], [20.9, 626.0], [21.0, 628.0], [21.1, 628.0], [21.2, 637.0], [21.3, 637.0], [21.4, 652.0], [21.5, 657.0], [21.6, 663.0], [21.7, 672.0], [21.8, 672.0], [21.9, 675.0], [22.0, 675.0], [22.1, 675.0], [22.2, 679.0], [22.3, 680.0], [22.4, 681.0], [22.5, 685.0], [22.6, 694.0], [22.7, 695.0], [22.8, 697.0], [22.9, 700.0], [23.0, 702.0], [23.1, 702.0], [23.2, 703.0], [23.3, 705.0], [23.4, 709.0], [23.5, 710.0], [23.6, 716.0], [23.7, 720.0], [23.8, 721.0], [23.9, 725.0], [24.0, 729.0], [24.1, 729.0], [24.2, 729.0], [24.3, 731.0], [24.4, 731.0], [24.5, 732.0], [24.6, 736.0], [24.7, 740.0], [24.8, 740.0], [24.9, 742.0], [25.0, 743.0], [25.1, 743.0], [25.2, 745.0], [25.3, 746.0], [25.4, 747.0], [25.5, 747.0], [25.6, 751.0], [25.7, 752.0], [25.8, 754.0], [25.9, 758.0], [26.0, 759.0], [26.1, 759.0], [26.2, 763.0], [26.3, 763.0], [26.4, 764.0], [26.5, 764.0], [26.6, 767.0], [26.7, 769.0], [26.8, 770.0], [26.9, 770.0], [27.0, 770.0], [27.1, 770.0], [27.2, 774.0], [27.3, 774.0], [27.4, 775.0], [27.5, 780.0], [27.6, 790.0], [27.7, 790.0], [27.8, 791.0], [27.9, 791.0], [28.0, 792.0], [28.1, 792.0], [28.2, 793.0], [28.3, 794.0], [28.4, 796.0], [28.5, 796.0], [28.6, 799.0], [28.7, 801.0], [28.8, 804.0], [28.9, 805.0], [29.0, 812.0], [29.1, 812.0], [29.2, 815.0], [29.3, 815.0], [29.4, 821.0], [29.5, 823.0], [29.6, 824.0], [29.7, 824.0], [29.8, 829.0], [29.9, 830.0], [30.0, 831.0], [30.1, 831.0], [30.2, 832.0], [30.3, 838.0], [30.4, 838.0], [30.5, 839.0], [30.6, 840.0], [30.7, 843.0], [30.8, 844.0], [30.9, 849.0], [31.0, 849.0], [31.1, 849.0], [31.2, 855.0], [31.3, 858.0], [31.4, 859.0], [31.5, 859.0], [31.6, 864.0], [31.7, 868.0], [31.8, 871.0], [31.9, 871.0], [32.0, 874.0], [32.1, 874.0], [32.2, 876.0], [32.3, 882.0], [32.4, 890.0], [32.5, 898.0], [32.6, 900.0], [32.7, 902.0], [32.8, 903.0], [32.9, 904.0], [33.0, 911.0], [33.1, 911.0], [33.2, 913.0], [33.3, 913.0], [33.4, 916.0], [33.5, 930.0], [33.6, 931.0], [33.7, 934.0], [33.8, 934.0], [33.9, 935.0], [34.0, 941.0], [34.1, 941.0], [34.2, 942.0], [34.3, 943.0], [34.4, 952.0], [34.5, 959.0], [34.6, 959.0], [34.7, 964.0], [34.8, 964.0], [34.9, 966.0], [35.0, 969.0], [35.1, 969.0], [35.2, 971.0], [35.3, 973.0], [35.4, 977.0], [35.5, 981.0], [35.6, 984.0], [35.7, 991.0], [35.8, 991.0], [35.9, 995.0], [36.0, 998.0], [36.1, 998.0], [36.2, 998.0], [36.3, 1003.0], [36.4, 1003.0], [36.5, 1004.0], [36.6, 1005.0], [36.7, 1005.0], [36.8, 1007.0], [36.9, 1008.0], [37.0, 1009.0], [37.1, 1009.0], [37.2, 1014.0], [37.3, 1014.0], [37.4, 1017.0], [37.5, 1018.0], [37.6, 1019.0], [37.7, 1021.0], [37.8, 1022.0], [37.9, 1023.0], [38.0, 1023.0], [38.1, 1024.0], [38.2, 1025.0], [38.3, 1026.0], [38.4, 1026.0], [38.5, 1027.0], [38.6, 1027.0], [38.7, 1029.0], [38.8, 1031.0], [38.9, 1032.0], [39.0, 1032.0], [39.1, 1034.0], [39.2, 1036.0], [39.3, 1036.0], [39.4, 1038.0], [39.5, 1038.0], [39.6, 1039.0], [39.7, 1039.0], [39.8, 1040.0], [39.9, 1042.0], [40.0, 1042.0], [40.1, 1043.0], [40.2, 1046.0], [40.3, 1047.0], [40.4, 1050.0], [40.5, 1054.0], [40.6, 1056.0], [40.7, 1056.0], [40.8, 1060.0], [40.9, 1061.0], [41.0, 1061.0], [41.1, 1063.0], [41.2, 1064.0], [41.3, 1064.0], [41.4, 1065.0], [41.5, 1066.0], [41.6, 1070.0], [41.7, 1072.0], [41.8, 1073.0], [41.9, 1073.0], [42.0, 1073.0], [42.1, 1075.0], [42.2, 1075.0], [42.3, 1076.0], [42.4, 1077.0], [42.5, 1079.0], [42.6, 1081.0], [42.7, 1086.0], [42.8, 1088.0], [42.9, 1090.0], [43.0, 1090.0], [43.1, 1091.0], [43.2, 1092.0], [43.3, 1093.0], [43.4, 1096.0], [43.5, 1099.0], [43.6, 1101.0], [43.7, 1107.0], [43.8, 1109.0], [43.9, 1112.0], [44.0, 1112.0], [44.1, 1114.0], [44.2, 1117.0], [44.3, 1119.0], [44.4, 1120.0], [44.5, 1120.0], [44.6, 1122.0], [44.7, 1125.0], [44.8, 1128.0], [44.9, 1135.0], [45.0, 1135.0], [45.1, 1137.0], [45.2, 1139.0], [45.3, 1140.0], [45.4, 1143.0], [45.5, 1144.0], [45.6, 1144.0], [45.7, 1145.0], [45.8, 1151.0], [45.9, 1153.0], [46.0, 1153.0], [46.1, 1156.0], [46.2, 1156.0], [46.3, 1158.0], [46.4, 1160.0], [46.5, 1162.0], [46.6, 1163.0], [46.7, 1166.0], [46.8, 1167.0], [46.9, 1169.0], [47.0, 1169.0], [47.1, 1170.0], [47.2, 1170.0], [47.3, 1170.0], [47.4, 1171.0], [47.5, 1173.0], [47.6, 1174.0], [47.7, 1175.0], [47.8, 1183.0], [47.9, 1187.0], [48.0, 1187.0], [48.1, 1187.0], [48.2, 1188.0], [48.3, 1188.0], [48.4, 1193.0], [48.5, 1195.0], [48.6, 1197.0], [48.7, 1198.0], [48.8, 1198.0], [48.9, 1200.0], [49.0, 1200.0], [49.1, 1204.0], [49.2, 1210.0], [49.3, 1213.0], [49.4, 1213.0], [49.5, 1215.0], [49.6, 1215.0], [49.7, 1217.0], [49.8, 1219.0], [49.9, 1220.0], [50.0, 1220.0], [50.1, 1221.0], [50.2, 1224.0], [50.3, 1227.0], [50.4, 1231.0], [50.5, 1232.0], [50.6, 1237.0], [50.7, 1239.0], [50.8, 1244.0], [50.9, 1245.0], [51.0, 1245.0], [51.1, 1249.0], [51.2, 1257.0], [51.3, 1259.0], [51.4, 1261.0], [51.5, 1262.0], [51.6, 1262.0], [51.7, 1264.0], [51.8, 1268.0], [51.9, 1272.0], [52.0, 1272.0], [52.1, 1273.0], [52.2, 1276.0], [52.3, 1278.0], [52.4, 1281.0], [52.5, 1282.0], [52.6, 1282.0], [52.7, 1283.0], [52.8, 1294.0], [52.9, 1295.0], [53.0, 1295.0], [53.1, 1296.0], [53.2, 1297.0], [53.3, 1297.0], [53.4, 1298.0], [53.5, 1301.0], [53.6, 1301.0], [53.7, 1308.0], [53.8, 1308.0], [53.9, 1309.0], [54.0, 1309.0], [54.1, 1311.0], [54.2, 1312.0], [54.3, 1313.0], [54.4, 1317.0], [54.5, 1318.0], [54.6, 1319.0], [54.7, 1321.0], [54.8, 1326.0], [54.9, 1332.0], [55.0, 1332.0], [55.1, 1337.0], [55.2, 1339.0], [55.3, 1344.0], [55.4, 1345.0], [55.5, 1345.0], [55.6, 1345.0], [55.7, 1349.0], [55.8, 1349.0], [55.9, 1351.0], [56.0, 1351.0], [56.1, 1352.0], [56.2, 1354.0], [56.3, 1356.0], [56.4, 1358.0], [56.5, 1361.0], [56.6, 1362.0], [56.7, 1364.0], [56.8, 1365.0], [56.9, 1366.0], [57.0, 1366.0], [57.1, 1368.0], [57.2, 1369.0], [57.3, 1370.0], [57.4, 1372.0], [57.5, 1372.0], [57.6, 1373.0], [57.7, 1381.0], [57.8, 1388.0], [57.9, 1388.0], [58.0, 1388.0], [58.1, 1388.0], [58.2, 1394.0], [58.3, 1394.0], [58.4, 1394.0], [58.5, 1395.0], [58.6, 1395.0], [58.7, 1396.0], [58.8, 1396.0], [58.9, 1396.0], [59.0, 1396.0], [59.1, 1397.0], [59.2, 1400.0], [59.3, 1400.0], [59.4, 1403.0], [59.5, 1403.0], [59.6, 1403.0], [59.7, 1404.0], [59.8, 1405.0], [59.9, 1407.0], [60.0, 1407.0], [60.1, 1413.0], [60.2, 1413.0], [60.3, 1416.0], [60.4, 1416.0], [60.5, 1416.0], [60.6, 1432.0], [60.7, 1433.0], [60.8, 1433.0], [60.9, 1433.0], [61.0, 1433.0], [61.1, 1434.0], [61.2, 1434.0], [61.3, 1434.0], [61.4, 1438.0], [61.5, 1442.0], [61.6, 1442.0], [61.7, 1447.0], [61.8, 1453.0], [61.9, 1453.0], [62.0, 1453.0], [62.1, 1461.0], [62.2, 1465.0], [62.3, 1466.0], [62.4, 1469.0], [62.5, 1472.0], [62.6, 1476.0], [62.7, 1479.0], [62.8, 1489.0], [62.9, 1490.0], [63.0, 1490.0], [63.1, 1490.0], [63.2, 1492.0], [63.3, 1494.0], [63.4, 1495.0], [63.5, 1496.0], [63.6, 1503.0], [63.7, 1509.0], [63.8, 1510.0], [63.9, 1514.0], [64.0, 1514.0], [64.1, 1514.0], [64.2, 1517.0], [64.3, 1520.0], [64.4, 1521.0], [64.5, 1529.0], [64.6, 1530.0], [64.7, 1533.0], [64.8, 1533.0], [64.9, 1537.0], [65.0, 1537.0], [65.1, 1540.0], [65.2, 1540.0], [65.3, 1540.0], [65.4, 1541.0], [65.5, 1543.0], [65.6, 1543.0], [65.7, 1546.0], [65.8, 1550.0], [65.9, 1554.0], [66.0, 1554.0], [66.1, 1559.0], [66.2, 1561.0], [66.3, 1562.0], [66.4, 1563.0], [66.5, 1564.0], [66.6, 1567.0], [66.7, 1570.0], [66.8, 1570.0], [66.9, 1572.0], [67.0, 1572.0], [67.1, 1572.0], [67.2, 1579.0], [67.3, 1579.0], [67.4, 1581.0], [67.5, 1582.0], [67.6, 1585.0], [67.7, 1587.0], [67.8, 1596.0], [67.9, 1597.0], [68.0, 1597.0], [68.1, 1603.0], [68.2, 1610.0], [68.3, 1611.0], [68.4, 1612.0], [68.5, 1612.0], [68.6, 1618.0], [68.7, 1618.0], [68.8, 1623.0], [68.9, 1640.0], [69.0, 1640.0], [69.1, 1640.0], [69.2, 1641.0], [69.3, 1648.0], [69.4, 1650.0], [69.5, 1656.0], [69.6, 1657.0], [69.7, 1661.0], [69.8, 1669.0], [69.9, 1673.0], [70.0, 1673.0], [70.1, 1680.0], [70.2, 1686.0], [70.3, 1690.0], [70.4, 1692.0], [70.5, 1694.0], [70.6, 1696.0], [70.7, 1699.0], [70.8, 1701.0], [70.9, 1713.0], [71.0, 1713.0], [71.1, 1714.0], [71.2, 1715.0], [71.3, 1718.0], [71.4, 1729.0], [71.5, 1732.0], [71.6, 1738.0], [71.7, 1742.0], [71.8, 1743.0], [71.9, 1750.0], [72.0, 1750.0], [72.1, 1751.0], [72.2, 1759.0], [72.3, 1760.0], [72.4, 1766.0], [72.5, 1767.0], [72.6, 1777.0], [72.7, 1785.0], [72.8, 1793.0], [72.9, 1795.0], [73.0, 1795.0], [73.1, 1798.0], [73.2, 1802.0], [73.3, 1804.0], [73.4, 1804.0], [73.5, 1807.0], [73.6, 1825.0], [73.7, 1828.0], [73.8, 1828.0], [73.9, 1836.0], [74.0, 1836.0], [74.1, 1841.0], [74.2, 1841.0], [74.3, 1843.0], [74.4, 1846.0], [74.5, 1855.0], [74.6, 1858.0], [74.7, 1864.0], [74.8, 1868.0], [74.9, 1873.0], [75.0, 1873.0], [75.1, 1875.0], [75.2, 1878.0], [75.3, 1883.0], [75.4, 1884.0], [75.5, 1886.0], [75.6, 1890.0], [75.7, 1891.0], [75.8, 1899.0], [75.9, 1899.0], [76.0, 1899.0], [76.1, 1899.0], [76.2, 1913.0], [76.3, 1918.0], [76.4, 1920.0], [76.5, 1921.0], [76.6, 1924.0], [76.7, 1925.0], [76.8, 1940.0], [76.9, 1944.0], [77.0, 1944.0], [77.1, 1951.0], [77.2, 1952.0], [77.3, 1952.0], [77.4, 1954.0], [77.5, 1955.0], [77.6, 1957.0], [77.7, 1961.0], [77.8, 1963.0], [77.9, 1964.0], [78.0, 1964.0], [78.1, 1965.0], [78.2, 1966.0], [78.3, 1968.0], [78.4, 1974.0], [78.5, 1982.0], [78.6, 1985.0], [78.7, 1985.0], [78.8, 1993.0], [78.9, 1997.0], [79.0, 1997.0], [79.1, 2005.0], [79.2, 2007.0], [79.3, 2019.0], [79.4, 2020.0], [79.5, 2022.0], [79.6, 2023.0], [79.7, 2031.0], [79.8, 2032.0], [79.9, 2033.0], [80.0, 2033.0], [80.1, 2034.0], [80.2, 2037.0], [80.3, 2038.0], [80.4, 2046.0], [80.5, 2047.0], [80.6, 2048.0], [80.7, 2060.0], [80.8, 2060.0], [80.9, 2061.0], [81.0, 2061.0], [81.1, 2064.0], [81.2, 2064.0], [81.3, 2068.0], [81.4, 2069.0], [81.5, 2069.0], [81.6, 2069.0], [81.7, 2073.0], [81.8, 2074.0], [81.9, 2080.0], [82.0, 2080.0], [82.1, 2088.0], [82.2, 2089.0], [82.3, 2109.0], [82.4, 2112.0], [82.5, 2113.0], [82.6, 2114.0], [82.7, 2121.0], [82.8, 2121.0], [82.9, 2126.0], [83.0, 2126.0], [83.1, 2158.0], [83.2, 2160.0], [83.3, 2162.0], [83.4, 2165.0], [83.5, 2168.0], [83.6, 2172.0], [83.7, 2178.0], [83.8, 2185.0], [83.9, 2190.0], [84.0, 2190.0], [84.1, 2191.0], [84.2, 2194.0], [84.3, 2196.0], [84.4, 2199.0], [84.5, 2201.0], [84.6, 2201.0], [84.7, 2202.0], [84.8, 2209.0], [84.9, 2212.0], [85.0, 2212.0], [85.1, 2212.0], [85.2, 2228.0], [85.3, 2230.0], [85.4, 2232.0], [85.5, 2234.0], [85.6, 2242.0], [85.7, 2242.0], [85.8, 2248.0], [85.9, 2250.0], [86.0, 2250.0], [86.1, 2254.0], [86.2, 2258.0], [86.3, 2261.0], [86.4, 2269.0], [86.5, 2272.0], [86.6, 2276.0], [86.7, 2288.0], [86.8, 2294.0], [86.9, 2298.0], [87.0, 2298.0], [87.1, 2298.0], [87.2, 2300.0], [87.3, 2301.0], [87.4, 2304.0], [87.5, 2304.0], [87.6, 2315.0], [87.7, 2321.0], [87.8, 2322.0], [87.9, 2326.0], [88.0, 2326.0], [88.1, 2327.0], [88.2, 2331.0], [88.3, 2342.0], [88.4, 2343.0], [88.5, 2347.0], [88.6, 2348.0], [88.7, 2352.0], [88.8, 2353.0], [88.9, 2356.0], [89.0, 2356.0], [89.1, 2357.0], [89.2, 2362.0], [89.3, 2366.0], [89.4, 2383.0], [89.5, 2386.0], [89.6, 2387.0], [89.7, 2390.0], [89.8, 2413.0], [89.9, 2434.0], [90.0, 2434.0], [90.1, 2437.0], [90.2, 2444.0], [90.3, 2449.0], [90.4, 2463.0], [90.5, 2466.0], [90.6, 2468.0], [90.7, 2468.0], [90.8, 2474.0], [90.9, 2475.0], [91.0, 2475.0], [91.1, 2481.0], [91.2, 2484.0], [91.3, 2491.0], [91.4, 2506.0], [91.5, 2507.0], [91.6, 2510.0], [91.7, 2536.0], [91.8, 2547.0], [91.9, 2549.0], [92.0, 2549.0], [92.1, 2550.0], [92.2, 2554.0], [92.3, 2565.0], [92.4, 2571.0], [92.5, 2590.0], [92.6, 2599.0], [92.7, 2614.0], [92.8, 2624.0], [92.9, 2630.0], [93.0, 2630.0], [93.1, 2645.0], [93.2, 2651.0], [93.3, 2657.0], [93.4, 2664.0], [93.5, 2678.0], [93.6, 2683.0], [93.7, 2685.0], [93.8, 2688.0], [93.9, 2714.0], [94.0, 2714.0], [94.1, 2715.0], [94.2, 2716.0], [94.3, 2735.0], [94.4, 2735.0], [94.5, 2745.0], [94.6, 2748.0], [94.7, 2762.0], [94.8, 2776.0], [94.9, 2787.0], [95.0, 2787.0], [95.1, 2791.0], [95.2, 2811.0], [95.3, 2824.0], [95.4, 2833.0], [95.5, 2856.0], [95.6, 2858.0], [95.7, 2874.0], [95.8, 2876.0], [95.9, 2879.0], [96.0, 2879.0], [96.1, 2901.0], [96.2, 2907.0], [96.3, 2919.0], [96.4, 2940.0], [96.5, 2968.0], [96.6, 3002.0], [96.7, 3020.0], [96.8, 3025.0], [96.9, 3041.0], [97.0, 3041.0], [97.1, 3055.0], [97.2, 3059.0], [97.3, 3059.0], [97.4, 3121.0], [97.5, 3130.0], [97.6, 3141.0], [97.7, 3154.0], [97.8, 3156.0], [97.9, 3174.0], [98.0, 3174.0], [98.1, 3184.0], [98.2, 3184.0], [98.3, 3185.0], [98.4, 3191.0], [98.5, 3196.0], [98.6, 3214.0], [98.7, 3222.0], [98.8, 3239.0], [98.9, 3277.0], [99.0, 3277.0], [99.1, 3281.0], [99.2, 3308.0], [99.3, 3333.0], [99.4, 3349.0], [99.5, 3445.0], [99.6, 3519.0], [99.7, 3523.0], [99.8, 4716.0], [99.9, 5031.0], [100.0, 5031.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 20.0], [0.1, 20.0], [0.2, 27.0], [0.3, 33.0], [0.4, 33.0], [0.5, 35.0], [0.6, 36.0], [0.7, 37.0], [0.8, 47.0], [0.9, 48.0], [1.0, 48.0], [1.1, 50.0], [1.2, 51.0], [1.3, 51.0], [1.4, 55.0], [1.5, 61.0], [1.6, 64.0], [1.7, 70.0], [1.8, 70.0], [1.9, 72.0], [2.0, 72.0], [2.1, 74.0], [2.2, 76.0], [2.3, 79.0], [2.4, 86.0], [2.5, 88.0], [2.6, 89.0], [2.7, 92.0], [2.8, 92.0], [2.9, 93.0], [3.0, 93.0], [3.1, 93.0], [3.2, 93.0], [3.3, 98.0], [3.4, 98.0], [3.5, 99.0], [3.6, 100.0], [3.7, 103.0], [3.8, 103.0], [3.9, 104.0], [4.0, 104.0], [4.1, 104.0], [4.2, 107.0], [4.3, 110.0], [4.4, 111.0], [4.5, 111.0], [4.6, 120.0], [4.7, 122.0], [4.8, 125.0], [4.9, 128.0], [5.0, 128.0], [5.1, 128.0], [5.2, 130.0], [5.3, 130.0], [5.4, 132.0], [5.5, 134.0], [5.6, 136.0], [5.7, 137.0], [5.8, 141.0], [5.9, 143.0], [6.0, 144.0], [6.1, 144.0], [6.2, 146.0], [6.3, 148.0], [6.4, 149.0], [6.5, 149.0], [6.6, 149.0], [6.7, 151.0], [6.8, 157.0], [6.9, 158.0], [7.0, 160.0], [7.1, 160.0], [7.2, 160.0], [7.3, 162.0], [7.4, 162.0], [7.5, 165.0], [7.6, 165.0], [7.7, 172.0], [7.8, 174.0], [7.9, 178.0], [8.0, 182.0], [8.1, 182.0], [8.2, 184.0], [8.3, 186.0], [8.4, 187.0], [8.5, 191.0], [8.6, 195.0], [8.7, 199.0], [8.8, 200.0], [8.9, 208.0], [9.0, 210.0], [9.1, 210.0], [9.2, 211.0], [9.3, 212.0], [9.4, 214.0], [9.5, 218.0], [9.6, 221.0], [9.7, 222.0], [9.8, 222.0], [9.9, 227.0], [10.0, 227.0], [10.1, 227.0], [10.2, 231.0], [10.3, 233.0], [10.4, 237.0], [10.5, 239.0], [10.6, 239.0], [10.7, 245.0], [10.8, 247.0], [10.9, 250.0], [11.0, 250.0], [11.1, 250.0], [11.2, 253.0], [11.3, 262.0], [11.4, 264.0], [11.5, 269.0], [11.6, 272.0], [11.7, 274.0], [11.8, 290.0], [11.9, 302.0], [12.0, 303.0], [12.1, 303.0], [12.2, 304.0], [12.3, 304.0], [12.4, 304.0], [12.5, 308.0], [12.6, 309.0], [12.7, 312.0], [12.8, 314.0], [12.9, 321.0], [13.0, 321.0], [13.1, 321.0], [13.2, 327.0], [13.3, 327.0], [13.4, 329.0], [13.5, 330.0], [13.6, 331.0], [13.7, 337.0], [13.8, 337.0], [13.9, 337.0], [14.0, 338.0], [14.1, 338.0], [14.2, 340.0], [14.3, 344.0], [14.4, 344.0], [14.5, 346.0], [14.6, 356.0], [14.7, 358.0], [14.8, 358.0], [14.9, 359.0], [15.0, 362.0], [15.1, 362.0], [15.2, 366.0], [15.3, 372.0], [15.4, 375.0], [15.5, 388.0], [15.6, 406.0], [15.7, 408.0], [15.8, 410.0], [15.9, 416.0], [16.0, 419.0], [16.1, 419.0], [16.2, 420.0], [16.3, 423.0], [16.4, 424.0], [16.5, 427.0], [16.6, 431.0], [16.7, 440.0], [16.8, 440.0], [16.9, 443.0], [17.0, 443.0], [17.1, 443.0], [17.2, 448.0], [17.3, 451.0], [17.4, 452.0], [17.5, 455.0], [17.6, 459.0], [17.7, 463.0], [17.8, 465.0], [17.9, 479.0], [18.0, 482.0], [18.1, 482.0], [18.2, 487.0], [18.3, 487.0], [18.4, 488.0], [18.5, 491.0], [18.6, 492.0], [18.7, 497.0], [18.8, 518.0], [18.9, 521.0], [19.0, 540.0], [19.1, 540.0], [19.2, 546.0], [19.3, 549.0], [19.4, 551.0], [19.5, 551.0], [19.6, 551.0], [19.7, 567.0], [19.8, 569.0], [19.9, 571.0], [20.0, 581.0], [20.1, 581.0], [20.2, 581.0], [20.3, 584.0], [20.4, 586.0], [20.5, 586.0], [20.6, 594.0], [20.7, 594.0], [20.8, 598.0], [20.9, 598.0], [21.0, 607.0], [21.1, 607.0], [21.2, 610.0], [21.3, 611.0], [21.4, 613.0], [21.5, 614.0], [21.6, 623.0], [21.7, 624.0], [21.8, 626.0], [21.9, 627.0], [22.0, 631.0], [22.1, 631.0], [22.2, 641.0], [22.3, 643.0], [22.4, 645.0], [22.5, 647.0], [22.6, 651.0], [22.7, 659.0], [22.8, 665.0], [22.9, 671.0], [23.0, 673.0], [23.1, 673.0], [23.2, 678.0], [23.3, 682.0], [23.4, 692.0], [23.5, 698.0], [23.6, 710.0], [23.7, 718.0], [23.8, 719.0], [23.9, 720.0], [24.0, 721.0], [24.1, 721.0], [24.2, 722.0], [24.3, 729.0], [24.4, 730.0], [24.5, 733.0], [24.6, 739.0], [24.7, 741.0], [24.8, 745.0], [24.9, 747.0], [25.0, 752.0], [25.1, 752.0], [25.2, 761.0], [25.3, 773.0], [25.4, 785.0], [25.5, 787.0], [25.6, 787.0], [25.7, 791.0], [25.8, 793.0], [25.9, 793.0], [26.0, 795.0], [26.1, 795.0], [26.2, 796.0], [26.3, 797.0], [26.4, 800.0], [26.5, 805.0], [26.6, 808.0], [26.7, 810.0], [26.8, 813.0], [26.9, 813.0], [27.0, 813.0], [27.1, 813.0], [27.2, 816.0], [27.3, 817.0], [27.4, 817.0], [27.5, 818.0], [27.6, 818.0], [27.7, 822.0], [27.8, 823.0], [27.9, 825.0], [28.0, 827.0], [28.1, 827.0], [28.2, 836.0], [28.3, 838.0], [28.4, 840.0], [28.5, 841.0], [28.6, 842.0], [28.7, 843.0], [28.8, 844.0], [28.9, 845.0], [29.0, 851.0], [29.1, 851.0], [29.2, 853.0], [29.3, 857.0], [29.4, 861.0], [29.5, 863.0], [29.6, 864.0], [29.7, 869.0], [29.8, 871.0], [29.9, 873.0], [30.0, 876.0], [30.1, 876.0], [30.2, 877.0], [30.3, 880.0], [30.4, 880.0], [30.5, 880.0], [30.6, 880.0], [30.7, 883.0], [30.8, 884.0], [30.9, 885.0], [31.0, 888.0], [31.1, 888.0], [31.2, 892.0], [31.3, 892.0], [31.4, 894.0], [31.5, 894.0], [31.6, 895.0], [31.7, 903.0], [31.8, 904.0], [31.9, 906.0], [32.0, 910.0], [32.1, 910.0], [32.2, 910.0], [32.3, 911.0], [32.4, 921.0], [32.5, 921.0], [32.6, 922.0], [32.7, 927.0], [32.8, 933.0], [32.9, 934.0], [33.0, 942.0], [33.1, 942.0], [33.2, 943.0], [33.3, 945.0], [33.4, 946.0], [33.5, 954.0], [33.6, 954.0], [33.7, 958.0], [33.8, 962.0], [33.9, 966.0], [34.0, 967.0], [34.1, 967.0], [34.2, 970.0], [34.3, 971.0], [34.4, 979.0], [34.5, 982.0], [34.6, 987.0], [34.7, 993.0], [34.8, 1000.0], [34.9, 1004.0], [35.0, 1011.0], [35.1, 1011.0], [35.2, 1015.0], [35.3, 1023.0], [35.4, 1030.0], [35.5, 1046.0], [35.6, 1048.0], [35.7, 1048.0], [35.8, 1050.0], [35.9, 1051.0], [36.0, 1054.0], [36.1, 1054.0], [36.2, 1060.0], [36.3, 1062.0], [36.4, 1065.0], [36.5, 1069.0], [36.6, 1079.0], [36.7, 1085.0], [36.8, 1086.0], [36.9, 1089.0], [37.0, 1089.0], [37.1, 1089.0], [37.2, 1095.0], [37.3, 1095.0], [37.4, 1095.0], [37.5, 1095.0], [37.6, 1100.0], [37.7, 1109.0], [37.8, 1117.0], [37.9, 1120.0], [38.0, 1120.0], [38.1, 1122.0], [38.2, 1128.0], [38.3, 1129.0], [38.4, 1136.0], [38.5, 1136.0], [38.6, 1138.0], [38.7, 1139.0], [38.8, 1142.0], [38.9, 1146.0], [39.0, 1146.0], [39.1, 1146.0], [39.2, 1146.0], [39.3, 1150.0], [39.4, 1152.0], [39.5, 1153.0], [39.6, 1160.0], [39.7, 1177.0], [39.8, 1182.0], [39.9, 1185.0], [40.0, 1185.0], [40.1, 1197.0], [40.2, 1202.0], [40.3, 1204.0], [40.4, 1207.0], [40.5, 1211.0], [40.6, 1216.0], [40.7, 1218.0], [40.8, 1219.0], [40.9, 1224.0], [41.0, 1224.0], [41.1, 1224.0], [41.2, 1226.0], [41.3, 1229.0], [41.4, 1230.0], [41.5, 1233.0], [41.6, 1236.0], [41.7, 1237.0], [41.8, 1237.0], [41.9, 1245.0], [42.0, 1245.0], [42.1, 1247.0], [42.2, 1248.0], [42.3, 1249.0], [42.4, 1250.0], [42.5, 1260.0], [42.6, 1262.0], [42.7, 1267.0], [42.8, 1272.0], [42.9, 1277.0], [43.0, 1277.0], [43.1, 1278.0], [43.2, 1280.0], [43.3, 1282.0], [43.4, 1285.0], [43.5, 1287.0], [43.6, 1289.0], [43.7, 1291.0], [43.8, 1292.0], [43.9, 1292.0], [44.0, 1292.0], [44.1, 1295.0], [44.2, 1296.0], [44.3, 1304.0], [44.4, 1313.0], [44.5, 1313.0], [44.6, 1315.0], [44.7, 1318.0], [44.8, 1320.0], [44.9, 1331.0], [45.0, 1331.0], [45.1, 1332.0], [45.2, 1334.0], [45.3, 1335.0], [45.4, 1338.0], [45.5, 1341.0], [45.6, 1342.0], [45.7, 1352.0], [45.8, 1352.0], [45.9, 1367.0], [46.0, 1367.0], [46.1, 1367.0], [46.2, 1378.0], [46.3, 1380.0], [46.4, 1381.0], [46.5, 1386.0], [46.6, 1388.0], [46.7, 1388.0], [46.8, 1388.0], [46.9, 1393.0], [47.0, 1393.0], [47.1, 1394.0], [47.2, 1397.0], [47.3, 1398.0], [47.4, 1398.0], [47.5, 1399.0], [47.6, 1401.0], [47.7, 1410.0], [47.8, 1411.0], [47.9, 1412.0], [48.0, 1412.0], [48.1, 1412.0], [48.2, 1412.0], [48.3, 1413.0], [48.4, 1414.0], [48.5, 1415.0], [48.6, 1420.0], [48.7, 1420.0], [48.8, 1432.0], [48.9, 1440.0], [49.0, 1440.0], [49.1, 1443.0], [49.2, 1444.0], [49.3, 1452.0], [49.4, 1453.0], [49.5, 1456.0], [49.6, 1458.0], [49.7, 1462.0], [49.8, 1466.0], [49.9, 1473.0], [50.0, 1473.0], [50.1, 1483.0], [50.2, 1486.0], [50.3, 1490.0], [50.4, 1497.0], [50.5, 1498.0], [50.6, 1503.0], [50.7, 1507.0], [50.8, 1510.0], [50.9, 1513.0], [51.0, 1513.0], [51.1, 1514.0], [51.2, 1515.0], [51.3, 1523.0], [51.4, 1534.0], [51.5, 1542.0], [51.6, 1557.0], [51.7, 1558.0], [51.8, 1558.0], [51.9, 1564.0], [52.0, 1564.0], [52.1, 1572.0], [52.2, 1572.0], [52.3, 1573.0], [52.4, 1577.0], [52.5, 1577.0], [52.6, 1585.0], [52.7, 1585.0], [52.8, 1589.0], [52.9, 1590.0], [53.0, 1590.0], [53.1, 1597.0], [53.2, 1598.0], [53.3, 1600.0], [53.4, 1604.0], [53.5, 1608.0], [53.6, 1623.0], [53.7, 1627.0], [53.8, 1630.0], [53.9, 1632.0], [54.0, 1632.0], [54.1, 1646.0], [54.2, 1659.0], [54.3, 1661.0], [54.4, 1672.0], [54.5, 1672.0], [54.6, 1684.0], [54.7, 1688.0], [54.8, 1691.0], [54.9, 1696.0], [55.0, 1696.0], [55.1, 1698.0], [55.2, 1699.0], [55.3, 1706.0], [55.4, 1706.0], [55.5, 1707.0], [55.6, 1707.0], [55.7, 1712.0], [55.8, 1712.0], [55.9, 1714.0], [56.0, 1714.0], [56.1, 1716.0], [56.2, 1718.0], [56.3, 1724.0], [56.4, 1726.0], [56.5, 1730.0], [56.6, 1733.0], [56.7, 1735.0], [56.8, 1748.0], [56.9, 1749.0], [57.0, 1749.0], [57.1, 1750.0], [57.2, 1753.0], [57.3, 1755.0], [57.4, 1759.0], [57.5, 1764.0], [57.6, 1764.0], [57.7, 1765.0], [57.8, 1790.0], [57.9, 1791.0], [58.0, 1791.0], [58.1, 1791.0], [58.2, 1794.0], [58.3, 1796.0], [58.4, 1799.0], [58.5, 1800.0], [58.6, 1801.0], [58.7, 1802.0], [58.8, 1807.0], [58.9, 1811.0], [59.0, 1811.0], [59.1, 1816.0], [59.2, 1827.0], [59.3, 1829.0], [59.4, 1830.0], [59.5, 1835.0], [59.6, 1837.0], [59.7, 1837.0], [59.8, 1843.0], [59.9, 1843.0], [60.0, 1843.0], [60.1, 1857.0], [60.2, 1879.0], [60.3, 1881.0], [60.4, 1898.0], [60.5, 1904.0], [60.6, 1908.0], [60.7, 1921.0], [60.8, 1921.0], [60.9, 1930.0], [61.0, 1930.0], [61.1, 1949.0], [61.2, 1950.0], [61.3, 1957.0], [61.4, 1961.0], [61.5, 1963.0], [61.6, 1977.0], [61.7, 1984.0], [61.8, 1992.0], [61.9, 1994.0], [62.0, 1994.0], [62.1, 2000.0], [62.2, 2004.0], [62.3, 2012.0], [62.4, 2015.0], [62.5, 2026.0], [62.6, 2029.0], [62.7, 2037.0], [62.8, 2051.0], [62.9, 2068.0], [63.0, 2068.0], [63.1, 2088.0], [63.2, 2089.0], [63.3, 2093.0], [63.4, 2114.0], [63.5, 2115.0], [63.6, 2115.0], [63.7, 2122.0], [63.8, 2124.0], [63.9, 2126.0], [64.0, 2126.0], [64.1, 2135.0], [64.2, 2136.0], [64.3, 2143.0], [64.4, 2146.0], [64.5, 2158.0], [64.6, 2167.0], [64.7, 2178.0], [64.8, 2180.0], [64.9, 2184.0], [65.0, 2184.0], [65.1, 2187.0], [65.2, 2187.0], [65.3, 2191.0], [65.4, 2208.0], [65.5, 2223.0], [65.6, 2228.0], [65.7, 2229.0], [65.8, 2233.0], [65.9, 2247.0], [66.0, 2247.0], [66.1, 2251.0], [66.2, 2252.0], [66.3, 2252.0], [66.4, 2255.0], [66.5, 2277.0], [66.6, 2282.0], [66.7, 2308.0], [66.8, 2311.0], [66.9, 2360.0], [67.0, 2360.0], [67.1, 2362.0], [67.2, 2364.0], [67.3, 2368.0], [67.4, 2373.0], [67.5, 2374.0], [67.6, 2375.0], [67.7, 2376.0], [67.8, 2379.0], [67.9, 2387.0], [68.0, 2387.0], [68.1, 2396.0], [68.2, 2396.0], [68.3, 2404.0], [68.4, 2410.0], [68.5, 2418.0], [68.6, 2427.0], [68.7, 2429.0], [68.8, 2436.0], [68.9, 2449.0], [69.0, 2449.0], [69.1, 2452.0], [69.2, 2455.0], [69.3, 2493.0], [69.4, 2502.0], [69.5, 2548.0], [69.6, 2559.0], [69.7, 2585.0], [69.8, 2588.0], [69.9, 2601.0], [70.0, 2601.0], [70.1, 2604.0], [70.2, 2652.0], [70.3, 2652.0], [70.4, 2662.0], [70.5, 2664.0], [70.6, 2669.0], [70.7, 2692.0], [70.8, 2714.0], [70.9, 2756.0], [71.0, 2756.0], [71.1, 2779.0], [71.2, 2788.0], [71.3, 2798.0], [71.4, 2804.0], [71.5, 2808.0], [71.6, 2809.0], [71.7, 2824.0], [71.8, 2856.0], [71.9, 2881.0], [72.0, 2881.0], [72.1, 2899.0], [72.2, 2920.0], [72.3, 2960.0], [72.4, 2981.0], [72.5, 3043.0], [72.6, 3055.0], [72.7, 3076.0], [72.8, 3088.0], [72.9, 3099.0], [73.0, 3099.0], [73.1, 3109.0], [73.2, 3141.0], [73.3, 3141.0], [73.4, 3171.0], [73.5, 3216.0], [73.6, 3218.0], [73.7, 3220.0], [73.8, 3224.0], [73.9, 3240.0], [74.0, 3240.0], [74.1, 3241.0], [74.2, 3248.0], [74.3, 3274.0], [74.4, 3276.0], [74.5, 3325.0], [74.6, 3392.0], [74.7, 3413.0], [74.8, 3428.0], [74.9, 3442.0], [75.0, 3442.0], [75.1, 3445.0], [75.2, 3449.0], [75.3, 3468.0], [75.4, 3476.0], [75.5, 3480.0], [75.6, 3491.0], [75.7, 3502.0], [75.8, 3502.0], [75.9, 3506.0], [76.0, 3506.0], [76.1, 3513.0], [76.2, 3539.0], [76.3, 3555.0], [76.4, 3556.0], [76.5, 3558.0], [76.6, 3559.0], [76.7, 3562.0], [76.8, 3563.0], [76.9, 3564.0], [77.0, 3564.0], [77.1, 3564.0], [77.2, 3566.0], [77.3, 3577.0], [77.4, 3579.0], [77.5, 3579.0], [77.6, 3589.0], [77.7, 3598.0], [77.8, 3610.0], [77.9, 3684.0], [78.0, 3684.0], [78.1, 3740.0], [78.2, 3741.0], [78.3, 3742.0], [78.4, 3742.0], [78.5, 3743.0], [78.6, 3743.0], [78.7, 3745.0], [78.8, 3746.0], [78.9, 3747.0], [79.0, 3747.0], [79.1, 3747.0], [79.2, 3747.0], [79.3, 3747.0], [79.4, 3752.0], [79.5, 3752.0], [79.6, 3752.0], [79.7, 3752.0], [79.8, 3752.0], [79.9, 3752.0], [80.0, 3752.0], [80.1, 3753.0], [80.2, 3753.0], [80.3, 3755.0], [80.4, 3755.0], [80.5, 3756.0], [80.6, 3756.0], [80.7, 3756.0], [80.8, 3756.0], [80.9, 3757.0], [81.0, 3757.0], [81.1, 3757.0], [81.2, 3757.0], [81.3, 3757.0], [81.4, 3758.0], [81.5, 3758.0], [81.6, 3759.0], [81.7, 3759.0], [81.8, 3759.0], [81.9, 3759.0], [82.0, 3759.0], [82.1, 3760.0], [82.2, 3760.0], [82.3, 3760.0], [82.4, 3761.0], [82.5, 3761.0], [82.6, 3761.0], [82.7, 3762.0], [82.8, 3762.0], [82.9, 3762.0], [83.0, 3762.0], [83.1, 3762.0], [83.2, 3763.0], [83.3, 3764.0], [83.4, 3764.0], [83.5, 3764.0], [83.6, 3764.0], [83.7, 3764.0], [83.8, 3764.0], [83.9, 3765.0], [84.0, 3765.0], [84.1, 3765.0], [84.2, 3765.0], [84.3, 3765.0], [84.4, 3765.0], [84.5, 3766.0], [84.6, 3766.0], [84.7, 3766.0], [84.8, 3766.0], [84.9, 3766.0], [85.0, 3766.0], [85.1, 3766.0], [85.2, 3766.0], [85.3, 3766.0], [85.4, 3767.0], [85.5, 3767.0], [85.6, 3767.0], [85.7, 3767.0], [85.8, 3767.0], [85.9, 3767.0], [86.0, 3767.0], [86.1, 3767.0], [86.2, 3768.0], [86.3, 3768.0], [86.4, 3768.0], [86.5, 3768.0], [86.6, 3768.0], [86.7, 3769.0], [86.8, 3769.0], [86.9, 3769.0], [87.0, 3769.0], [87.1, 3769.0], [87.2, 3769.0], [87.3, 3769.0], [87.4, 3769.0], [87.5, 3769.0], [87.6, 3769.0], [87.7, 3770.0], [87.8, 3770.0], [87.9, 3770.0], [88.0, 3770.0], [88.1, 3770.0], [88.2, 3770.0], [88.3, 3770.0], [88.4, 3770.0], [88.5, 3770.0], [88.6, 3770.0], [88.7, 3771.0], [88.8, 3771.0], [88.9, 3771.0], [89.0, 3771.0], [89.1, 3771.0], [89.2, 3771.0], [89.3, 3772.0], [89.4, 3772.0], [89.5, 3772.0], [89.6, 3772.0], [89.7, 3772.0], [89.8, 3773.0], [89.9, 3773.0], [90.0, 3773.0], [90.1, 3773.0], [90.2, 3773.0], [90.3, 3774.0], [90.4, 3774.0], [90.5, 3774.0], [90.6, 3774.0], [90.7, 3774.0], [90.8, 3775.0], [90.9, 3775.0], [91.0, 3775.0], [91.1, 3776.0], [91.2, 3776.0], [91.3, 3776.0], [91.4, 3777.0], [91.5, 3777.0], [91.6, 3777.0], [91.7, 3778.0], [91.8, 3778.0], [91.9, 3778.0], [92.0, 3778.0], [92.1, 3779.0], [92.2, 3781.0], [92.3, 3781.0], [92.4, 3781.0], [92.5, 3782.0], [92.6, 3782.0], [92.7, 3782.0], [92.8, 3782.0], [92.9, 3782.0], [93.0, 3782.0], [93.1, 3783.0], [93.2, 3784.0], [93.3, 3784.0], [93.4, 3784.0], [93.5, 3784.0], [93.6, 3785.0], [93.7, 3785.0], [93.8, 3785.0], [93.9, 3785.0], [94.0, 3785.0], [94.1, 3785.0], [94.2, 3786.0], [94.3, 3786.0], [94.4, 3786.0], [94.5, 3786.0], [94.6, 3787.0], [94.7, 3787.0], [94.8, 3787.0], [94.9, 3788.0], [95.0, 3788.0], [95.1, 3788.0], [95.2, 3788.0], [95.3, 3789.0], [95.4, 3789.0], [95.5, 3790.0], [95.6, 3790.0], [95.7, 3791.0], [95.8, 3791.0], [95.9, 3791.0], [96.0, 3791.0], [96.1, 3792.0], [96.2, 3792.0], [96.3, 3792.0], [96.4, 3792.0], [96.5, 3792.0], [96.6, 3793.0], [96.7, 3794.0], [96.8, 3795.0], [96.9, 3795.0], [97.0, 3795.0], [97.1, 3796.0], [97.2, 3796.0], [97.3, 3796.0], [97.4, 3797.0], [97.5, 3797.0], [97.6, 3798.0], [97.7, 3798.0], [97.8, 3798.0], [97.9, 3802.0], [98.0, 3802.0], [98.1, 3804.0], [98.2, 3804.0], [98.3, 3804.0], [98.4, 3804.0], [98.5, 3805.0], [98.6, 3806.0], [98.7, 3807.0], [98.8, 3807.0], [98.9, 3807.0], [99.0, 3807.0], [99.1, 3808.0], [99.2, 3808.0], [99.3, 3810.0], [99.4, 3908.0], [99.5, 4038.0], [99.6, 5160.0], [99.7, 5179.0], [99.8, 5218.0], [99.9, 5599.0], [100.0, 5599.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 38.0], [0.1, 38.0], [0.2, 63.0], [0.3, 74.0], [0.4, 80.0], [0.5, 81.0], [0.6, 88.0], [0.7, 96.0], [0.8, 106.0], [0.9, 111.0], [1.0, 111.0], [1.1, 137.0], [1.2, 140.0], [1.3, 141.0], [1.4, 176.0], [1.5, 182.0], [1.6, 185.0], [1.7, 187.0], [1.8, 191.0], [1.9, 195.0], [2.0, 195.0], [2.1, 205.0], [2.2, 217.0], [2.3, 218.0], [2.4, 218.0], [2.5, 219.0], [2.6, 222.0], [2.7, 224.0], [2.8, 236.0], [2.9, 237.0], [3.0, 237.0], [3.1, 241.0], [3.2, 244.0], [3.3, 247.0], [3.4, 259.0], [3.5, 261.0], [3.6, 267.0], [3.7, 280.0], [3.8, 287.0], [3.9, 297.0], [4.0, 297.0], [4.1, 297.0], [4.2, 303.0], [4.3, 307.0], [4.4, 316.0], [4.5, 327.0], [4.6, 334.0], [4.7, 338.0], [4.8, 340.0], [4.9, 343.0], [5.0, 346.0], [5.1, 346.0], [5.2, 347.0], [5.3, 349.0], [5.4, 354.0], [5.5, 354.0], [5.6, 360.0], [5.7, 366.0], [5.8, 371.0], [5.9, 392.0], [6.0, 395.0], [6.1, 395.0], [6.2, 404.0], [6.3, 410.0], [6.4, 410.0], [6.5, 419.0], [6.6, 420.0], [6.7, 423.0], [6.8, 427.0], [6.9, 429.0], [7.0, 431.0], [7.1, 431.0], [7.2, 442.0], [7.3, 443.0], [7.4, 444.0], [7.5, 446.0], [7.6, 453.0], [7.7, 516.0], [7.8, 525.0], [7.9, 538.0], [8.0, 541.0], [8.1, 541.0], [8.2, 548.0], [8.3, 574.0], [8.4, 603.0], [8.5, 617.0], [8.6, 657.0], [8.7, 659.0], [8.8, 682.0], [8.9, 686.0], [9.0, 703.0], [9.1, 703.0], [9.2, 722.0], [9.3, 729.0], [9.4, 731.0], [9.5, 731.0], [9.6, 771.0], [9.7, 786.0], [9.8, 817.0], [9.9, 850.0], [10.0, 874.0], [10.1, 874.0], [10.2, 884.0], [10.3, 905.0], [10.4, 932.0], [10.5, 984.0], [10.6, 986.0], [10.7, 1018.0], [10.8, 1035.0], [10.9, 1050.0], [11.0, 1098.0], [11.1, 1098.0], [11.2, 1103.0], [11.3, 1113.0], [11.4, 1189.0], [11.5, 1202.0], [11.6, 1206.0], [11.7, 1215.0], [11.8, 1225.0], [11.9, 1279.0], [12.0, 1293.0], [12.1, 1293.0], [12.2, 1414.0], [12.3, 1427.0], [12.4, 1450.0], [12.5, 1452.0], [12.6, 1473.0], [12.7, 1477.0], [12.8, 1479.0], [12.9, 1480.0], [13.0, 1487.0], [13.1, 1487.0], [13.2, 1516.0], [13.3, 1528.0], [13.4, 1529.0], [13.5, 1547.0], [13.6, 1550.0], [13.7, 1577.0], [13.8, 1581.0], [13.9, 1594.0], [14.0, 1599.0], [14.1, 1599.0], [14.2, 1610.0], [14.3, 1623.0], [14.4, 1626.0], [14.5, 1637.0], [14.6, 1646.0], [14.7, 1660.0], [14.8, 1665.0], [14.9, 1685.0], [15.0, 1689.0], [15.1, 1689.0], [15.2, 1696.0], [15.3, 1702.0], [15.4, 1716.0], [15.5, 1724.0], [15.6, 1729.0], [15.7, 1730.0], [15.8, 1731.0], [15.9, 1744.0], [16.0, 1747.0], [16.1, 1747.0], [16.2, 1752.0], [16.3, 1756.0], [16.4, 1758.0], [16.5, 1763.0], [16.6, 1763.0], [16.7, 1764.0], [16.8, 1772.0], [16.9, 1777.0], [17.0, 1807.0], [17.1, 1807.0], [17.2, 1810.0], [17.3, 1811.0], [17.4, 1813.0], [17.5, 1825.0], [17.6, 1831.0], [17.7, 1835.0], [17.8, 1837.0], [17.9, 1838.0], [18.0, 1841.0], [18.1, 1841.0], [18.2, 1860.0], [18.3, 1860.0], [18.4, 1864.0], [18.5, 1869.0], [18.6, 1871.0], [18.7, 1877.0], [18.8, 1884.0], [18.9, 1895.0], [19.0, 1901.0], [19.1, 1901.0], [19.2, 1909.0], [19.3, 1924.0], [19.4, 1948.0], [19.5, 1949.0], [19.6, 1972.0], [19.7, 1976.0], [19.8, 1978.0], [19.9, 1991.0], [20.0, 2006.0], [20.1, 2006.0], [20.2, 2011.0], [20.3, 2028.0], [20.4, 2042.0], [20.5, 2084.0], [20.6, 2095.0], [20.7, 2106.0], [20.8, 2111.0], [20.9, 2116.0], [21.0, 2133.0], [21.1, 2133.0], [21.2, 2189.0], [21.3, 2210.0], [21.4, 2224.0], [21.5, 2239.0], [21.6, 2326.0], [21.7, 2392.0], [21.8, 2393.0], [21.9, 2408.0], [22.0, 2413.0], [22.1, 2413.0], [22.2, 2419.0], [22.3, 2435.0], [22.4, 2438.0], [22.5, 2458.0], [22.6, 2463.0], [22.7, 2464.0], [22.8, 2467.0], [22.9, 2468.0], [23.0, 2474.0], [23.1, 2474.0], [23.2, 2475.0], [23.3, 2481.0], [23.4, 2485.0], [23.5, 2501.0], [23.6, 2502.0], [23.7, 2510.0], [23.8, 2513.0], [23.9, 2518.0], [24.0, 2529.0], [24.1, 2529.0], [24.2, 2539.0], [24.3, 2540.0], [24.4, 2551.0], [24.5, 2561.0], [24.6, 2566.0], [24.7, 2568.0], [24.8, 2575.0], [24.9, 2577.0], [25.0, 2599.0], [25.1, 2599.0], [25.2, 2611.0], [25.3, 2616.0], [25.4, 2620.0], [25.5, 2631.0], [25.6, 2635.0], [25.7, 2639.0], [25.8, 2640.0], [25.9, 2661.0], [26.0, 2663.0], [26.1, 2663.0], [26.2, 2663.0], [26.3, 2663.0], [26.4, 2673.0], [26.5, 2677.0], [26.6, 2681.0], [26.7, 2686.0], [26.8, 2691.0], [26.9, 2694.0], [27.0, 2695.0], [27.1, 2695.0], [27.2, 2696.0], [27.3, 2704.0], [27.4, 2708.0], [27.5, 2717.0], [27.6, 2718.0], [27.7, 2727.0], [27.8, 2731.0], [27.9, 2737.0], [28.0, 2741.0], [28.1, 2741.0], [28.2, 2757.0], [28.3, 2763.0], [28.4, 2772.0], [28.5, 2773.0], [28.6, 2773.0], [28.7, 2783.0], [28.8, 2789.0], [28.9, 2794.0], [29.0, 2796.0], [29.1, 2796.0], [29.2, 2808.0], [29.3, 2808.0], [29.4, 2815.0], [29.5, 2819.0], [29.6, 2820.0], [29.7, 2822.0], [29.8, 2822.0], [29.9, 2823.0], [30.0, 2825.0], [30.1, 2825.0], [30.2, 2835.0], [30.3, 2837.0], [30.4, 2838.0], [30.5, 2842.0], [30.6, 2846.0], [30.7, 2847.0], [30.8, 2857.0], [30.9, 2858.0], [31.0, 2860.0], [31.1, 2860.0], [31.2, 2861.0], [31.3, 2862.0], [31.4, 2872.0], [31.5, 2874.0], [31.6, 2874.0], [31.7, 2876.0], [31.8, 2878.0], [31.9, 2886.0], [32.0, 2889.0], [32.1, 2889.0], [32.2, 2891.0], [32.3, 2898.0], [32.4, 2900.0], [32.5, 2903.0], [32.6, 2905.0], [32.7, 2908.0], [32.8, 2916.0], [32.9, 2916.0], [33.0, 2919.0], [33.1, 2919.0], [33.2, 2922.0], [33.3, 2923.0], [33.4, 2924.0], [33.5, 2931.0], [33.6, 2939.0], [33.7, 2940.0], [33.8, 2945.0], [33.9, 2949.0], [34.0, 2952.0], [34.1, 2952.0], [34.2, 2959.0], [34.3, 2964.0], [34.4, 2973.0], [34.5, 2977.0], [34.6, 2978.0], [34.7, 2978.0], [34.8, 2981.0], [34.9, 2981.0], [35.0, 2981.0], [35.1, 2981.0], [35.2, 2982.0], [35.3, 2983.0], [35.4, 2988.0], [35.5, 2988.0], [35.6, 2992.0], [35.7, 2998.0], [35.8, 3001.0], [35.9, 3009.0], [36.0, 3013.0], [36.1, 3013.0], [36.2, 3014.0], [36.3, 3015.0], [36.4, 3020.0], [36.5, 3023.0], [36.6, 3024.0], [36.7, 3025.0], [36.8, 3027.0], [36.9, 3028.0], [37.0, 3028.0], [37.1, 3030.0], [37.2, 3030.0], [37.3, 3041.0], [37.4, 3041.0], [37.5, 3042.0], [37.6, 3051.0], [37.7, 3060.0], [37.8, 3065.0], [37.9, 3071.0], [38.0, 3071.0], [38.1, 3074.0], [38.2, 3075.0], [38.3, 3079.0], [38.4, 3079.0], [38.5, 3083.0], [38.6, 3084.0], [38.7, 3086.0], [38.8, 3086.0], [38.9, 3087.0], [39.0, 3087.0], [39.1, 3090.0], [39.2, 3092.0], [39.3, 3093.0], [39.4, 3094.0], [39.5, 3096.0], [39.6, 3097.0], [39.7, 3109.0], [39.8, 3112.0], [39.9, 3114.0], [40.0, 3114.0], [40.1, 3115.0], [40.2, 3115.0], [40.3, 3116.0], [40.4, 3127.0], [40.5, 3133.0], [40.6, 3136.0], [40.7, 3136.0], [40.8, 3140.0], [40.9, 3153.0], [41.0, 3153.0], [41.1, 3153.0], [41.2, 3156.0], [41.3, 3159.0], [41.4, 3160.0], [41.5, 3162.0], [41.6, 3165.0], [41.7, 3166.0], [41.8, 3170.0], [41.9, 3173.0], [42.0, 3173.0], [42.1, 3173.0], [42.2, 3174.0], [42.3, 3175.0], [42.4, 3177.0], [42.5, 3177.0], [42.6, 3180.0], [42.7, 3181.0], [42.8, 3182.0], [42.9, 3184.0], [43.0, 3184.0], [43.1, 3186.0], [43.2, 3186.0], [43.3, 3191.0], [43.4, 3191.0], [43.5, 3196.0], [43.6, 3200.0], [43.7, 3201.0], [43.8, 3207.0], [43.9, 3212.0], [44.0, 3212.0], [44.1, 3217.0], [44.2, 3229.0], [44.3, 3230.0], [44.4, 3231.0], [44.5, 3231.0], [44.6, 3233.0], [44.7, 3233.0], [44.8, 3235.0], [44.9, 3236.0], [45.0, 3236.0], [45.1, 3241.0], [45.2, 3245.0], [45.3, 3245.0], [45.4, 3247.0], [45.5, 3247.0], [45.6, 3249.0], [45.7, 3259.0], [45.8, 3260.0], [45.9, 3260.0], [46.0, 3260.0], [46.1, 3263.0], [46.2, 3264.0], [46.3, 3268.0], [46.4, 3268.0], [46.5, 3268.0], [46.6, 3269.0], [46.7, 3272.0], [46.8, 3277.0], [46.9, 3279.0], [47.0, 3279.0], [47.1, 3280.0], [47.2, 3285.0], [47.3, 3288.0], [47.4, 3293.0], [47.5, 3297.0], [47.6, 3300.0], [47.7, 3302.0], [47.8, 3304.0], [47.9, 3311.0], [48.0, 3311.0], [48.1, 3315.0], [48.2, 3318.0], [48.3, 3319.0], [48.4, 3319.0], [48.5, 3323.0], [48.6, 3325.0], [48.7, 3328.0], [48.8, 3329.0], [48.9, 3334.0], [49.0, 3334.0], [49.1, 3338.0], [49.2, 3340.0], [49.3, 3343.0], [49.4, 3343.0], [49.5, 3345.0], [49.6, 3346.0], [49.7, 3349.0], [49.8, 3350.0], [49.9, 3357.0], [50.0, 3357.0], [50.1, 3360.0], [50.2, 3361.0], [50.3, 3364.0], [50.4, 3368.0], [50.5, 3370.0], [50.6, 3371.0], [50.7, 3372.0], [50.8, 3374.0], [50.9, 3374.0], [51.0, 3374.0], [51.1, 3378.0], [51.2, 3380.0], [51.3, 3388.0], [51.4, 3388.0], [51.5, 3390.0], [51.6, 3399.0], [51.7, 3400.0], [51.8, 3401.0], [51.9, 3419.0], [52.0, 3419.0], [52.1, 3420.0], [52.2, 3420.0], [52.3, 3422.0], [52.4, 3427.0], [52.5, 3429.0], [52.6, 3429.0], [52.7, 3430.0], [52.8, 3432.0], [52.9, 3436.0], [53.0, 3436.0], [53.1, 3437.0], [53.2, 3439.0], [53.3, 3439.0], [53.4, 3439.0], [53.5, 3445.0], [53.6, 3446.0], [53.7, 3451.0], [53.8, 3453.0], [53.9, 3455.0], [54.0, 3455.0], [54.1, 3455.0], [54.2, 3456.0], [54.3, 3457.0], [54.4, 3458.0], [54.5, 3459.0], [54.6, 3465.0], [54.7, 3467.0], [54.8, 3468.0], [54.9, 3475.0], [55.0, 3475.0], [55.1, 3476.0], [55.2, 3476.0], [55.3, 3479.0], [55.4, 3484.0], [55.5, 3484.0], [55.6, 3487.0], [55.7, 3490.0], [55.8, 3492.0], [55.9, 3492.0], [56.0, 3492.0], [56.1, 3503.0], [56.2, 3507.0], [56.3, 3510.0], [56.4, 3522.0], [56.5, 3525.0], [56.6, 3526.0], [56.7, 3526.0], [56.8, 3528.0], [56.9, 3530.0], [57.0, 3530.0], [57.1, 3549.0], [57.2, 3551.0], [57.3, 3557.0], [57.4, 3557.0], [57.5, 3564.0], [57.6, 3568.0], [57.7, 3569.0], [57.8, 3572.0], [57.9, 3573.0], [58.0, 3573.0], [58.1, 3579.0], [58.2, 3579.0], [58.3, 3581.0], [58.4, 3585.0], [58.5, 3593.0], [58.6, 3603.0], [58.7, 3604.0], [58.8, 3605.0], [58.9, 3605.0], [59.0, 3605.0], [59.1, 3617.0], [59.2, 3618.0], [59.3, 3621.0], [59.4, 3624.0], [59.5, 3625.0], [59.6, 3628.0], [59.7, 3636.0], [59.8, 3640.0], [59.9, 3641.0], [60.0, 3641.0], [60.1, 3644.0], [60.2, 3658.0], [60.3, 3660.0], [60.4, 3662.0], [60.5, 3667.0], [60.6, 3668.0], [60.7, 3670.0], [60.8, 3685.0], [60.9, 3686.0], [61.0, 3686.0], [61.1, 3700.0], [61.2, 3702.0], [61.3, 3709.0], [61.4, 3712.0], [61.5, 3714.0], [61.6, 3720.0], [61.7, 3752.0], [61.8, 3753.0], [61.9, 3756.0], [62.0, 3756.0], [62.1, 3759.0], [62.2, 3765.0], [62.3, 3778.0], [62.4, 3782.0], [62.5, 3784.0], [62.6, 3792.0], [62.7, 3792.0], [62.8, 3795.0], [62.9, 3796.0], [63.0, 3796.0], [63.1, 3796.0], [63.2, 3798.0], [63.3, 3800.0], [63.4, 3803.0], [63.5, 3803.0], [63.6, 3807.0], [63.7, 3811.0], [63.8, 3811.0], [63.9, 3821.0], [64.0, 3821.0], [64.1, 3826.0], [64.2, 3834.0], [64.3, 3837.0], [64.4, 3837.0], [64.5, 3841.0], [64.6, 3849.0], [64.7, 3849.0], [64.8, 3850.0], [64.9, 3851.0], [65.0, 3851.0], [65.1, 3855.0], [65.2, 3863.0], [65.3, 3863.0], [65.4, 3864.0], [65.5, 3870.0], [65.6, 3872.0], [65.7, 3878.0], [65.8, 3885.0], [65.9, 3890.0], [66.0, 3890.0], [66.1, 3894.0], [66.2, 3897.0], [66.3, 3901.0], [66.4, 3905.0], [66.5, 3909.0], [66.6, 3914.0], [66.7, 3917.0], [66.8, 3920.0], [66.9, 3951.0], [67.0, 3951.0], [67.1, 3951.0], [67.2, 3954.0], [67.3, 3955.0], [67.4, 3960.0], [67.5, 3961.0], [67.6, 3965.0], [67.7, 3970.0], [67.8, 3972.0], [67.9, 3979.0], [68.0, 3979.0], [68.1, 3983.0], [68.2, 3987.0], [68.3, 3989.0], [68.4, 3990.0], [68.5, 3998.0], [68.6, 4003.0], [68.7, 4007.0], [68.8, 4011.0], [68.9, 4018.0], [69.0, 4018.0], [69.1, 4030.0], [69.2, 4035.0], [69.3, 4037.0], [69.4, 4071.0], [69.5, 4076.0], [69.6, 4102.0], [69.7, 4138.0], [69.8, 4143.0], [69.9, 4148.0], [70.0, 4148.0], [70.1, 4168.0], [70.2, 4169.0], [70.3, 4179.0], [70.4, 4199.0], [70.5, 4216.0], [70.6, 4232.0], [70.7, 4234.0], [70.8, 4272.0], [70.9, 4283.0], [71.0, 4283.0], [71.1, 4295.0], [71.2, 4299.0], [71.3, 4359.0], [71.4, 4379.0], [71.5, 4406.0], [71.6, 4424.0], [71.7, 4428.0], [71.8, 4429.0], [71.9, 4439.0], [72.0, 4439.0], [72.1, 4463.0], [72.2, 4514.0], [72.3, 4545.0], [72.4, 4628.0], [72.5, 4888.0], [72.6, 4909.0], [72.7, 5044.0], [72.8, 5181.0], [72.9, 5215.0], [73.0, 5215.0], [73.1, 5355.0], [73.2, 5379.0], [73.3, 5475.0], [73.4, 5491.0], [73.5, 5495.0], [73.6, 5562.0], [73.7, 5711.0], [73.8, 5858.0], [73.9, 5884.0], [74.0, 5884.0], [74.1, 5922.0], [74.2, 5943.0], [74.3, 5945.0], [74.4, 5954.0], [74.5, 5959.0], [74.6, 5972.0], [74.7, 5973.0], [74.8, 5979.0], [74.9, 5982.0], [75.0, 5982.0], [75.1, 6000.0], [75.2, 6002.0], [75.3, 6014.0], [75.4, 6015.0], [75.5, 6018.0], [75.6, 6019.0], [75.7, 6020.0], [75.8, 6022.0], [75.9, 6025.0], [76.0, 6025.0], [76.1, 6041.0], [76.2, 6043.0], [76.3, 6057.0], [76.4, 6059.0], [76.5, 6063.0], [76.6, 6064.0], [76.7, 6071.0], [76.8, 6075.0], [76.9, 6083.0], [77.0, 6083.0], [77.1, 6089.0], [77.2, 6096.0], [77.3, 6119.0], [77.4, 6135.0], [77.5, 6156.0], [77.6, 6161.0], [77.7, 6287.0], [77.8, 6307.0], [77.9, 6309.0], [78.0, 6309.0], [78.1, 6318.0], [78.2, 6318.0], [78.3, 6458.0], [78.4, 6483.0], [78.5, 6489.0], [78.6, 6525.0], [78.7, 6534.0], [78.8, 6582.0], [78.9, 6622.0], [79.0, 6622.0], [79.1, 6631.0], [79.2, 6632.0], [79.3, 6640.0], [79.4, 6648.0], [79.5, 6657.0], [79.6, 6658.0], [79.7, 6686.0], [79.8, 6707.0], [79.9, 6709.0], [80.0, 6709.0], [80.1, 6724.0], [80.2, 6734.0], [80.3, 6771.0], [80.4, 6771.0], [80.5, 6776.0], [80.6, 6808.0], [80.7, 6808.0], [80.8, 6820.0], [80.9, 6821.0], [81.0, 6821.0], [81.1, 6822.0], [81.2, 6822.0], [81.3, 6824.0], [81.4, 6824.0], [81.5, 6825.0], [81.6, 6825.0], [81.7, 6829.0], [81.8, 6833.0], [81.9, 6835.0], [82.0, 6835.0], [82.1, 6840.0], [82.2, 6843.0], [82.3, 6849.0], [82.4, 6849.0], [82.5, 6849.0], [82.6, 6851.0], [82.7, 6859.0], [82.8, 6894.0], [82.9, 6903.0], [83.0, 6903.0], [83.1, 6907.0], [83.2, 7045.0], [83.3, 7052.0], [83.4, 7056.0], [83.5, 7059.0], [83.6, 7066.0], [83.7, 7087.0], [83.8, 7093.0], [83.9, 7095.0], [84.0, 7095.0], [84.1, 7099.0], [84.2, 7106.0], [84.3, 7106.0], [84.4, 7109.0], [84.5, 7118.0], [84.6, 7120.0], [84.7, 7150.0], [84.8, 7153.0], [84.9, 7155.0], [85.0, 7155.0], [85.1, 7156.0], [85.2, 7158.0], [85.3, 7171.0], [85.4, 7214.0], [85.5, 7215.0], [85.6, 7226.0], [85.7, 7234.0], [85.8, 7238.0], [85.9, 7244.0], [86.0, 7244.0], [86.1, 7245.0], [86.2, 7248.0], [86.3, 7260.0], [86.4, 7265.0], [86.5, 7266.0], [86.6, 7268.0], [86.7, 7271.0], [86.8, 7274.0], [86.9, 7274.0], [87.0, 7274.0], [87.1, 7274.0], [87.2, 7275.0], [87.3, 7288.0], [87.4, 7304.0], [87.5, 7311.0], [87.6, 7313.0], [87.7, 7323.0], [87.8, 7327.0], [87.9, 7327.0], [88.0, 7327.0], [88.1, 7334.0], [88.2, 7335.0], [88.3, 7340.0], [88.4, 7343.0], [88.5, 7361.0], [88.6, 7370.0], [88.7, 7372.0], [88.8, 7373.0], [88.9, 7373.0], [89.0, 7373.0], [89.1, 7374.0], [89.2, 7374.0], [89.3, 7377.0], [89.4, 7378.0], [89.5, 7381.0], [89.6, 7383.0], [89.7, 7387.0], [89.8, 7401.0], [89.9, 7408.0], [90.0, 7408.0], [90.1, 7409.0], [90.2, 7416.0], [90.3, 7418.0], [90.4, 7423.0], [90.5, 7424.0], [90.6, 7425.0], [90.7, 7438.0], [90.8, 7442.0], [90.9, 7442.0], [91.0, 7442.0], [91.1, 7447.0], [91.2, 7456.0], [91.3, 7456.0], [91.4, 7460.0], [91.5, 7482.0], [91.6, 7495.0], [91.7, 7505.0], [91.8, 7509.0], [91.9, 7513.0], [92.0, 7513.0], [92.1, 7520.0], [92.2, 7520.0], [92.3, 7520.0], [92.4, 7525.0], [92.5, 7525.0], [92.6, 7535.0], [92.7, 7543.0], [92.8, 7547.0], [92.9, 7552.0], [93.0, 7552.0], [93.1, 7564.0], [93.2, 7569.0], [93.3, 7601.0], [93.4, 7603.0], [93.5, 7617.0], [93.6, 7620.0], [93.7, 7624.0], [93.8, 7633.0], [93.9, 7687.0], [94.0, 7687.0], [94.1, 7721.0], [94.2, 7725.0], [94.3, 7733.0], [94.4, 7774.0], [94.5, 7782.0], [94.6, 7799.0], [94.7, 7804.0], [94.8, 7817.0], [94.9, 7834.0], [95.0, 7834.0], [95.1, 7852.0], [95.2, 7854.0], [95.3, 7863.0], [95.4, 7909.0], [95.5, 7911.0], [95.6, 7912.0], [95.7, 7912.0], [95.8, 7933.0], [95.9, 7936.0], [96.0, 7936.0], [96.1, 7939.0], [96.2, 7939.0], [96.3, 7949.0], [96.4, 7950.0], [96.5, 7955.0], [96.6, 7972.0], [96.7, 7973.0], [96.8, 7980.0], [96.9, 7990.0], [97.0, 7990.0], [97.1, 7992.0], [97.2, 8004.0], [97.3, 8017.0], [97.4, 8025.0], [97.5, 8038.0], [97.6, 8041.0], [97.7, 8042.0], [97.8, 8045.0], [97.9, 8046.0], [98.0, 8046.0], [98.1, 8048.0], [98.2, 8050.0], [98.3, 8053.0], [98.4, 8063.0], [98.5, 8064.0], [98.6, 8090.0], [98.7, 8095.0], [98.8, 8099.0], [98.9, 8099.0], [99.0, 8099.0], [99.1, 8111.0], [99.2, 8113.0], [99.3, 8114.0], [99.4, 8132.0], [99.5, 8143.0], [99.6, 8146.0], [99.7, 8154.0], [99.8, 9294.0], [99.9, 9396.0], [100.0, 9396.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 179.0, "series": [{"data": [[0.0, 17.0], [600.0, 10.0], [700.0, 16.0], [800.0, 8.0], [900.0, 12.0], [1000.0, 16.0], [1100.0, 25.0], [1200.0, 14.0], [1300.0, 15.0], [1400.0, 5.0], [1500.0, 18.0], [100.0, 23.0], [1600.0, 14.0], [1700.0, 11.0], [1800.0, 5.0], [1900.0, 3.0], [2000.0, 3.0], [2100.0, 1.0], [2200.0, 2.0], [2300.0, 1.0], [200.0, 18.0], [3700.0, 1.0], [300.0, 20.0], [400.0, 17.0], [500.0, 25.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[0.0, 48.0], [600.0, 24.0], [700.0, 52.0], [800.0, 35.0], [900.0, 33.0], [1000.0, 66.0], [1100.0, 48.0], [1200.0, 41.0], [1300.0, 51.0], [1400.0, 40.0], [1500.0, 40.0], [100.0, 45.0], [1600.0, 25.0], [1700.0, 21.0], [1800.0, 27.0], [1900.0, 26.0], [2000.0, 29.0], [2100.0, 20.0], [2200.0, 24.0], [2300.0, 24.0], [2400.0, 14.0], [2500.0, 12.0], [2600.0, 11.0], [2800.0, 8.0], [2700.0, 11.0], [2900.0, 5.0], [3000.0, 7.0], [3100.0, 11.0], [3200.0, 5.0], [3300.0, 3.0], [200.0, 26.0], [3400.0, 1.0], [3500.0, 2.0], [300.0, 23.0], [4700.0, 1.0], [5000.0, 1.0], [400.0, 12.0], [500.0, 28.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 32.0], [600.0, 23.0], [700.0, 25.0], [800.0, 48.0], [900.0, 28.0], [1000.0, 25.0], [1100.0, 23.0], [1200.0, 37.0], [1300.0, 30.0], [1400.0, 27.0], [1500.0, 24.0], [1600.0, 18.0], [100.0, 47.0], [1700.0, 29.0], [1800.0, 18.0], [1900.0, 14.0], [2000.0, 12.0], [2100.0, 18.0], [2300.0, 14.0], [2200.0, 12.0], [2400.0, 10.0], [2500.0, 5.0], [2600.0, 8.0], [2700.0, 5.0], [2800.0, 7.0], [2900.0, 3.0], [3000.0, 5.0], [3100.0, 4.0], [3200.0, 9.0], [200.0, 28.0], [3300.0, 2.0], [3400.0, 9.0], [3500.0, 19.0], [3700.0, 179.0], [3600.0, 2.0], [3800.0, 13.0], [3900.0, 1.0], [4000.0, 1.0], [300.0, 33.0], [5100.0, 2.0], [5200.0, 1.0], [5500.0, 1.0], [400.0, 29.0], [500.0, 20.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 7.0], [600.0, 6.0], [700.0, 7.0], [800.0, 4.0], [900.0, 4.0], [1000.0, 4.0], [1100.0, 3.0], [1200.0, 6.0], [1400.0, 9.0], [1500.0, 9.0], [1600.0, 10.0], [1700.0, 16.0], [1800.0, 18.0], [1900.0, 9.0], [2000.0, 6.0], [2100.0, 5.0], [2300.0, 3.0], [2200.0, 3.0], [2400.0, 14.0], [2500.0, 15.0], [2600.0, 19.0], [2700.0, 17.0], [2800.0, 29.0], [2900.0, 31.0], [3000.0, 35.0], [3100.0, 35.0], [3200.0, 36.0], [3300.0, 37.0], [3400.0, 39.0], [3500.0, 23.0], [3600.0, 22.0], [3700.0, 20.0], [3800.0, 27.0], [3900.0, 21.0], [4000.0, 9.0], [4200.0, 7.0], [4100.0, 8.0], [4300.0, 2.0], [4400.0, 6.0], [4500.0, 2.0], [4600.0, 1.0], [4800.0, 1.0], [5100.0, 1.0], [5000.0, 1.0], [4900.0, 1.0], [5300.0, 2.0], [5200.0, 1.0], [5400.0, 3.0], [5500.0, 1.0], [5700.0, 1.0], [5800.0, 2.0], [5900.0, 9.0], [6000.0, 20.0], [6100.0, 4.0], [6200.0, 1.0], [6300.0, 4.0], [6500.0, 3.0], [6600.0, 8.0], [6400.0, 3.0], [6800.0, 21.0], [6700.0, 7.0], [6900.0, 2.0], [7100.0, 11.0], [7000.0, 9.0], [7200.0, 18.0], [7300.0, 22.0], [7400.0, 17.0], [7500.0, 14.0], [7600.0, 7.0], [7900.0, 16.0], [7800.0, 6.0], [7700.0, 6.0], [8000.0, 17.0], [8100.0, 7.0], [9200.0, 1.0], [9300.0, 1.0], [100.0, 11.0], [200.0, 19.0], [300.0, 18.0], [400.0, 14.0], [500.0, 6.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 9300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 487.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1614.0, "series": [{"data": [[0.0, 487.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 899.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1614.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 239.64499999999987, "minX": 1.72975944E12, "maxY": 239.64499999999987, "series": [{"data": [[1.72975944E12, 239.64499999999987]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72975944E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 16.0, "minX": 3.0, "maxY": 6930.095238095238, "series": [{"data": [[48.0, 142.0], [113.0, 566.0], [222.0, 153.0], [220.0, 27.0], [227.0, 486.0], [235.0, 16.0], [15.0, 144.0], [252.0, 2358.0], [253.0, 1008.0], [254.0, 1065.0], [263.0, 684.5675675675677], [265.0, 469.7222222222222], [264.0, 1142.1823204419886], [269.0, 237.5], [267.0, 118.0], [270.0, 3771.0], [271.0, 65.33333333333333], [272.0, 759.0], [277.0, 1700.5], [279.0, 566.0], [274.0, 216.0], [275.0, 334.0], [21.0, 82.25], [22.0, 113.0], [23.0, 115.66666666666667], [25.0, 175.0], [26.0, 116.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[244.76000000000022, 893.9733333333337]], "isOverall": false, "label": "HTTP Request-2-Aggregated", "isController": false}, {"data": [[3.0, 55.0], [4.0, 17.5], [5.0, 36.0], [7.0, 45.0], [8.0, 51.5], [10.0, 47.0], [12.0, 72.28571428571429], [13.0, 74.0], [14.0, 85.0], [15.0, 105.49999999999999], [16.0, 136.0], [17.0, 121.0], [18.0, 173.33333333333334], [20.0, 247.0], [21.0, 159.77777777777777], [22.0, 164.875], [23.0, 131.0], [24.0, 182.75], [25.0, 183.70000000000002], [26.0, 185.5], [48.0, 564.6666666666666], [109.0, 118.0], [113.0, 499.0], [112.0, 259.0], [204.0, 209.0], [222.0, 115.0], [220.0, 138.0], [224.0, 429.0], [227.0, 2874.0], [232.0, 130.0], [235.0, 31.0], [239.0, 984.5], [247.0, 1186.3333333333333], [246.0, 1519.6666666666667], [245.0, 1516.0], [242.0, 743.0], [243.0, 832.0], [251.0, 1539.0], [250.0, 1189.5], [254.0, 1509.6063829787224], [253.0, 1479.232142857143], [248.0, 1494.0], [252.0, 1610.1818181818182], [255.0, 1805.7499999999998], [269.0, 160.0], [264.0, 1481.8852459016396], [263.0, 1109.2368421052631], [257.0, 1822.3529411764703], [256.0, 1659.0], [259.0, 721.0], [258.0, 1493.6666666666667], [265.0, 2051.2857142857133], [267.0, 218.5], [270.0, 1674.3636363636363], [271.0, 1490.1788617886184], [266.0, 1799.0], [262.0, 2225.6666666666665], [261.0, 2276.0], [260.0, 2038.0], [272.0, 1330.6057692307688], [273.0, 1322.7], [274.0, 844.6428571428571], [278.0, 1120.0], [277.0, 1510.9999999999998], [279.0, 457.5714285714286], [275.0, 535.0], [276.0, 1376.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[239.07666666666648, 1312.305555555557]], "isOverall": false, "label": "HTTP Request-1-Aggregated", "isController": false}, {"data": [[3.0, 50.0], [4.0, 45.0], [5.0, 27.0], [7.0, 35.0], [8.0, 59.5], [10.0, 93.0], [12.0, 125.85714285714286], [13.0, 144.0], [14.0, 222.0], [15.0, 204.99999999999997], [16.0, 110.0], [17.0, 250.0], [18.0, 175.33333333333334], [20.0, 79.5], [21.0, 265.00000000000006], [22.0, 195.875], [23.0, 388.125], [24.0, 145.75], [25.0, 252.10000000000002], [26.0, 258.0], [48.0, 1473.3333333333335], [109.0, 730.0], [113.0, 2721.3333333333335], [112.0, 139.25], [204.0, 841.0], [220.0, 2208.0], [222.0, 2093.0], [224.0, 1410.5], [227.0, 2379.5], [232.0, 4038.0], [235.0, 2277.0], [239.0, 1454.5], [247.0, 1447.0], [246.0, 2049.6666666666665], [245.0, 1602.0], [242.0, 722.0], [243.0, 451.0], [251.0, 1169.8333333333335], [250.0, 1274.5], [254.0, 1046.2659574468082], [253.0, 1243.3214285714287], [248.0, 375.0], [252.0, 1504.7272727272727], [255.0, 689.3749999999999], [269.0, 2873.5], [264.0, 3403.9781420765034], [263.0, 3438.868421052631], [257.0, 1034.4705882352941], [256.0, 808.0], [259.0, 327.0], [258.0, 1025.6666666666667], [265.0, 3131.4999999999995], [267.0, 2211.5], [270.0, 1403.0], [271.0, 1514.0325203252032], [266.0, 366.3333333333333], [262.0, 622.0], [261.0, 880.0], [260.0, 1139.0], [272.0, 1746.932692307692], [273.0, 1481.7], [274.0, 1508.0714285714284], [278.0, 425.0], [277.0, 1193.3], [279.0, 725.4285714285714], [275.0, 356.6666666666667], [276.0, 366.5]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[239.07666666666643, 1840.4011111111124]], "isOverall": false, "label": "HTTP Request-0-Aggregated", "isController": false}, {"data": [[3.0, 106.0], [4.0, 74.5], [5.0, 63.0], [7.0, 80.0], [8.0, 111.0], [10.0, 140.0], [12.0, 213.28571428571428], [13.0, 218.0], [14.0, 307.0], [15.0, 403.12500000000006], [16.0, 246.66666666666666], [17.0, 453.0], [18.0, 349.3333333333333], [20.0, 328.0], [21.0, 495.44444444444446], [22.0, 442.81249999999994], [23.0, 590.625], [24.0, 355.0], [25.0, 488.99999999999994], [26.0, 503.0], [48.0, 2147.3333333333335], [109.0, 850.0], [113.0, 3469.0], [112.0, 399.5], [204.0, 1050.0], [220.0, 2510.0], [222.0, 2502.0], [224.0, 2446.5], [227.0, 5496.0], [232.0, 4169.0], [235.0, 2326.0], [239.0, 2439.0], [247.0, 3027.6666666666665], [246.0, 3569.3333333333335], [245.0, 3561.0], [242.0, 2189.0], [243.0, 2042.0], [251.0, 3188.1666666666665], [250.0, 2464.5], [254.0, 2854.414893617021], [253.0, 2963.6964285714294], [248.0, 1869.0], [252.0, 3628.909090909091], [255.0, 2638.625], [269.0, 3469.0], [264.0, 6919.289617486337], [263.0, 5772.473684210526], [257.0, 2931.117647058824], [256.0, 2632.75], [259.0, 1450.0], [258.0, 3157.0], [265.0, 6930.095238095238], [267.0, 2732.0], [270.0, 3597.5454545454545], [271.0, 3231.8455284552842], [266.0, 2165.833333333333], [262.0, 2847.6666666666665], [261.0, 3156.0], [260.0, 3177.0], [272.0, 3341.9615384615395], [273.0, 2922.7], [274.0, 2679.8214285714284], [278.0, 1545.0], [277.0, 3168.6], [279.0, 1619.7142857142856], [275.0, 1004.0], [276.0, 1742.5]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[239.0766666666668, 3864.1577777777775]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 279.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 11210.0, "minX": 1.72975944E12, "maxY": 40260.0, "series": [{"data": [[1.72975944E12, 40260.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.72975944E12, 11210.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72975944E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 893.9733333333337, "minX": 1.72975944E12, "maxY": 3864.1577777777775, "series": [{"data": [[1.72975944E12, 893.9733333333337]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[1.72975944E12, 1312.305555555557]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.72975944E12, 1840.4011111111124]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.72975944E12, 3864.1577777777775]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72975944E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 791.0833333333331, "minX": 1.72975944E12, "maxY": 1657.3544444444456, "series": [{"data": [[1.72975944E12, 791.0833333333331]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[1.72975944E12, 1298.0577777777773]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.72975944E12, 1657.3544444444453]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.72975944E12, 1657.3544444444456]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72975944E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.72975944E12, "maxY": 390.3155555555556, "series": [{"data": [[1.72975944E12, 0.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[1.72975944E12, 0.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.72975944E12, 390.31555555555485]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.72975944E12, 390.3155555555556]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72975944E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 6.0, "minX": 1.72975944E12, "maxY": 9396.0, "series": [{"data": [[1.72975944E12, 9396.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.72975944E12, 3960.9]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.72975944E12, 7972.99]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.72975944E12, 7055.799999999999]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.72975944E12, 6.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.72975944E12, 1630.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72975944E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 111.0, "minX": 11.0, "maxY": 3766.5, "series": [{"data": [[136.0, 2131.0], [140.0, 1398.0], [149.0, 1101.0], [146.0, 192.5], [169.0, 1950.0], [11.0, 486.0], [195.0, 2088.0], [58.0, 670.5], [252.0, 3766.5], [72.0, 111.0], [79.0, 823.0], [331.0, 2858.0], [84.0, 237.0], [23.0, 1318.0], [101.0, 1028.0], [107.0, 982.0], [443.0, 2069.0], [504.0, 2270.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 504.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 92.0, "minX": 11.0, "maxY": 2881.5, "series": [{"data": [[136.0, 1863.5], [140.0, 1398.0], [149.0, 1101.0], [146.0, 143.0], [169.0, 885.0], [11.0, 486.0], [195.0, 2031.0], [58.0, 589.0], [252.0, 2881.5], [72.0, 92.0], [79.0, 810.0], [331.0, 2212.0], [84.0, 209.5], [23.0, 1318.0], [101.0, 884.0], [107.0, 945.0], [443.0, 1079.0], [504.0, 1415.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 504.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.72975944E12, "maxY": 50.0, "series": [{"data": [[1.72975944E12, 50.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72975944E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 20.0, "minX": 1.72975944E12, "maxY": 30.0, "series": [{"data": [[1.72975944E12, 30.0]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.72975944E12, 20.0]], "isOverall": false, "label": "302", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72975944E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 5.0, "minX": 1.72975944E12, "maxY": 15.0, "series": [{"data": [[1.72975944E12, 15.0]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.72975944E12, 15.0]], "isOverall": false, "label": "HTTP Request-0-success", "isController": false}, {"data": [[1.72975944E12, 15.0]], "isOverall": false, "label": "HTTP Request-1-success", "isController": false}, {"data": [[1.72975944E12, 5.0]], "isOverall": false, "label": "HTTP Request-2-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72975944E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.72975944E12, "maxY": 50.0, "series": [{"data": [[1.72975944E12, 50.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72975944E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

