/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 4.0, "minX": 0.0, "maxY": 5535.0, "series": [{"data": [[0.0, 4.0], [0.1, 4.0], [0.2, 4.0], [0.3, 4.0], [0.4, 13.0], [0.5, 13.0], [0.6, 13.0], [0.7, 22.0], [0.8, 22.0], [0.9, 22.0], [1.0, 26.0], [1.1, 26.0], [1.2, 26.0], [1.3, 26.0], [1.4, 27.0], [1.5, 27.0], [1.6, 27.0], [1.7, 28.0], [1.8, 28.0], [1.9, 28.0], [2.0, 29.0], [2.1, 29.0], [2.2, 29.0], [2.3, 29.0], [2.4, 31.0], [2.5, 31.0], [2.6, 31.0], [2.7, 46.0], [2.8, 46.0], [2.9, 46.0], [3.0, 46.0], [3.1, 46.0], [3.2, 46.0], [3.3, 46.0], [3.4, 48.0], [3.5, 48.0], [3.6, 48.0], [3.7, 51.0], [3.8, 51.0], [3.9, 51.0], [4.0, 51.0], [4.1, 51.0], [4.2, 51.0], [4.3, 51.0], [4.4, 54.0], [4.5, 54.0], [4.6, 54.0], [4.7, 57.0], [4.8, 57.0], [4.9, 57.0], [5.0, 57.0], [5.1, 57.0], [5.2, 57.0], [5.3, 57.0], [5.4, 58.0], [5.5, 58.0], [5.6, 58.0], [5.7, 58.0], [5.8, 58.0], [5.9, 58.0], [6.0, 59.0], [6.1, 59.0], [6.2, 59.0], [6.3, 59.0], [6.4, 60.0], [6.5, 60.0], [6.6, 60.0], [6.7, 60.0], [6.8, 60.0], [6.9, 60.0], [7.0, 60.0], [7.1, 60.0], [7.2, 60.0], [7.3, 60.0], [7.4, 60.0], [7.5, 60.0], [7.6, 60.0], [7.7, 62.0], [7.8, 62.0], [7.9, 62.0], [8.0, 64.0], [8.1, 64.0], [8.2, 64.0], [8.3, 64.0], [8.4, 68.0], [8.5, 68.0], [8.6, 68.0], [8.7, 69.0], [8.8, 69.0], [8.9, 69.0], [9.0, 73.0], [9.1, 73.0], [9.2, 73.0], [9.3, 73.0], [9.4, 74.0], [9.5, 74.0], [9.6, 74.0], [9.7, 74.0], [9.8, 74.0], [9.9, 74.0], [10.0, 75.0], [10.1, 75.0], [10.2, 75.0], [10.3, 75.0], [10.4, 79.0], [10.5, 79.0], [10.6, 79.0], [10.7, 80.0], [10.8, 80.0], [10.9, 80.0], [11.0, 80.0], [11.1, 81.0], [11.2, 81.0], [11.3, 81.0], [11.4, 82.0], [11.5, 82.0], [11.6, 82.0], [11.7, 83.0], [11.8, 83.0], [11.9, 83.0], [12.0, 83.0], [12.1, 84.0], [12.2, 84.0], [12.3, 84.0], [12.4, 86.0], [12.5, 86.0], [12.6, 86.0], [12.7, 86.0], [12.8, 86.0], [12.9, 86.0], [13.0, 86.0], [13.1, 87.0], [13.2, 87.0], [13.3, 87.0], [13.4, 87.0], [13.5, 87.0], [13.6, 87.0], [13.7, 88.0], [13.8, 88.0], [13.9, 88.0], [14.0, 88.0], [14.1, 88.0], [14.2, 88.0], [14.3, 88.0], [14.4, 89.0], [14.5, 89.0], [14.6, 89.0], [14.7, 90.0], [14.8, 90.0], [14.9, 90.0], [15.0, 90.0], [15.1, 90.0], [15.2, 90.0], [15.3, 90.0], [15.4, 94.0], [15.5, 94.0], [15.6, 94.0], [15.7, 95.0], [15.8, 95.0], [15.9, 95.0], [16.0, 95.0], [16.1, 95.0], [16.2, 95.0], [16.3, 95.0], [16.4, 96.0], [16.5, 96.0], [16.6, 96.0], [16.7, 97.0], [16.8, 97.0], [16.9, 97.0], [17.0, 98.0], [17.1, 98.0], [17.2, 98.0], [17.3, 98.0], [17.4, 99.0], [17.5, 99.0], [17.6, 99.0], [17.7, 100.0], [17.8, 100.0], [17.9, 100.0], [18.0, 101.0], [18.1, 101.0], [18.2, 101.0], [18.3, 101.0], [18.4, 101.0], [18.5, 101.0], [18.6, 101.0], [18.7, 102.0], [18.8, 102.0], [18.9, 102.0], [19.0, 103.0], [19.1, 103.0], [19.2, 103.0], [19.3, 103.0], [19.4, 104.0], [19.5, 104.0], [19.6, 104.0], [19.7, 108.0], [19.8, 108.0], [19.9, 108.0], [20.0, 109.0], [20.1, 109.0], [20.2, 109.0], [20.3, 109.0], [20.4, 111.0], [20.5, 111.0], [20.6, 111.0], [20.7, 113.0], [20.8, 113.0], [20.9, 113.0], [21.0, 113.0], [21.1, 113.0], [21.2, 113.0], [21.3, 113.0], [21.4, 114.0], [21.5, 114.0], [21.6, 114.0], [21.7, 114.0], [21.8, 114.0], [21.9, 114.0], [22.0, 115.0], [22.1, 115.0], [22.2, 115.0], [22.3, 115.0], [22.4, 116.0], [22.5, 116.0], [22.6, 116.0], [22.7, 118.0], [22.8, 118.0], [22.9, 118.0], [23.0, 118.0], [23.1, 118.0], [23.2, 118.0], [23.3, 118.0], [23.4, 120.0], [23.5, 120.0], [23.6, 120.0], [23.7, 120.0], [23.8, 120.0], [23.9, 120.0], [24.0, 126.0], [24.1, 126.0], [24.2, 126.0], [24.3, 126.0], [24.4, 127.0], [24.5, 127.0], [24.6, 127.0], [24.7, 133.0], [24.8, 133.0], [24.9, 133.0], [25.0, 138.0], [25.1, 138.0], [25.2, 138.0], [25.3, 138.0], [25.4, 140.0], [25.5, 140.0], [25.6, 140.0], [25.7, 142.0], [25.8, 142.0], [25.9, 142.0], [26.0, 144.0], [26.1, 144.0], [26.2, 144.0], [26.3, 144.0], [26.4, 147.0], [26.5, 147.0], [26.6, 147.0], [26.7, 150.0], [26.8, 150.0], [26.9, 150.0], [27.0, 152.0], [27.1, 152.0], [27.2, 152.0], [27.3, 152.0], [27.4, 159.0], [27.5, 159.0], [27.6, 159.0], [27.7, 160.0], [27.8, 160.0], [27.9, 160.0], [28.0, 163.0], [28.1, 163.0], [28.2, 163.0], [28.3, 163.0], [28.4, 163.0], [28.5, 163.0], [28.6, 163.0], [28.7, 164.0], [28.8, 164.0], [28.9, 164.0], [29.0, 165.0], [29.1, 165.0], [29.2, 165.0], [29.3, 165.0], [29.4, 165.0], [29.5, 165.0], [29.6, 165.0], [29.7, 166.0], [29.8, 166.0], [29.9, 166.0], [30.0, 172.0], [30.1, 172.0], [30.2, 172.0], [30.3, 172.0], [30.4, 173.0], [30.5, 173.0], [30.6, 173.0], [30.7, 177.0], [30.8, 177.0], [30.9, 177.0], [31.0, 179.0], [31.1, 179.0], [31.2, 179.0], [31.3, 179.0], [31.4, 183.0], [31.5, 183.0], [31.6, 183.0], [31.7, 185.0], [31.8, 185.0], [31.9, 185.0], [32.0, 189.0], [32.1, 189.0], [32.2, 189.0], [32.3, 189.0], [32.4, 191.0], [32.5, 191.0], [32.6, 191.0], [32.7, 210.0], [32.8, 210.0], [32.9, 210.0], [33.0, 214.0], [33.1, 214.0], [33.2, 214.0], [33.3, 214.0], [33.4, 228.0], [33.5, 228.0], [33.6, 228.0], [33.7, 235.0], [33.8, 235.0], [33.9, 235.0], [34.0, 240.0], [34.1, 240.0], [34.2, 240.0], [34.3, 240.0], [34.4, 244.0], [34.5, 244.0], [34.6, 244.0], [34.7, 244.0], [34.8, 244.0], [34.9, 244.0], [35.0, 249.0], [35.1, 249.0], [35.2, 249.0], [35.3, 249.0], [35.4, 251.0], [35.5, 251.0], [35.6, 251.0], [35.7, 252.0], [35.8, 252.0], [35.9, 252.0], [36.0, 263.0], [36.1, 263.0], [36.2, 263.0], [36.3, 263.0], [36.4, 266.0], [36.5, 266.0], [36.6, 266.0], [36.7, 268.0], [36.8, 268.0], [36.9, 268.0], [37.0, 273.0], [37.1, 273.0], [37.2, 273.0], [37.3, 273.0], [37.4, 283.0], [37.5, 283.0], [37.6, 283.0], [37.7, 288.0], [37.8, 288.0], [37.9, 288.0], [38.0, 288.0], [38.1, 295.0], [38.2, 295.0], [38.3, 295.0], [38.4, 297.0], [38.5, 297.0], [38.6, 297.0], [38.7, 309.0], [38.8, 309.0], [38.9, 309.0], [39.0, 309.0], [39.1, 309.0], [39.2, 309.0], [39.3, 309.0], [39.4, 320.0], [39.5, 320.0], [39.6, 320.0], [39.7, 323.0], [39.8, 323.0], [39.9, 323.0], [40.0, 323.0], [40.1, 324.0], [40.2, 324.0], [40.3, 324.0], [40.4, 338.0], [40.5, 338.0], [40.6, 338.0], [40.7, 347.0], [40.8, 347.0], [40.9, 347.0], [41.0, 347.0], [41.1, 361.0], [41.2, 361.0], [41.3, 361.0], [41.4, 372.0], [41.5, 372.0], [41.6, 372.0], [41.7, 376.0], [41.8, 376.0], [41.9, 376.0], [42.0, 376.0], [42.1, 388.0], [42.2, 388.0], [42.3, 388.0], [42.4, 388.0], [42.5, 388.0], [42.6, 388.0], [42.7, 394.0], [42.8, 394.0], [42.9, 394.0], [43.0, 394.0], [43.1, 397.0], [43.2, 397.0], [43.3, 397.0], [43.4, 402.0], [43.5, 402.0], [43.6, 402.0], [43.7, 412.0], [43.8, 412.0], [43.9, 412.0], [44.0, 412.0], [44.1, 427.0], [44.2, 427.0], [44.3, 427.0], [44.4, 438.0], [44.5, 438.0], [44.6, 438.0], [44.7, 438.0], [44.8, 438.0], [44.9, 438.0], [45.0, 438.0], [45.1, 441.0], [45.2, 441.0], [45.3, 441.0], [45.4, 445.0], [45.5, 445.0], [45.6, 445.0], [45.7, 447.0], [45.8, 447.0], [45.9, 447.0], [46.0, 447.0], [46.1, 460.0], [46.2, 460.0], [46.3, 460.0], [46.4, 467.0], [46.5, 467.0], [46.6, 467.0], [46.7, 470.0], [46.8, 470.0], [46.9, 470.0], [47.0, 470.0], [47.1, 473.0], [47.2, 473.0], [47.3, 473.0], [47.4, 481.0], [47.5, 481.0], [47.6, 481.0], [47.7, 488.0], [47.8, 488.0], [47.9, 488.0], [48.0, 488.0], [48.1, 492.0], [48.2, 492.0], [48.3, 492.0], [48.4, 495.0], [48.5, 495.0], [48.6, 495.0], [48.7, 505.0], [48.8, 505.0], [48.9, 505.0], [49.0, 505.0], [49.1, 520.0], [49.2, 520.0], [49.3, 520.0], [49.4, 521.0], [49.5, 521.0], [49.6, 521.0], [49.7, 524.0], [49.8, 524.0], [49.9, 524.0], [50.0, 524.0], [50.1, 532.0], [50.2, 532.0], [50.3, 532.0], [50.4, 532.0], [50.5, 532.0], [50.6, 532.0], [50.7, 539.0], [50.8, 539.0], [50.9, 539.0], [51.0, 539.0], [51.1, 543.0], [51.2, 543.0], [51.3, 543.0], [51.4, 545.0], [51.5, 545.0], [51.6, 545.0], [51.7, 552.0], [51.8, 552.0], [51.9, 552.0], [52.0, 552.0], [52.1, 566.0], [52.2, 566.0], [52.3, 566.0], [52.4, 574.0], [52.5, 574.0], [52.6, 574.0], [52.7, 575.0], [52.8, 575.0], [52.9, 575.0], [53.0, 575.0], [53.1, 576.0], [53.2, 576.0], [53.3, 576.0], [53.4, 582.0], [53.5, 582.0], [53.6, 582.0], [53.7, 585.0], [53.8, 585.0], [53.9, 585.0], [54.0, 585.0], [54.1, 586.0], [54.2, 586.0], [54.3, 586.0], [54.4, 590.0], [54.5, 590.0], [54.6, 590.0], [54.7, 601.0], [54.8, 601.0], [54.9, 601.0], [55.0, 601.0], [55.1, 608.0], [55.2, 608.0], [55.3, 608.0], [55.4, 630.0], [55.5, 630.0], [55.6, 630.0], [55.7, 637.0], [55.8, 637.0], [55.9, 637.0], [56.0, 637.0], [56.1, 638.0], [56.2, 638.0], [56.3, 638.0], [56.4, 641.0], [56.5, 641.0], [56.6, 641.0], [56.7, 645.0], [56.8, 645.0], [56.9, 645.0], [57.0, 645.0], [57.1, 667.0], [57.2, 667.0], [57.3, 667.0], [57.4, 691.0], [57.5, 691.0], [57.6, 691.0], [57.7, 707.0], [57.8, 707.0], [57.9, 707.0], [58.0, 707.0], [58.1, 710.0], [58.2, 710.0], [58.3, 710.0], [58.4, 710.0], [58.5, 710.0], [58.6, 710.0], [58.7, 713.0], [58.8, 713.0], [58.9, 713.0], [59.0, 713.0], [59.1, 719.0], [59.2, 719.0], [59.3, 719.0], [59.4, 719.0], [59.5, 719.0], [59.6, 719.0], [59.7, 728.0], [59.8, 728.0], [59.9, 728.0], [60.0, 728.0], [60.1, 729.0], [60.2, 729.0], [60.3, 729.0], [60.4, 729.0], [60.5, 729.0], [60.6, 729.0], [60.7, 732.0], [60.8, 732.0], [60.9, 732.0], [61.0, 732.0], [61.1, 743.0], [61.2, 743.0], [61.3, 743.0], [61.4, 745.0], [61.5, 745.0], [61.6, 745.0], [61.7, 753.0], [61.8, 753.0], [61.9, 753.0], [62.0, 753.0], [62.1, 754.0], [62.2, 754.0], [62.3, 754.0], [62.4, 762.0], [62.5, 762.0], [62.6, 762.0], [62.7, 767.0], [62.8, 767.0], [62.9, 767.0], [63.0, 767.0], [63.1, 770.0], [63.2, 770.0], [63.3, 770.0], [63.4, 774.0], [63.5, 774.0], [63.6, 774.0], [63.7, 781.0], [63.8, 781.0], [63.9, 781.0], [64.0, 781.0], [64.1, 783.0], [64.2, 783.0], [64.3, 783.0], [64.4, 788.0], [64.5, 788.0], [64.6, 788.0], [64.7, 798.0], [64.8, 798.0], [64.9, 798.0], [65.0, 798.0], [65.1, 805.0], [65.2, 805.0], [65.3, 805.0], [65.4, 813.0], [65.5, 813.0], [65.6, 813.0], [65.7, 814.0], [65.8, 814.0], [65.9, 814.0], [66.0, 814.0], [66.1, 815.0], [66.2, 815.0], [66.3, 815.0], [66.4, 820.0], [66.5, 820.0], [66.6, 820.0], [66.7, 838.0], [66.8, 838.0], [66.9, 838.0], [67.0, 838.0], [67.1, 871.0], [67.2, 871.0], [67.3, 871.0], [67.4, 901.0], [67.5, 901.0], [67.6, 901.0], [67.7, 904.0], [67.8, 904.0], [67.9, 904.0], [68.0, 904.0], [68.1, 923.0], [68.2, 923.0], [68.3, 923.0], [68.4, 948.0], [68.5, 948.0], [68.6, 948.0], [68.7, 973.0], [68.8, 973.0], [68.9, 973.0], [69.0, 973.0], [69.1, 1141.0], [69.2, 1141.0], [69.3, 1141.0], [69.4, 1203.0], [69.5, 1203.0], [69.6, 1203.0], [69.7, 1240.0], [69.8, 1240.0], [69.9, 1240.0], [70.0, 1240.0], [70.1, 1268.0], [70.2, 1268.0], [70.3, 1268.0], [70.4, 1286.0], [70.5, 1286.0], [70.6, 1286.0], [70.7, 1298.0], [70.8, 1298.0], [70.9, 1298.0], [71.0, 1298.0], [71.1, 1347.0], [71.2, 1347.0], [71.3, 1347.0], [71.4, 1351.0], [71.5, 1351.0], [71.6, 1351.0], [71.7, 1379.0], [71.8, 1379.0], [71.9, 1379.0], [72.0, 1379.0], [72.1, 1379.0], [72.2, 1379.0], [72.3, 1379.0], [72.4, 1388.0], [72.5, 1388.0], [72.6, 1388.0], [72.7, 1393.0], [72.8, 1393.0], [72.9, 1393.0], [73.0, 1393.0], [73.1, 1404.0], [73.2, 1404.0], [73.3, 1404.0], [73.4, 1407.0], [73.5, 1407.0], [73.6, 1407.0], [73.7, 1415.0], [73.8, 1415.0], [73.9, 1415.0], [74.0, 1415.0], [74.1, 1416.0], [74.2, 1416.0], [74.3, 1416.0], [74.4, 1418.0], [74.5, 1418.0], [74.6, 1418.0], [74.7, 1420.0], [74.8, 1420.0], [74.9, 1420.0], [75.0, 1424.0], [75.1, 1424.0], [75.2, 1424.0], [75.3, 1424.0], [75.4, 1425.0], [75.5, 1425.0], [75.6, 1425.0], [75.7, 1427.0], [75.8, 1427.0], [75.9, 1427.0], [76.0, 1429.0], [76.1, 1429.0], [76.2, 1429.0], [76.3, 1429.0], [76.4, 1442.0], [76.5, 1442.0], [76.6, 1442.0], [76.7, 1443.0], [76.8, 1443.0], [76.9, 1443.0], [77.0, 1446.0], [77.1, 1446.0], [77.2, 1446.0], [77.3, 1446.0], [77.4, 1450.0], [77.5, 1450.0], [77.6, 1450.0], [77.7, 1455.0], [77.8, 1455.0], [77.9, 1455.0], [78.0, 1475.0], [78.1, 1475.0], [78.2, 1475.0], [78.3, 1475.0], [78.4, 1485.0], [78.5, 1485.0], [78.6, 1485.0], [78.7, 1491.0], [78.8, 1491.0], [78.9, 1491.0], [79.0, 1497.0], [79.1, 1497.0], [79.2, 1497.0], [79.3, 1497.0], [79.4, 1504.0], [79.5, 1504.0], [79.6, 1504.0], [79.7, 1505.0], [79.8, 1505.0], [79.9, 1505.0], [80.0, 1515.0], [80.1, 1515.0], [80.2, 1515.0], [80.3, 1515.0], [80.4, 1518.0], [80.5, 1518.0], [80.6, 1518.0], [80.7, 1524.0], [80.8, 1524.0], [80.9, 1524.0], [81.0, 1525.0], [81.1, 1525.0], [81.2, 1525.0], [81.3, 1525.0], [81.4, 1526.0], [81.5, 1526.0], [81.6, 1526.0], [81.7, 1528.0], [81.8, 1528.0], [81.9, 1528.0], [82.0, 1537.0], [82.1, 1537.0], [82.2, 1537.0], [82.3, 1537.0], [82.4, 1568.0], [82.5, 1568.0], [82.6, 1568.0], [82.7, 1570.0], [82.8, 1570.0], [82.9, 1570.0], [83.0, 1575.0], [83.1, 1575.0], [83.2, 1575.0], [83.3, 1575.0], [83.4, 1581.0], [83.5, 1581.0], [83.6, 1581.0], [83.7, 1592.0], [83.8, 1592.0], [83.9, 1592.0], [84.0, 1595.0], [84.1, 1595.0], [84.2, 1595.0], [84.3, 1595.0], [84.4, 1603.0], [84.5, 1603.0], [84.6, 1603.0], [84.7, 1607.0], [84.8, 1607.0], [84.9, 1607.0], [85.0, 1610.0], [85.1, 1610.0], [85.2, 1610.0], [85.3, 1610.0], [85.4, 1612.0], [85.5, 1612.0], [85.6, 1612.0], [85.7, 1614.0], [85.8, 1614.0], [85.9, 1614.0], [86.0, 1626.0], [86.1, 1626.0], [86.2, 1626.0], [86.3, 1626.0], [86.4, 1626.0], [86.5, 1626.0], [86.6, 1626.0], [86.7, 1629.0], [86.8, 1629.0], [86.9, 1629.0], [87.0, 1629.0], [87.1, 1629.0], [87.2, 1629.0], [87.3, 1629.0], [87.4, 1633.0], [87.5, 1633.0], [87.6, 1633.0], [87.7, 1637.0], [87.8, 1637.0], [87.9, 1637.0], [88.0, 1637.0], [88.1, 1637.0], [88.2, 1637.0], [88.3, 1637.0], [88.4, 1644.0], [88.5, 1644.0], [88.6, 1644.0], [88.7, 1647.0], [88.8, 1647.0], [88.9, 1647.0], [89.0, 1650.0], [89.1, 1650.0], [89.2, 1650.0], [89.3, 1650.0], [89.4, 1661.0], [89.5, 1661.0], [89.6, 1661.0], [89.7, 1681.0], [89.8, 1681.0], [89.9, 1681.0], [90.0, 1721.0], [90.1, 1721.0], [90.2, 1721.0], [90.3, 1721.0], [90.4, 1745.0], [90.5, 1745.0], [90.6, 1745.0], [90.7, 1759.0], [90.8, 1759.0], [90.9, 1759.0], [91.0, 1770.0], [91.1, 1770.0], [91.2, 1770.0], [91.3, 1770.0], [91.4, 1800.0], [91.5, 1800.0], [91.6, 1800.0], [91.7, 1811.0], [91.8, 1811.0], [91.9, 1811.0], [92.0, 1823.0], [92.1, 1823.0], [92.2, 1823.0], [92.3, 1823.0], [92.4, 1859.0], [92.5, 1859.0], [92.6, 1859.0], [92.7, 1864.0], [92.8, 1864.0], [92.9, 1864.0], [93.0, 1891.0], [93.1, 1891.0], [93.2, 1891.0], [93.3, 1891.0], [93.4, 1896.0], [93.5, 1896.0], [93.6, 1896.0], [93.7, 1913.0], [93.8, 1913.0], [93.9, 1913.0], [94.0, 1917.0], [94.1, 1917.0], [94.2, 1917.0], [94.3, 1917.0], [94.4, 1922.0], [94.5, 1922.0], [94.6, 1922.0], [94.7, 1935.0], [94.8, 1935.0], [94.9, 1935.0], [95.0, 1964.0], [95.1, 1964.0], [95.2, 1964.0], [95.3, 1964.0], [95.4, 1964.0], [95.5, 1964.0], [95.6, 1964.0], [95.7, 1965.0], [95.8, 1965.0], [95.9, 1965.0], [96.0, 1970.0], [96.1, 1970.0], [96.2, 1970.0], [96.3, 1970.0], [96.4, 1982.0], [96.5, 1982.0], [96.6, 1982.0], [96.7, 1988.0], [96.8, 1988.0], [96.9, 1988.0], [97.0, 1992.0], [97.1, 1992.0], [97.2, 1992.0], [97.3, 1992.0], [97.4, 2013.0], [97.5, 2013.0], [97.6, 2013.0], [97.7, 2018.0], [97.8, 2018.0], [97.9, 2018.0], [98.0, 2053.0], [98.1, 2053.0], [98.2, 2053.0], [98.3, 2053.0], [98.4, 2054.0], [98.5, 2054.0], [98.6, 2054.0], [98.7, 2083.0], [98.8, 2083.0], [98.9, 2083.0], [99.0, 2348.0], [99.1, 2348.0], [99.2, 2348.0], [99.3, 2348.0], [99.4, 2644.0], [99.5, 2644.0], [99.6, 2644.0], [99.7, 2880.0], [99.8, 2880.0], [99.9, 2880.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[0.0, 7.0], [0.1, 7.0], [0.2, 7.0], [0.3, 8.0], [0.4, 9.0], [0.5, 11.0], [0.6, 12.0], [0.7, 13.0], [0.8, 13.0], [0.9, 14.0], [1.0, 14.0], [1.1, 14.0], [1.2, 16.0], [1.3, 16.0], [1.4, 16.0], [1.5, 17.0], [1.6, 18.0], [1.7, 21.0], [1.8, 22.0], [1.9, 22.0], [2.0, 22.0], [2.1, 22.0], [2.2, 23.0], [2.3, 24.0], [2.4, 27.0], [2.5, 28.0], [2.6, 28.0], [2.7, 29.0], [2.8, 29.0], [2.9, 33.0], [3.0, 33.0], [3.1, 33.0], [3.2, 33.0], [3.3, 33.0], [3.4, 34.0], [3.5, 35.0], [3.6, 36.0], [3.7, 36.0], [3.8, 36.0], [3.9, 36.0], [4.0, 36.0], [4.1, 37.0], [4.2, 37.0], [4.3, 38.0], [4.4, 38.0], [4.5, 39.0], [4.6, 41.0], [4.7, 41.0], [4.8, 42.0], [4.9, 42.0], [5.0, 42.0], [5.1, 42.0], [5.2, 43.0], [5.3, 43.0], [5.4, 43.0], [5.5, 44.0], [5.6, 45.0], [5.7, 45.0], [5.8, 46.0], [5.9, 46.0], [6.0, 46.0], [6.1, 46.0], [6.2, 46.0], [6.3, 46.0], [6.4, 48.0], [6.5, 48.0], [6.6, 48.0], [6.7, 49.0], [6.8, 49.0], [6.9, 50.0], [7.0, 50.0], [7.1, 50.0], [7.2, 51.0], [7.3, 51.0], [7.4, 51.0], [7.5, 51.0], [7.6, 52.0], [7.7, 54.0], [7.8, 54.0], [7.9, 54.0], [8.0, 54.0], [8.1, 54.0], [8.2, 57.0], [8.3, 57.0], [8.4, 57.0], [8.5, 59.0], [8.6, 60.0], [8.7, 60.0], [8.8, 60.0], [8.9, 60.0], [9.0, 61.0], [9.1, 61.0], [9.2, 62.0], [9.3, 63.0], [9.4, 64.0], [9.5, 65.0], [9.6, 66.0], [9.7, 66.0], [9.8, 66.0], [9.9, 67.0], [10.0, 67.0], [10.1, 67.0], [10.2, 67.0], [10.3, 68.0], [10.4, 68.0], [10.5, 68.0], [10.6, 69.0], [10.7, 69.0], [10.8, 69.0], [10.9, 69.0], [11.0, 69.0], [11.1, 69.0], [11.2, 70.0], [11.3, 72.0], [11.4, 73.0], [11.5, 73.0], [11.6, 73.0], [11.7, 74.0], [11.8, 74.0], [11.9, 74.0], [12.0, 75.0], [12.1, 75.0], [12.2, 75.0], [12.3, 75.0], [12.4, 75.0], [12.5, 75.0], [12.6, 75.0], [12.7, 76.0], [12.8, 76.0], [12.9, 77.0], [13.0, 77.0], [13.1, 77.0], [13.2, 78.0], [13.3, 79.0], [13.4, 79.0], [13.5, 80.0], [13.6, 80.0], [13.7, 80.0], [13.8, 81.0], [13.9, 81.0], [14.0, 81.0], [14.1, 81.0], [14.2, 81.0], [14.3, 82.0], [14.4, 83.0], [14.5, 85.0], [14.6, 86.0], [14.7, 86.0], [14.8, 87.0], [14.9, 88.0], [15.0, 88.0], [15.1, 88.0], [15.2, 88.0], [15.3, 88.0], [15.4, 88.0], [15.5, 89.0], [15.6, 90.0], [15.7, 90.0], [15.8, 90.0], [15.9, 90.0], [16.0, 91.0], [16.1, 91.0], [16.2, 91.0], [16.3, 91.0], [16.4, 92.0], [16.5, 92.0], [16.6, 93.0], [16.7, 93.0], [16.8, 93.0], [16.9, 94.0], [17.0, 94.0], [17.1, 94.0], [17.2, 94.0], [17.3, 95.0], [17.4, 95.0], [17.5, 95.0], [17.6, 96.0], [17.7, 96.0], [17.8, 96.0], [17.9, 97.0], [18.0, 97.0], [18.1, 97.0], [18.2, 98.0], [18.3, 99.0], [18.4, 100.0], [18.5, 100.0], [18.6, 100.0], [18.7, 101.0], [18.8, 102.0], [18.9, 102.0], [19.0, 102.0], [19.1, 102.0], [19.2, 103.0], [19.3, 103.0], [19.4, 103.0], [19.5, 104.0], [19.6, 104.0], [19.7, 105.0], [19.8, 105.0], [19.9, 105.0], [20.0, 106.0], [20.1, 106.0], [20.2, 106.0], [20.3, 106.0], [20.4, 107.0], [20.5, 107.0], [20.6, 107.0], [20.7, 107.0], [20.8, 107.0], [20.9, 107.0], [21.0, 108.0], [21.1, 108.0], [21.2, 108.0], [21.3, 109.0], [21.4, 110.0], [21.5, 111.0], [21.6, 111.0], [21.7, 111.0], [21.8, 112.0], [21.9, 112.0], [22.0, 112.0], [22.1, 112.0], [22.2, 112.0], [22.3, 113.0], [22.4, 113.0], [22.5, 114.0], [22.6, 114.0], [22.7, 114.0], [22.8, 114.0], [22.9, 115.0], [23.0, 115.0], [23.1, 115.0], [23.2, 117.0], [23.3, 118.0], [23.4, 118.0], [23.5, 118.0], [23.6, 118.0], [23.7, 118.0], [23.8, 119.0], [23.9, 119.0], [24.0, 120.0], [24.1, 120.0], [24.2, 120.0], [24.3, 121.0], [24.4, 121.0], [24.5, 122.0], [24.6, 123.0], [24.7, 123.0], [24.8, 124.0], [24.9, 126.0], [25.0, 127.0], [25.1, 127.0], [25.2, 128.0], [25.3, 128.0], [25.4, 129.0], [25.5, 130.0], [25.6, 131.0], [25.7, 131.0], [25.8, 132.0], [25.9, 132.0], [26.0, 134.0], [26.1, 134.0], [26.2, 134.0], [26.3, 134.0], [26.4, 135.0], [26.5, 136.0], [26.6, 136.0], [26.7, 136.0], [26.8, 137.0], [26.9, 138.0], [27.0, 138.0], [27.1, 138.0], [27.2, 138.0], [27.3, 139.0], [27.4, 139.0], [27.5, 140.0], [27.6, 140.0], [27.7, 141.0], [27.8, 143.0], [27.9, 143.0], [28.0, 144.0], [28.1, 144.0], [28.2, 144.0], [28.3, 145.0], [28.4, 145.0], [28.5, 147.0], [28.6, 150.0], [28.7, 150.0], [28.8, 150.0], [28.9, 150.0], [29.0, 151.0], [29.1, 151.0], [29.2, 152.0], [29.3, 153.0], [29.4, 153.0], [29.5, 153.0], [29.6, 153.0], [29.7, 156.0], [29.8, 156.0], [29.9, 157.0], [30.0, 157.0], [30.1, 157.0], [30.2, 158.0], [30.3, 159.0], [30.4, 159.0], [30.5, 159.0], [30.6, 162.0], [30.7, 163.0], [30.8, 165.0], [30.9, 168.0], [31.0, 171.0], [31.1, 171.0], [31.2, 171.0], [31.3, 172.0], [31.4, 174.0], [31.5, 176.0], [31.6, 177.0], [31.7, 179.0], [31.8, 179.0], [31.9, 181.0], [32.0, 181.0], [32.1, 181.0], [32.2, 183.0], [32.3, 184.0], [32.4, 185.0], [32.5, 186.0], [32.6, 186.0], [32.7, 188.0], [32.8, 191.0], [32.9, 191.0], [33.0, 196.0], [33.1, 196.0], [33.2, 196.0], [33.3, 197.0], [33.4, 197.0], [33.5, 197.0], [33.6, 200.0], [33.7, 200.0], [33.8, 206.0], [33.9, 208.0], [34.0, 210.0], [34.1, 210.0], [34.2, 210.0], [34.3, 212.0], [34.4, 212.0], [34.5, 216.0], [34.6, 218.0], [34.7, 222.0], [34.8, 229.0], [34.9, 231.0], [35.0, 232.0], [35.1, 232.0], [35.2, 232.0], [35.3, 232.0], [35.4, 232.0], [35.5, 234.0], [35.6, 235.0], [35.7, 236.0], [35.8, 237.0], [35.9, 238.0], [36.0, 239.0], [36.1, 239.0], [36.2, 239.0], [36.3, 239.0], [36.4, 240.0], [36.5, 240.0], [36.6, 241.0], [36.7, 241.0], [36.8, 242.0], [36.9, 245.0], [37.0, 249.0], [37.1, 249.0], [37.2, 255.0], [37.3, 256.0], [37.4, 270.0], [37.5, 275.0], [37.6, 277.0], [37.7, 277.0], [37.8, 279.0], [37.9, 281.0], [38.0, 281.0], [38.1, 287.0], [38.2, 287.0], [38.3, 289.0], [38.4, 294.0], [38.5, 299.0], [38.6, 303.0], [38.7, 305.0], [38.8, 306.0], [38.9, 306.0], [39.0, 306.0], [39.1, 309.0], [39.2, 311.0], [39.3, 313.0], [39.4, 313.0], [39.5, 315.0], [39.6, 316.0], [39.7, 316.0], [39.8, 319.0], [39.9, 322.0], [40.0, 322.0], [40.1, 323.0], [40.2, 324.0], [40.3, 325.0], [40.4, 329.0], [40.5, 331.0], [40.6, 333.0], [40.7, 334.0], [40.8, 336.0], [40.9, 345.0], [41.0, 345.0], [41.1, 346.0], [41.2, 346.0], [41.3, 347.0], [41.4, 352.0], [41.5, 356.0], [41.6, 363.0], [41.7, 364.0], [41.8, 365.0], [41.9, 366.0], [42.0, 366.0], [42.1, 369.0], [42.2, 373.0], [42.3, 375.0], [42.4, 376.0], [42.5, 376.0], [42.6, 377.0], [42.7, 378.0], [42.8, 382.0], [42.9, 385.0], [43.0, 385.0], [43.1, 391.0], [43.2, 399.0], [43.3, 400.0], [43.4, 401.0], [43.5, 408.0], [43.6, 416.0], [43.7, 418.0], [43.8, 421.0], [43.9, 421.0], [44.0, 421.0], [44.1, 422.0], [44.2, 428.0], [44.3, 430.0], [44.4, 432.0], [44.5, 434.0], [44.6, 435.0], [44.7, 435.0], [44.8, 439.0], [44.9, 441.0], [45.0, 441.0], [45.1, 445.0], [45.2, 445.0], [45.3, 447.0], [45.4, 455.0], [45.5, 461.0], [45.6, 466.0], [45.7, 468.0], [45.8, 470.0], [45.9, 476.0], [46.0, 476.0], [46.1, 478.0], [46.2, 497.0], [46.3, 500.0], [46.4, 506.0], [46.5, 509.0], [46.6, 510.0], [46.7, 511.0], [46.8, 517.0], [46.9, 521.0], [47.0, 521.0], [47.1, 524.0], [47.2, 525.0], [47.3, 527.0], [47.4, 531.0], [47.5, 533.0], [47.6, 540.0], [47.7, 541.0], [47.8, 545.0], [47.9, 550.0], [48.0, 550.0], [48.1, 550.0], [48.2, 551.0], [48.3, 552.0], [48.4, 553.0], [48.5, 553.0], [48.6, 553.0], [48.7, 554.0], [48.8, 561.0], [48.9, 561.0], [49.0, 561.0], [49.1, 561.0], [49.2, 561.0], [49.3, 564.0], [49.4, 565.0], [49.5, 565.0], [49.6, 566.0], [49.7, 570.0], [49.8, 572.0], [49.9, 575.0], [50.0, 575.0], [50.1, 577.0], [50.2, 587.0], [50.3, 590.0], [50.4, 594.0], [50.5, 596.0], [50.6, 596.0], [50.7, 597.0], [50.8, 598.0], [50.9, 599.0], [51.0, 599.0], [51.1, 600.0], [51.2, 607.0], [51.3, 609.0], [51.4, 614.0], [51.5, 614.0], [51.6, 620.0], [51.7, 623.0], [51.8, 627.0], [51.9, 628.0], [52.0, 628.0], [52.1, 634.0], [52.2, 634.0], [52.3, 635.0], [52.4, 637.0], [52.5, 642.0], [52.6, 642.0], [52.7, 646.0], [52.8, 649.0], [52.9, 650.0], [53.0, 650.0], [53.1, 652.0], [53.2, 655.0], [53.3, 657.0], [53.4, 658.0], [53.5, 671.0], [53.6, 673.0], [53.7, 674.0], [53.8, 675.0], [53.9, 678.0], [54.0, 678.0], [54.1, 679.0], [54.2, 681.0], [54.3, 684.0], [54.4, 685.0], [54.5, 687.0], [54.6, 689.0], [54.7, 691.0], [54.8, 691.0], [54.9, 699.0], [55.0, 699.0], [55.1, 704.0], [55.2, 706.0], [55.3, 713.0], [55.4, 716.0], [55.5, 717.0], [55.6, 719.0], [55.7, 728.0], [55.8, 730.0], [55.9, 735.0], [56.0, 735.0], [56.1, 737.0], [56.2, 738.0], [56.3, 744.0], [56.4, 749.0], [56.5, 752.0], [56.6, 753.0], [56.7, 758.0], [56.8, 762.0], [56.9, 764.0], [57.0, 764.0], [57.1, 765.0], [57.2, 766.0], [57.3, 773.0], [57.4, 776.0], [57.5, 777.0], [57.6, 784.0], [57.7, 786.0], [57.8, 791.0], [57.9, 793.0], [58.0, 793.0], [58.1, 798.0], [58.2, 800.0], [58.3, 805.0], [58.4, 810.0], [58.5, 820.0], [58.6, 834.0], [58.7, 835.0], [58.8, 836.0], [58.9, 837.0], [59.0, 837.0], [59.1, 839.0], [59.2, 840.0], [59.3, 842.0], [59.4, 842.0], [59.5, 855.0], [59.6, 858.0], [59.7, 864.0], [59.8, 865.0], [59.9, 867.0], [60.0, 867.0], [60.1, 879.0], [60.2, 879.0], [60.3, 880.0], [60.4, 881.0], [60.5, 881.0], [60.6, 894.0], [60.7, 896.0], [60.8, 898.0], [60.9, 908.0], [61.0, 908.0], [61.1, 909.0], [61.2, 912.0], [61.3, 915.0], [61.4, 916.0], [61.5, 917.0], [61.6, 919.0], [61.7, 919.0], [61.8, 921.0], [61.9, 922.0], [62.0, 922.0], [62.1, 923.0], [62.2, 924.0], [62.3, 928.0], [62.4, 936.0], [62.5, 936.0], [62.6, 937.0], [62.7, 939.0], [62.8, 942.0], [62.9, 943.0], [63.0, 943.0], [63.1, 944.0], [63.2, 947.0], [63.3, 950.0], [63.4, 950.0], [63.5, 954.0], [63.6, 955.0], [63.7, 956.0], [63.8, 963.0], [63.9, 965.0], [64.0, 965.0], [64.1, 965.0], [64.2, 968.0], [64.3, 970.0], [64.4, 975.0], [64.5, 980.0], [64.6, 987.0], [64.7, 988.0], [64.8, 992.0], [64.9, 998.0], [65.0, 998.0], [65.1, 998.0], [65.2, 1001.0], [65.3, 1003.0], [65.4, 1005.0], [65.5, 1006.0], [65.6, 1007.0], [65.7, 1009.0], [65.8, 1010.0], [65.9, 1011.0], [66.0, 1011.0], [66.1, 1012.0], [66.2, 1014.0], [66.3, 1016.0], [66.4, 1018.0], [66.5, 1018.0], [66.6, 1021.0], [66.7, 1023.0], [66.8, 1023.0], [66.9, 1025.0], [67.0, 1025.0], [67.1, 1025.0], [67.2, 1034.0], [67.3, 1035.0], [67.4, 1035.0], [67.5, 1035.0], [67.6, 1035.0], [67.7, 1036.0], [67.8, 1038.0], [67.9, 1038.0], [68.0, 1038.0], [68.1, 1040.0], [68.2, 1045.0], [68.3, 1045.0], [68.4, 1045.0], [68.5, 1046.0], [68.6, 1046.0], [68.7, 1047.0], [68.8, 1055.0], [68.9, 1058.0], [69.0, 1058.0], [69.1, 1059.0], [69.2, 1061.0], [69.3, 1071.0], [69.4, 1076.0], [69.5, 1078.0], [69.6, 1078.0], [69.7, 1078.0], [69.8, 1079.0], [69.9, 1080.0], [70.0, 1080.0], [70.1, 1080.0], [70.2, 1082.0], [70.3, 1083.0], [70.4, 1084.0], [70.5, 1084.0], [70.6, 1087.0], [70.7, 1089.0], [70.8, 1092.0], [70.9, 1094.0], [71.0, 1094.0], [71.1, 1094.0], [71.2, 1094.0], [71.3, 1095.0], [71.4, 1099.0], [71.5, 1100.0], [71.6, 1100.0], [71.7, 1101.0], [71.8, 1101.0], [71.9, 1103.0], [72.0, 1103.0], [72.1, 1104.0], [72.2, 1105.0], [72.3, 1107.0], [72.4, 1108.0], [72.5, 1110.0], [72.6, 1110.0], [72.7, 1111.0], [72.8, 1122.0], [72.9, 1123.0], [73.0, 1123.0], [73.1, 1124.0], [73.2, 1130.0], [73.3, 1138.0], [73.4, 1143.0], [73.5, 1144.0], [73.6, 1145.0], [73.7, 1148.0], [73.8, 1149.0], [73.9, 1149.0], [74.0, 1149.0], [74.1, 1150.0], [74.2, 1151.0], [74.3, 1152.0], [74.4, 1153.0], [74.5, 1156.0], [74.6, 1166.0], [74.7, 1169.0], [74.8, 1169.0], [74.9, 1173.0], [75.0, 1173.0], [75.1, 1189.0], [75.2, 1193.0], [75.3, 1193.0], [75.4, 1203.0], [75.5, 1205.0], [75.6, 1209.0], [75.7, 1210.0], [75.8, 1210.0], [75.9, 1210.0], [76.0, 1210.0], [76.1, 1218.0], [76.2, 1221.0], [76.3, 1221.0], [76.4, 1222.0], [76.5, 1225.0], [76.6, 1228.0], [76.7, 1231.0], [76.8, 1233.0], [76.9, 1236.0], [77.0, 1236.0], [77.1, 1240.0], [77.2, 1240.0], [77.3, 1244.0], [77.4, 1245.0], [77.5, 1245.0], [77.6, 1246.0], [77.7, 1246.0], [77.8, 1248.0], [77.9, 1260.0], [78.0, 1260.0], [78.1, 1267.0], [78.2, 1268.0], [78.3, 1275.0], [78.4, 1276.0], [78.5, 1276.0], [78.6, 1278.0], [78.7, 1279.0], [78.8, 1281.0], [78.9, 1284.0], [79.0, 1284.0], [79.1, 1288.0], [79.2, 1288.0], [79.3, 1293.0], [79.4, 1296.0], [79.5, 1298.0], [79.6, 1299.0], [79.7, 1299.0], [79.8, 1304.0], [79.9, 1307.0], [80.0, 1307.0], [80.1, 1316.0], [80.2, 1318.0], [80.3, 1326.0], [80.4, 1327.0], [80.5, 1327.0], [80.6, 1328.0], [80.7, 1331.0], [80.8, 1336.0], [80.9, 1336.0], [81.0, 1336.0], [81.1, 1339.0], [81.2, 1339.0], [81.3, 1342.0], [81.4, 1343.0], [81.5, 1348.0], [81.6, 1349.0], [81.7, 1349.0], [81.8, 1351.0], [81.9, 1355.0], [82.0, 1355.0], [82.1, 1356.0], [82.2, 1365.0], [82.3, 1366.0], [82.4, 1374.0], [82.5, 1376.0], [82.6, 1377.0], [82.7, 1379.0], [82.8, 1385.0], [82.9, 1385.0], [83.0, 1385.0], [83.1, 1385.0], [83.2, 1388.0], [83.3, 1396.0], [83.4, 1397.0], [83.5, 1397.0], [83.6, 1398.0], [83.7, 1409.0], [83.8, 1410.0], [83.9, 1418.0], [84.0, 1418.0], [84.1, 1420.0], [84.2, 1423.0], [84.3, 1425.0], [84.4, 1429.0], [84.5, 1434.0], [84.6, 1440.0], [84.7, 1441.0], [84.8, 1444.0], [84.9, 1452.0], [85.0, 1452.0], [85.1, 1460.0], [85.2, 1467.0], [85.3, 1471.0], [85.4, 1472.0], [85.5, 1476.0], [85.6, 1476.0], [85.7, 1481.0], [85.8, 1482.0], [85.9, 1497.0], [86.0, 1497.0], [86.1, 1504.0], [86.2, 1508.0], [86.3, 1514.0], [86.4, 1515.0], [86.5, 1515.0], [86.6, 1516.0], [86.7, 1516.0], [86.8, 1517.0], [86.9, 1527.0], [87.0, 1527.0], [87.1, 1531.0], [87.2, 1537.0], [87.3, 1537.0], [87.4, 1542.0], [87.5, 1549.0], [87.6, 1550.0], [87.7, 1550.0], [87.8, 1562.0], [87.9, 1597.0], [88.0, 1597.0], [88.1, 1603.0], [88.2, 1611.0], [88.3, 1623.0], [88.4, 1628.0], [88.5, 1633.0], [88.6, 1651.0], [88.7, 1654.0], [88.8, 1657.0], [88.9, 1674.0], [89.0, 1674.0], [89.1, 1674.0], [89.2, 1674.0], [89.3, 1685.0], [89.4, 1699.0], [89.5, 1708.0], [89.6, 1709.0], [89.7, 1711.0], [89.8, 1713.0], [89.9, 1717.0], [90.0, 1717.0], [90.1, 1717.0], [90.2, 1724.0], [90.3, 1731.0], [90.4, 1738.0], [90.5, 1742.0], [90.6, 1747.0], [90.7, 1748.0], [90.8, 1766.0], [90.9, 1773.0], [91.0, 1773.0], [91.1, 1780.0], [91.2, 1782.0], [91.3, 1789.0], [91.4, 1792.0], [91.5, 1795.0], [91.6, 1796.0], [91.7, 1799.0], [91.8, 1806.0], [91.9, 1825.0], [92.0, 1825.0], [92.1, 1828.0], [92.2, 1841.0], [92.3, 1843.0], [92.4, 1851.0], [92.5, 1856.0], [92.6, 1856.0], [92.7, 1869.0], [92.8, 1884.0], [92.9, 1901.0], [93.0, 1901.0], [93.1, 1917.0], [93.2, 1920.0], [93.3, 1924.0], [93.4, 1924.0], [93.5, 1936.0], [93.6, 1937.0], [93.7, 1944.0], [93.8, 1968.0], [93.9, 1983.0], [94.0, 1983.0], [94.1, 1990.0], [94.2, 2006.0], [94.3, 2039.0], [94.4, 2039.0], [94.5, 2046.0], [94.6, 2046.0], [94.7, 2051.0], [94.8, 2054.0], [94.9, 2073.0], [95.0, 2073.0], [95.1, 2074.0], [95.2, 2081.0], [95.3, 2082.0], [95.4, 2088.0], [95.5, 2114.0], [95.6, 2119.0], [95.7, 2126.0], [95.8, 2143.0], [95.9, 2149.0], [96.0, 2149.0], [96.1, 2150.0], [96.2, 2163.0], [96.3, 2170.0], [96.4, 2198.0], [96.5, 2208.0], [96.6, 2245.0], [96.7, 2279.0], [96.8, 2283.0], [96.9, 2300.0], [97.0, 2300.0], [97.1, 2347.0], [97.2, 2406.0], [97.3, 2406.0], [97.4, 2423.0], [97.5, 2454.0], [97.6, 2455.0], [97.7, 2477.0], [97.8, 2488.0], [97.9, 2495.0], [98.0, 2495.0], [98.1, 2523.0], [98.2, 2546.0], [98.3, 2558.0], [98.4, 2580.0], [98.5, 2616.0], [98.6, 2643.0], [98.7, 2653.0], [98.8, 2662.0], [98.9, 2678.0], [99.0, 2678.0], [99.1, 2688.0], [99.2, 2698.0], [99.3, 2707.0], [99.4, 2745.0], [99.5, 2752.0], [99.6, 2753.0], [99.7, 2779.0], [99.8, 2817.0], [99.9, 2822.0], [100.0, 2822.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 4.0], [0.1, 4.0], [0.2, 6.0], [0.3, 11.0], [0.4, 19.0], [0.5, 22.0], [0.6, 22.0], [0.7, 23.0], [0.8, 24.0], [0.9, 26.0], [1.0, 29.0], [1.1, 29.0], [1.2, 30.0], [1.3, 32.0], [1.4, 34.0], [1.5, 35.0], [1.6, 35.0], [1.7, 35.0], [1.8, 39.0], [1.9, 40.0], [2.0, 40.0], [2.1, 40.0], [2.2, 41.0], [2.3, 42.0], [2.4, 43.0], [2.5, 43.0], [2.6, 44.0], [2.7, 44.0], [2.8, 45.0], [2.9, 47.0], [3.0, 47.0], [3.1, 49.0], [3.2, 51.0], [3.3, 53.0], [3.4, 57.0], [3.5, 57.0], [3.6, 58.0], [3.7, 59.0], [3.8, 59.0], [3.9, 60.0], [4.0, 60.0], [4.1, 60.0], [4.2, 61.0], [4.3, 62.0], [4.4, 62.0], [4.5, 62.0], [4.6, 62.0], [4.7, 63.0], [4.8, 64.0], [4.9, 65.0], [5.0, 66.0], [5.1, 66.0], [5.2, 67.0], [5.3, 68.0], [5.4, 70.0], [5.5, 70.0], [5.6, 70.0], [5.7, 71.0], [5.8, 71.0], [5.9, 72.0], [6.0, 72.0], [6.1, 72.0], [6.2, 74.0], [6.3, 74.0], [6.4, 76.0], [6.5, 76.0], [6.6, 77.0], [6.7, 77.0], [6.8, 77.0], [6.9, 77.0], [7.0, 79.0], [7.1, 79.0], [7.2, 81.0], [7.3, 82.0], [7.4, 83.0], [7.5, 83.0], [7.6, 84.0], [7.7, 84.0], [7.8, 84.0], [7.9, 84.0], [8.0, 84.0], [8.1, 84.0], [8.2, 85.0], [8.3, 86.0], [8.4, 87.0], [8.5, 87.0], [8.6, 87.0], [8.7, 88.0], [8.8, 89.0], [8.9, 90.0], [9.0, 91.0], [9.1, 91.0], [9.2, 92.0], [9.3, 92.0], [9.4, 92.0], [9.5, 93.0], [9.6, 94.0], [9.7, 94.0], [9.8, 94.0], [9.9, 95.0], [10.0, 95.0], [10.1, 95.0], [10.2, 96.0], [10.3, 96.0], [10.4, 98.0], [10.5, 98.0], [10.6, 99.0], [10.7, 99.0], [10.8, 99.0], [10.9, 99.0], [11.0, 101.0], [11.1, 101.0], [11.2, 102.0], [11.3, 102.0], [11.4, 103.0], [11.5, 104.0], [11.6, 105.0], [11.7, 105.0], [11.8, 106.0], [11.9, 107.0], [12.0, 107.0], [12.1, 107.0], [12.2, 107.0], [12.3, 108.0], [12.4, 108.0], [12.5, 109.0], [12.6, 110.0], [12.7, 110.0], [12.8, 110.0], [12.9, 111.0], [13.0, 112.0], [13.1, 112.0], [13.2, 113.0], [13.3, 113.0], [13.4, 115.0], [13.5, 115.0], [13.6, 118.0], [13.7, 118.0], [13.8, 118.0], [13.9, 118.0], [14.0, 119.0], [14.1, 119.0], [14.2, 119.0], [14.3, 120.0], [14.4, 121.0], [14.5, 122.0], [14.6, 122.0], [14.7, 122.0], [14.8, 124.0], [14.9, 124.0], [15.0, 126.0], [15.1, 126.0], [15.2, 127.0], [15.3, 127.0], [15.4, 127.0], [15.5, 127.0], [15.6, 128.0], [15.7, 129.0], [15.8, 129.0], [15.9, 130.0], [16.0, 131.0], [16.1, 131.0], [16.2, 132.0], [16.3, 133.0], [16.4, 134.0], [16.5, 134.0], [16.6, 135.0], [16.7, 135.0], [16.8, 137.0], [16.9, 138.0], [17.0, 139.0], [17.1, 139.0], [17.2, 141.0], [17.3, 141.0], [17.4, 144.0], [17.5, 144.0], [17.6, 144.0], [17.7, 145.0], [17.8, 145.0], [17.9, 146.0], [18.0, 146.0], [18.1, 146.0], [18.2, 146.0], [18.3, 147.0], [18.4, 148.0], [18.5, 148.0], [18.6, 150.0], [18.7, 150.0], [18.8, 152.0], [18.9, 152.0], [19.0, 153.0], [19.1, 153.0], [19.2, 153.0], [19.3, 154.0], [19.4, 155.0], [19.5, 155.0], [19.6, 156.0], [19.7, 156.0], [19.8, 157.0], [19.9, 158.0], [20.0, 158.0], [20.1, 158.0], [20.2, 159.0], [20.3, 160.0], [20.4, 160.0], [20.5, 161.0], [20.6, 161.0], [20.7, 163.0], [20.8, 163.0], [20.9, 163.0], [21.0, 164.0], [21.1, 164.0], [21.2, 164.0], [21.3, 164.0], [21.4, 164.0], [21.5, 166.0], [21.6, 167.0], [21.7, 167.0], [21.8, 167.0], [21.9, 168.0], [22.0, 169.0], [22.1, 169.0], [22.2, 169.0], [22.3, 172.0], [22.4, 172.0], [22.5, 173.0], [22.6, 173.0], [22.7, 174.0], [22.8, 174.0], [22.9, 174.0], [23.0, 175.0], [23.1, 175.0], [23.2, 175.0], [23.3, 175.0], [23.4, 176.0], [23.5, 177.0], [23.6, 178.0], [23.7, 178.0], [23.8, 179.0], [23.9, 179.0], [24.0, 180.0], [24.1, 180.0], [24.2, 181.0], [24.3, 181.0], [24.4, 182.0], [24.5, 183.0], [24.6, 184.0], [24.7, 185.0], [24.8, 185.0], [24.9, 186.0], [25.0, 186.0], [25.1, 186.0], [25.2, 186.0], [25.3, 187.0], [25.4, 187.0], [25.5, 187.0], [25.6, 188.0], [25.7, 189.0], [25.8, 189.0], [25.9, 190.0], [26.0, 192.0], [26.1, 192.0], [26.2, 196.0], [26.3, 196.0], [26.4, 198.0], [26.5, 198.0], [26.6, 200.0], [26.7, 202.0], [26.8, 204.0], [26.9, 206.0], [27.0, 207.0], [27.1, 207.0], [27.2, 208.0], [27.3, 208.0], [27.4, 208.0], [27.5, 209.0], [27.6, 210.0], [27.7, 212.0], [27.8, 212.0], [27.9, 213.0], [28.0, 213.0], [28.1, 213.0], [28.2, 216.0], [28.3, 219.0], [28.4, 219.0], [28.5, 220.0], [28.6, 222.0], [28.7, 223.0], [28.8, 224.0], [28.9, 226.0], [29.0, 227.0], [29.1, 227.0], [29.2, 229.0], [29.3, 232.0], [29.4, 232.0], [29.5, 236.0], [29.6, 237.0], [29.7, 237.0], [29.8, 237.0], [29.9, 243.0], [30.0, 246.0], [30.1, 246.0], [30.2, 249.0], [30.3, 250.0], [30.4, 252.0], [30.5, 253.0], [30.6, 253.0], [30.7, 254.0], [30.8, 254.0], [30.9, 255.0], [31.0, 256.0], [31.1, 256.0], [31.2, 260.0], [31.3, 261.0], [31.4, 263.0], [31.5, 266.0], [31.6, 266.0], [31.7, 272.0], [31.8, 272.0], [31.9, 272.0], [32.0, 274.0], [32.1, 274.0], [32.2, 275.0], [32.3, 276.0], [32.4, 278.0], [32.5, 279.0], [32.6, 281.0], [32.7, 284.0], [32.8, 286.0], [32.9, 286.0], [33.0, 294.0], [33.1, 294.0], [33.2, 305.0], [33.3, 309.0], [33.4, 312.0], [33.5, 317.0], [33.6, 320.0], [33.7, 321.0], [33.8, 323.0], [33.9, 325.0], [34.0, 326.0], [34.1, 326.0], [34.2, 327.0], [34.3, 329.0], [34.4, 337.0], [34.5, 341.0], [34.6, 341.0], [34.7, 342.0], [34.8, 343.0], [34.9, 343.0], [35.0, 344.0], [35.1, 344.0], [35.2, 357.0], [35.3, 358.0], [35.4, 358.0], [35.5, 363.0], [35.6, 365.0], [35.7, 370.0], [35.8, 371.0], [35.9, 371.0], [36.0, 371.0], [36.1, 375.0], [36.2, 380.0], [36.3, 383.0], [36.4, 390.0], [36.5, 390.0], [36.6, 392.0], [36.7, 405.0], [36.8, 410.0], [36.9, 416.0], [37.0, 416.0], [37.1, 421.0], [37.2, 430.0], [37.3, 435.0], [37.4, 438.0], [37.5, 440.0], [37.6, 445.0], [37.7, 449.0], [37.8, 454.0], [37.9, 462.0], [38.0, 462.0], [38.1, 471.0], [38.2, 479.0], [38.3, 482.0], [38.4, 483.0], [38.5, 483.0], [38.6, 485.0], [38.7, 486.0], [38.8, 489.0], [38.9, 491.0], [39.0, 491.0], [39.1, 493.0], [39.2, 494.0], [39.3, 511.0], [39.4, 511.0], [39.5, 516.0], [39.6, 517.0], [39.7, 519.0], [39.8, 520.0], [39.9, 522.0], [40.0, 522.0], [40.1, 534.0], [40.2, 537.0], [40.3, 544.0], [40.4, 548.0], [40.5, 554.0], [40.6, 554.0], [40.7, 554.0], [40.8, 556.0], [40.9, 565.0], [41.0, 565.0], [41.1, 566.0], [41.2, 568.0], [41.3, 568.0], [41.4, 572.0], [41.5, 575.0], [41.6, 575.0], [41.7, 580.0], [41.8, 580.0], [41.9, 588.0], [42.0, 588.0], [42.1, 591.0], [42.2, 593.0], [42.3, 597.0], [42.4, 604.0], [42.5, 606.0], [42.6, 607.0], [42.7, 607.0], [42.8, 608.0], [42.9, 610.0], [43.0, 610.0], [43.1, 612.0], [43.2, 615.0], [43.3, 616.0], [43.4, 618.0], [43.5, 619.0], [43.6, 625.0], [43.7, 629.0], [43.8, 632.0], [43.9, 634.0], [44.0, 634.0], [44.1, 635.0], [44.2, 635.0], [44.3, 637.0], [44.4, 642.0], [44.5, 654.0], [44.6, 655.0], [44.7, 662.0], [44.8, 665.0], [44.9, 667.0], [45.0, 667.0], [45.1, 670.0], [45.2, 670.0], [45.3, 672.0], [45.4, 672.0], [45.5, 675.0], [45.6, 684.0], [45.7, 699.0], [45.8, 701.0], [45.9, 702.0], [46.0, 702.0], [46.1, 709.0], [46.2, 714.0], [46.3, 717.0], [46.4, 718.0], [46.5, 724.0], [46.6, 727.0], [46.7, 729.0], [46.8, 731.0], [46.9, 731.0], [47.0, 731.0], [47.1, 735.0], [47.2, 736.0], [47.3, 737.0], [47.4, 743.0], [47.5, 744.0], [47.6, 750.0], [47.7, 752.0], [47.8, 753.0], [47.9, 754.0], [48.0, 754.0], [48.1, 755.0], [48.2, 755.0], [48.3, 755.0], [48.4, 757.0], [48.5, 765.0], [48.6, 766.0], [48.7, 769.0], [48.8, 770.0], [48.9, 773.0], [49.0, 773.0], [49.1, 775.0], [49.2, 776.0], [49.3, 778.0], [49.4, 781.0], [49.5, 782.0], [49.6, 784.0], [49.7, 785.0], [49.8, 795.0], [49.9, 796.0], [50.0, 796.0], [50.1, 807.0], [50.2, 808.0], [50.3, 808.0], [50.4, 811.0], [50.5, 823.0], [50.6, 825.0], [50.7, 826.0], [50.8, 831.0], [50.9, 832.0], [51.0, 832.0], [51.1, 838.0], [51.2, 839.0], [51.3, 842.0], [51.4, 842.0], [51.5, 848.0], [51.6, 848.0], [51.7, 854.0], [51.8, 855.0], [51.9, 857.0], [52.0, 857.0], [52.1, 857.0], [52.2, 862.0], [52.3, 862.0], [52.4, 871.0], [52.5, 875.0], [52.6, 876.0], [52.7, 878.0], [52.8, 880.0], [52.9, 881.0], [53.0, 881.0], [53.1, 881.0], [53.2, 883.0], [53.3, 885.0], [53.4, 886.0], [53.5, 891.0], [53.6, 891.0], [53.7, 897.0], [53.8, 897.0], [53.9, 902.0], [54.0, 902.0], [54.1, 908.0], [54.2, 909.0], [54.3, 910.0], [54.4, 915.0], [54.5, 920.0], [54.6, 921.0], [54.7, 925.0], [54.8, 926.0], [54.9, 932.0], [55.0, 932.0], [55.1, 933.0], [55.2, 938.0], [55.3, 941.0], [55.4, 942.0], [55.5, 942.0], [55.6, 944.0], [55.7, 954.0], [55.8, 956.0], [55.9, 956.0], [56.0, 956.0], [56.1, 960.0], [56.2, 961.0], [56.3, 964.0], [56.4, 965.0], [56.5, 966.0], [56.6, 967.0], [56.7, 968.0], [56.8, 970.0], [56.9, 970.0], [57.0, 970.0], [57.1, 970.0], [57.2, 971.0], [57.3, 973.0], [57.4, 975.0], [57.5, 976.0], [57.6, 978.0], [57.7, 984.0], [57.8, 987.0], [57.9, 991.0], [58.0, 991.0], [58.1, 1004.0], [58.2, 1008.0], [58.3, 1014.0], [58.4, 1015.0], [58.5, 1019.0], [58.6, 1021.0], [58.7, 1021.0], [58.8, 1024.0], [58.9, 1025.0], [59.0, 1025.0], [59.1, 1026.0], [59.2, 1028.0], [59.3, 1030.0], [59.4, 1036.0], [59.5, 1038.0], [59.6, 1039.0], [59.7, 1040.0], [59.8, 1045.0], [59.9, 1045.0], [60.0, 1045.0], [60.1, 1045.0], [60.2, 1047.0], [60.3, 1050.0], [60.4, 1050.0], [60.5, 1051.0], [60.6, 1052.0], [60.7, 1053.0], [60.8, 1054.0], [60.9, 1059.0], [61.0, 1059.0], [61.1, 1063.0], [61.2, 1063.0], [61.3, 1071.0], [61.4, 1073.0], [61.5, 1075.0], [61.6, 1075.0], [61.7, 1083.0], [61.8, 1083.0], [61.9, 1084.0], [62.0, 1084.0], [62.1, 1085.0], [62.2, 1086.0], [62.3, 1086.0], [62.4, 1088.0], [62.5, 1094.0], [62.6, 1097.0], [62.7, 1099.0], [62.8, 1099.0], [62.9, 1100.0], [63.0, 1100.0], [63.1, 1103.0], [63.2, 1104.0], [63.3, 1106.0], [63.4, 1108.0], [63.5, 1108.0], [63.6, 1111.0], [63.7, 1112.0], [63.8, 1113.0], [63.9, 1113.0], [64.0, 1113.0], [64.1, 1117.0], [64.2, 1119.0], [64.3, 1124.0], [64.4, 1124.0], [64.5, 1125.0], [64.6, 1126.0], [64.7, 1132.0], [64.8, 1135.0], [64.9, 1137.0], [65.0, 1137.0], [65.1, 1137.0], [65.2, 1138.0], [65.3, 1140.0], [65.4, 1142.0], [65.5, 1144.0], [65.6, 1145.0], [65.7, 1148.0], [65.8, 1148.0], [65.9, 1149.0], [66.0, 1149.0], [66.1, 1149.0], [66.2, 1158.0], [66.3, 1158.0], [66.4, 1159.0], [66.5, 1160.0], [66.6, 1162.0], [66.7, 1165.0], [66.8, 1172.0], [66.9, 1174.0], [67.0, 1174.0], [67.1, 1174.0], [67.2, 1181.0], [67.3, 1183.0], [67.4, 1186.0], [67.5, 1191.0], [67.6, 1192.0], [67.7, 1193.0], [67.8, 1194.0], [67.9, 1207.0], [68.0, 1207.0], [68.1, 1211.0], [68.2, 1220.0], [68.3, 1221.0], [68.4, 1221.0], [68.5, 1223.0], [68.6, 1224.0], [68.7, 1227.0], [68.8, 1228.0], [68.9, 1229.0], [69.0, 1229.0], [69.1, 1231.0], [69.2, 1231.0], [69.3, 1237.0], [69.4, 1244.0], [69.5, 1248.0], [69.6, 1248.0], [69.7, 1250.0], [69.8, 1254.0], [69.9, 1257.0], [70.0, 1257.0], [70.1, 1257.0], [70.2, 1258.0], [70.3, 1259.0], [70.4, 1260.0], [70.5, 1262.0], [70.6, 1268.0], [70.7, 1271.0], [70.8, 1279.0], [70.9, 1282.0], [71.0, 1282.0], [71.1, 1284.0], [71.2, 1291.0], [71.3, 1294.0], [71.4, 1296.0], [71.5, 1296.0], [71.6, 1298.0], [71.7, 1313.0], [71.8, 1327.0], [71.9, 1327.0], [72.0, 1327.0], [72.1, 1327.0], [72.2, 1330.0], [72.3, 1333.0], [72.4, 1333.0], [72.5, 1334.0], [72.6, 1340.0], [72.7, 1353.0], [72.8, 1353.0], [72.9, 1354.0], [73.0, 1354.0], [73.1, 1356.0], [73.2, 1357.0], [73.3, 1366.0], [73.4, 1368.0], [73.5, 1376.0], [73.6, 1382.0], [73.7, 1382.0], [73.8, 1404.0], [73.9, 1411.0], [74.0, 1411.0], [74.1, 1416.0], [74.2, 1424.0], [74.3, 1425.0], [74.4, 1431.0], [74.5, 1442.0], [74.6, 1445.0], [74.7, 1457.0], [74.8, 1457.0], [74.9, 1457.0], [75.0, 1457.0], [75.1, 1464.0], [75.2, 1466.0], [75.3, 1466.0], [75.4, 1466.0], [75.5, 1475.0], [75.6, 1477.0], [75.7, 1481.0], [75.8, 1483.0], [75.9, 1494.0], [76.0, 1494.0], [76.1, 1496.0], [76.2, 1504.0], [76.3, 1517.0], [76.4, 1521.0], [76.5, 1528.0], [76.6, 1533.0], [76.7, 1533.0], [76.8, 1533.0], [76.9, 1534.0], [77.0, 1534.0], [77.1, 1534.0], [77.2, 1534.0], [77.3, 1534.0], [77.4, 1534.0], [77.5, 1534.0], [77.6, 1534.0], [77.7, 1535.0], [77.8, 1535.0], [77.9, 1535.0], [78.0, 1535.0], [78.1, 1535.0], [78.2, 1535.0], [78.3, 1535.0], [78.4, 1535.0], [78.5, 1536.0], [78.6, 1536.0], [78.7, 1536.0], [78.8, 1537.0], [78.9, 1537.0], [79.0, 1537.0], [79.1, 1537.0], [79.2, 1537.0], [79.3, 1538.0], [79.4, 1538.0], [79.5, 1538.0], [79.6, 1538.0], [79.7, 1538.0], [79.8, 1538.0], [79.9, 1542.0], [80.0, 1542.0], [80.1, 1546.0], [80.2, 1548.0], [80.3, 1549.0], [80.4, 1549.0], [80.5, 1550.0], [80.6, 1567.0], [80.7, 1569.0], [80.8, 1576.0], [80.9, 1581.0], [81.0, 1581.0], [81.1, 1591.0], [81.2, 1604.0], [81.3, 1607.0], [81.4, 1610.0], [81.5, 1611.0], [81.6, 1615.0], [81.7, 1615.0], [81.8, 1618.0], [81.9, 1629.0], [82.0, 1629.0], [82.1, 1631.0], [82.2, 1646.0], [82.3, 1658.0], [82.4, 1660.0], [82.5, 1663.0], [82.6, 1666.0], [82.7, 1671.0], [82.8, 1679.0], [82.9, 1684.0], [83.0, 1684.0], [83.1, 1687.0], [83.2, 1688.0], [83.3, 1689.0], [83.4, 1699.0], [83.5, 1701.0], [83.6, 1702.0], [83.7, 1705.0], [83.8, 1714.0], [83.9, 1716.0], [84.0, 1716.0], [84.1, 1730.0], [84.2, 1735.0], [84.3, 1740.0], [84.4, 1741.0], [84.5, 1742.0], [84.6, 1742.0], [84.7, 1747.0], [84.8, 1750.0], [84.9, 1755.0], [85.0, 1755.0], [85.1, 1755.0], [85.2, 1761.0], [85.3, 1764.0], [85.4, 1765.0], [85.5, 1775.0], [85.6, 1776.0], [85.7, 1779.0], [85.8, 1786.0], [85.9, 1789.0], [86.0, 1789.0], [86.1, 1795.0], [86.2, 1799.0], [86.3, 1800.0], [86.4, 1802.0], [86.5, 1811.0], [86.6, 1811.0], [86.7, 1818.0], [86.8, 1819.0], [86.9, 1821.0], [87.0, 1821.0], [87.1, 1822.0], [87.2, 1823.0], [87.3, 1838.0], [87.4, 1841.0], [87.5, 1842.0], [87.6, 1851.0], [87.7, 1857.0], [87.8, 1864.0], [87.9, 1867.0], [88.0, 1867.0], [88.1, 1868.0], [88.2, 1873.0], [88.3, 1877.0], [88.4, 1883.0], [88.5, 1886.0], [88.6, 1886.0], [88.7, 1894.0], [88.8, 1894.0], [88.9, 1899.0], [89.0, 1899.0], [89.1, 1903.0], [89.2, 1908.0], [89.3, 1913.0], [89.4, 1914.0], [89.5, 1916.0], [89.6, 1926.0], [89.7, 1933.0], [89.8, 1938.0], [89.9, 1938.0], [90.0, 1938.0], [90.1, 1939.0], [90.2, 1946.0], [90.3, 1952.0], [90.4, 1953.0], [90.5, 1960.0], [90.6, 1968.0], [90.7, 1973.0], [90.8, 1979.0], [90.9, 1984.0], [91.0, 1984.0], [91.1, 1986.0], [91.2, 1997.0], [91.3, 2008.0], [91.4, 2014.0], [91.5, 2017.0], [91.6, 2024.0], [91.7, 2031.0], [91.8, 2043.0], [91.9, 2052.0], [92.0, 2052.0], [92.1, 2054.0], [92.2, 2060.0], [92.3, 2067.0], [92.4, 2070.0], [92.5, 2079.0], [92.6, 2089.0], [92.7, 2097.0], [92.8, 2104.0], [92.9, 2106.0], [93.0, 2106.0], [93.1, 2117.0], [93.2, 2123.0], [93.3, 2130.0], [93.4, 2133.0], [93.5, 2139.0], [93.6, 2141.0], [93.7, 2144.0], [93.8, 2149.0], [93.9, 2152.0], [94.0, 2152.0], [94.1, 2153.0], [94.2, 2155.0], [94.3, 2173.0], [94.4, 2181.0], [94.5, 2192.0], [94.6, 2198.0], [94.7, 2199.0], [94.8, 2201.0], [94.9, 2203.0], [95.0, 2203.0], [95.1, 2210.0], [95.2, 2222.0], [95.3, 2227.0], [95.4, 2230.0], [95.5, 2242.0], [95.6, 2298.0], [95.7, 2304.0], [95.8, 2318.0], [95.9, 2326.0], [96.0, 2326.0], [96.1, 2331.0], [96.2, 2336.0], [96.3, 2337.0], [96.4, 2344.0], [96.5, 2346.0], [96.6, 2351.0], [96.7, 2353.0], [96.8, 2355.0], [96.9, 2355.0], [97.0, 2355.0], [97.1, 2364.0], [97.2, 2367.0], [97.3, 2367.0], [97.4, 2390.0], [97.5, 2394.0], [97.6, 2398.0], [97.7, 2402.0], [97.8, 2430.0], [97.9, 2435.0], [98.0, 2435.0], [98.1, 2438.0], [98.2, 2439.0], [98.3, 2459.0], [98.4, 2670.0], [98.5, 2722.0], [98.6, 2726.0], [98.7, 2741.0], [98.8, 2849.0], [98.9, 2851.0], [99.0, 2851.0], [99.1, 2893.0], [99.2, 2988.0], [99.3, 3085.0], [99.4, 3090.0], [99.5, 3152.0], [99.6, 3450.0], [99.7, 3641.0], [99.8, 3731.0], [99.9, 4470.0], [100.0, 4470.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 17.0], [0.1, 17.0], [0.2, 17.0], [0.3, 23.0], [0.4, 47.0], [0.5, 52.0], [0.6, 57.0], [0.7, 67.0], [0.8, 71.0], [0.9, 76.0], [1.0, 76.0], [1.1, 82.0], [1.2, 89.0], [1.3, 90.0], [1.4, 91.0], [1.5, 100.0], [1.6, 105.0], [1.7, 105.0], [1.8, 115.0], [1.9, 120.0], [2.0, 120.0], [2.1, 123.0], [2.2, 126.0], [2.3, 134.0], [2.4, 136.0], [2.5, 138.0], [2.6, 139.0], [2.7, 139.0], [2.8, 140.0], [2.9, 143.0], [3.0, 143.0], [3.1, 146.0], [3.2, 146.0], [3.3, 146.0], [3.4, 146.0], [3.5, 151.0], [3.6, 152.0], [3.7, 153.0], [3.8, 154.0], [3.9, 155.0], [4.0, 155.0], [4.1, 155.0], [4.2, 155.0], [4.3, 157.0], [4.4, 157.0], [4.5, 159.0], [4.6, 159.0], [4.7, 160.0], [4.8, 160.0], [4.9, 161.0], [5.0, 161.0], [5.1, 164.0], [5.2, 166.0], [5.3, 168.0], [5.4, 170.0], [5.5, 170.0], [5.6, 174.0], [5.7, 177.0], [5.8, 178.0], [5.9, 178.0], [6.0, 182.0], [6.1, 182.0], [6.2, 184.0], [6.3, 186.0], [6.4, 186.0], [6.5, 186.0], [6.6, 187.0], [6.7, 188.0], [6.8, 188.0], [6.9, 189.0], [7.0, 190.0], [7.1, 190.0], [7.2, 190.0], [7.3, 190.0], [7.4, 192.0], [7.5, 192.0], [7.6, 193.0], [7.7, 193.0], [7.8, 195.0], [7.9, 195.0], [8.0, 197.0], [8.1, 197.0], [8.2, 199.0], [8.3, 202.0], [8.4, 205.0], [8.5, 205.0], [8.6, 206.0], [8.7, 207.0], [8.8, 209.0], [8.9, 209.0], [9.0, 210.0], [9.1, 210.0], [9.2, 212.0], [9.3, 212.0], [9.4, 212.0], [9.5, 213.0], [9.6, 214.0], [9.7, 216.0], [9.8, 217.0], [9.9, 219.0], [10.0, 219.0], [10.1, 219.0], [10.2, 220.0], [10.3, 220.0], [10.4, 222.0], [10.5, 222.0], [10.6, 223.0], [10.7, 223.0], [10.8, 224.0], [10.9, 225.0], [11.0, 226.0], [11.1, 226.0], [11.2, 226.0], [11.3, 228.0], [11.4, 228.0], [11.5, 230.0], [11.6, 230.0], [11.7, 231.0], [11.8, 232.0], [11.9, 232.0], [12.0, 233.0], [12.1, 233.0], [12.2, 234.0], [12.3, 234.0], [12.4, 234.0], [12.5, 235.0], [12.6, 236.0], [12.7, 236.0], [12.8, 236.0], [12.9, 238.0], [13.0, 241.0], [13.1, 241.0], [13.2, 245.0], [13.3, 245.0], [13.4, 246.0], [13.5, 246.0], [13.6, 247.0], [13.7, 247.0], [13.8, 249.0], [13.9, 249.0], [14.0, 249.0], [14.1, 249.0], [14.2, 250.0], [14.3, 250.0], [14.4, 250.0], [14.5, 251.0], [14.6, 252.0], [14.7, 253.0], [14.8, 254.0], [14.9, 254.0], [15.0, 255.0], [15.1, 255.0], [15.2, 255.0], [15.3, 255.0], [15.4, 256.0], [15.5, 256.0], [15.6, 258.0], [15.7, 259.0], [15.8, 259.0], [15.9, 260.0], [16.0, 261.0], [16.1, 261.0], [16.2, 262.0], [16.3, 263.0], [16.4, 264.0], [16.5, 265.0], [16.6, 265.0], [16.7, 266.0], [16.8, 266.0], [16.9, 272.0], [17.0, 272.0], [17.1, 272.0], [17.2, 275.0], [17.3, 277.0], [17.4, 278.0], [17.5, 279.0], [17.6, 279.0], [17.7, 281.0], [17.8, 281.0], [17.9, 286.0], [18.0, 288.0], [18.1, 288.0], [18.2, 288.0], [18.3, 289.0], [18.4, 289.0], [18.5, 289.0], [18.6, 290.0], [18.7, 294.0], [18.8, 295.0], [18.9, 296.0], [19.0, 297.0], [19.1, 297.0], [19.2, 297.0], [19.3, 297.0], [19.4, 298.0], [19.5, 299.0], [19.6, 300.0], [19.7, 301.0], [19.8, 302.0], [19.9, 302.0], [20.0, 302.0], [20.1, 302.0], [20.2, 304.0], [20.3, 305.0], [20.4, 306.0], [20.5, 308.0], [20.6, 320.0], [20.7, 323.0], [20.8, 326.0], [20.9, 329.0], [21.0, 329.0], [21.1, 329.0], [21.2, 332.0], [21.3, 332.0], [21.4, 333.0], [21.5, 334.0], [21.6, 338.0], [21.7, 340.0], [21.8, 340.0], [21.9, 344.0], [22.0, 346.0], [22.1, 346.0], [22.2, 350.0], [22.3, 351.0], [22.4, 353.0], [22.5, 354.0], [22.6, 355.0], [22.7, 355.0], [22.8, 358.0], [22.9, 370.0], [23.0, 376.0], [23.1, 376.0], [23.2, 376.0], [23.3, 380.0], [23.4, 381.0], [23.5, 384.0], [23.6, 385.0], [23.7, 387.0], [23.8, 387.0], [23.9, 391.0], [24.0, 396.0], [24.1, 396.0], [24.2, 397.0], [24.3, 397.0], [24.4, 399.0], [24.5, 400.0], [24.6, 400.0], [24.7, 403.0], [24.8, 405.0], [24.9, 406.0], [25.0, 407.0], [25.1, 407.0], [25.2, 409.0], [25.3, 409.0], [25.4, 412.0], [25.5, 413.0], [25.6, 413.0], [25.7, 414.0], [25.8, 419.0], [25.9, 422.0], [26.0, 423.0], [26.1, 423.0], [26.2, 426.0], [26.3, 427.0], [26.4, 428.0], [26.5, 433.0], [26.6, 433.0], [26.7, 435.0], [26.8, 436.0], [26.9, 436.0], [27.0, 443.0], [27.1, 443.0], [27.2, 443.0], [27.3, 443.0], [27.4, 447.0], [27.5, 449.0], [27.6, 455.0], [27.7, 456.0], [27.8, 457.0], [27.9, 457.0], [28.0, 460.0], [28.1, 460.0], [28.2, 461.0], [28.3, 470.0], [28.4, 476.0], [28.5, 478.0], [28.6, 480.0], [28.7, 497.0], [28.8, 502.0], [28.9, 505.0], [29.0, 509.0], [29.1, 509.0], [29.2, 514.0], [29.3, 532.0], [29.4, 533.0], [29.5, 552.0], [29.6, 556.0], [29.7, 556.0], [29.8, 561.0], [29.9, 562.0], [30.0, 570.0], [30.1, 570.0], [30.2, 573.0], [30.3, 573.0], [30.4, 574.0], [30.5, 574.0], [30.6, 600.0], [30.7, 609.0], [30.8, 615.0], [30.9, 621.0], [31.0, 627.0], [31.1, 627.0], [31.2, 628.0], [31.3, 630.0], [31.4, 642.0], [31.5, 650.0], [31.6, 652.0], [31.7, 660.0], [31.8, 662.0], [31.9, 664.0], [32.0, 666.0], [32.1, 666.0], [32.2, 668.0], [32.3, 670.0], [32.4, 688.0], [32.5, 690.0], [32.6, 697.0], [32.7, 700.0], [32.8, 701.0], [32.9, 709.0], [33.0, 720.0], [33.1, 720.0], [33.2, 723.0], [33.3, 726.0], [33.4, 734.0], [33.5, 744.0], [33.6, 753.0], [33.7, 762.0], [33.8, 763.0], [33.9, 791.0], [34.0, 797.0], [34.1, 797.0], [34.2, 822.0], [34.3, 872.0], [34.4, 874.0], [34.5, 874.0], [34.6, 880.0], [34.7, 881.0], [34.8, 887.0], [34.9, 897.0], [35.0, 907.0], [35.1, 907.0], [35.2, 931.0], [35.3, 945.0], [35.4, 953.0], [35.5, 967.0], [35.6, 991.0], [35.7, 997.0], [35.8, 1004.0], [35.9, 1017.0], [36.0, 1017.0], [36.1, 1062.0], [36.2, 1084.0], [36.3, 1086.0], [36.4, 1086.0], [36.5, 1114.0], [36.6, 1126.0], [36.7, 1134.0], [36.8, 1194.0], [36.9, 1203.0], [37.0, 1203.0], [37.1, 1231.0], [37.2, 1242.0], [37.3, 1243.0], [37.4, 1245.0], [37.5, 1285.0], [37.6, 1289.0], [37.7, 1294.0], [37.8, 1308.0], [37.9, 1318.0], [38.0, 1318.0], [38.1, 1320.0], [38.2, 1333.0], [38.3, 1338.0], [38.4, 1357.0], [38.5, 1366.0], [38.6, 1366.0], [38.7, 1373.0], [38.8, 1384.0], [38.9, 1389.0], [39.0, 1389.0], [39.1, 1400.0], [39.2, 1401.0], [39.3, 1402.0], [39.4, 1411.0], [39.5, 1414.0], [39.6, 1418.0], [39.7, 1424.0], [39.8, 1424.0], [39.9, 1449.0], [40.0, 1449.0], [40.1, 1455.0], [40.2, 1458.0], [40.3, 1462.0], [40.4, 1474.0], [40.5, 1480.0], [40.6, 1490.0], [40.7, 1492.0], [40.8, 1502.0], [40.9, 1502.0], [41.0, 1502.0], [41.1, 1503.0], [41.2, 1503.0], [41.3, 1509.0], [41.4, 1510.0], [41.5, 1510.0], [41.6, 1511.0], [41.7, 1519.0], [41.8, 1519.0], [41.9, 1521.0], [42.0, 1521.0], [42.1, 1527.0], [42.2, 1529.0], [42.3, 1530.0], [42.4, 1533.0], [42.5, 1536.0], [42.6, 1547.0], [42.7, 1553.0], [42.8, 1560.0], [42.9, 1566.0], [43.0, 1566.0], [43.1, 1574.0], [43.2, 1575.0], [43.3, 1575.0], [43.4, 1586.0], [43.5, 1594.0], [43.6, 1595.0], [43.7, 1601.0], [43.8, 1601.0], [43.9, 1606.0], [44.0, 1606.0], [44.1, 1612.0], [44.2, 1620.0], [44.3, 1622.0], [44.4, 1630.0], [44.5, 1633.0], [44.6, 1633.0], [44.7, 1640.0], [44.8, 1645.0], [44.9, 1646.0], [45.0, 1646.0], [45.1, 1648.0], [45.2, 1652.0], [45.3, 1653.0], [45.4, 1655.0], [45.5, 1662.0], [45.6, 1664.0], [45.7, 1669.0], [45.8, 1672.0], [45.9, 1673.0], [46.0, 1673.0], [46.1, 1690.0], [46.2, 1692.0], [46.3, 1694.0], [46.4, 1699.0], [46.5, 1707.0], [46.6, 1720.0], [46.7, 1723.0], [46.8, 1724.0], [46.9, 1724.0], [47.0, 1724.0], [47.1, 1725.0], [47.2, 1731.0], [47.3, 1734.0], [47.4, 1739.0], [47.5, 1741.0], [47.6, 1744.0], [47.7, 1746.0], [47.8, 1751.0], [47.9, 1752.0], [48.0, 1752.0], [48.1, 1756.0], [48.2, 1757.0], [48.3, 1760.0], [48.4, 1761.0], [48.5, 1766.0], [48.6, 1769.0], [48.7, 1771.0], [48.8, 1774.0], [48.9, 1775.0], [49.0, 1775.0], [49.1, 1777.0], [49.2, 1778.0], [49.3, 1780.0], [49.4, 1782.0], [49.5, 1782.0], [49.6, 1782.0], [49.7, 1783.0], [49.8, 1787.0], [49.9, 1788.0], [50.0, 1788.0], [50.1, 1790.0], [50.2, 1792.0], [50.3, 1794.0], [50.4, 1813.0], [50.5, 1818.0], [50.6, 1836.0], [50.7, 1836.0], [50.8, 1837.0], [50.9, 1839.0], [51.0, 1839.0], [51.1, 1841.0], [51.2, 1845.0], [51.3, 1845.0], [51.4, 1846.0], [51.5, 1849.0], [51.6, 1851.0], [51.7, 1855.0], [51.8, 1859.0], [51.9, 1860.0], [52.0, 1860.0], [52.1, 1861.0], [52.2, 1869.0], [52.3, 1875.0], [52.4, 1883.0], [52.5, 1886.0], [52.6, 1886.0], [52.7, 1887.0], [52.8, 1888.0], [52.9, 1890.0], [53.0, 1890.0], [53.1, 1892.0], [53.2, 1893.0], [53.3, 1895.0], [53.4, 1901.0], [53.5, 1902.0], [53.6, 1907.0], [53.7, 1911.0], [53.8, 1915.0], [53.9, 1917.0], [54.0, 1917.0], [54.1, 1922.0], [54.2, 1922.0], [54.3, 1922.0], [54.4, 1933.0], [54.5, 1935.0], [54.6, 1938.0], [54.7, 1941.0], [54.8, 1945.0], [54.9, 1946.0], [55.0, 1946.0], [55.1, 1947.0], [55.2, 1947.0], [55.3, 1947.0], [55.4, 1951.0], [55.5, 1952.0], [55.6, 1956.0], [55.7, 1960.0], [55.8, 1963.0], [55.9, 1965.0], [56.0, 1965.0], [56.1, 1970.0], [56.2, 1970.0], [56.3, 1973.0], [56.4, 1978.0], [56.5, 1987.0], [56.6, 1988.0], [56.7, 1989.0], [56.8, 1994.0], [56.9, 1999.0], [57.0, 1999.0], [57.1, 2001.0], [57.2, 2005.0], [57.3, 2009.0], [57.4, 2009.0], [57.5, 2012.0], [57.6, 2013.0], [57.7, 2018.0], [57.8, 2020.0], [57.9, 2020.0], [58.0, 2020.0], [58.1, 2023.0], [58.2, 2026.0], [58.3, 2029.0], [58.4, 2031.0], [58.5, 2032.0], [58.6, 2035.0], [58.7, 2036.0], [58.8, 2036.0], [58.9, 2037.0], [59.0, 2037.0], [59.1, 2037.0], [59.2, 2038.0], [59.3, 2038.0], [59.4, 2039.0], [59.5, 2040.0], [59.6, 2045.0], [59.7, 2046.0], [59.8, 2052.0], [59.9, 2053.0], [60.0, 2053.0], [60.1, 2054.0], [60.2, 2060.0], [60.3, 2063.0], [60.4, 2063.0], [60.5, 2067.0], [60.6, 2074.0], [60.7, 2075.0], [60.8, 2076.0], [60.9, 2078.0], [61.0, 2078.0], [61.1, 2082.0], [61.2, 2085.0], [61.3, 2085.0], [61.4, 2086.0], [61.5, 2091.0], [61.6, 2100.0], [61.7, 2101.0], [61.8, 2102.0], [61.9, 2107.0], [62.0, 2107.0], [62.1, 2108.0], [62.2, 2109.0], [62.3, 2114.0], [62.4, 2115.0], [62.5, 2116.0], [62.6, 2117.0], [62.7, 2118.0], [62.8, 2121.0], [62.9, 2128.0], [63.0, 2128.0], [63.1, 2128.0], [63.2, 2130.0], [63.3, 2132.0], [63.4, 2132.0], [63.5, 2141.0], [63.6, 2141.0], [63.7, 2142.0], [63.8, 2144.0], [63.9, 2146.0], [64.0, 2146.0], [64.1, 2155.0], [64.2, 2162.0], [64.3, 2165.0], [64.4, 2165.0], [64.5, 2168.0], [64.6, 2170.0], [64.7, 2171.0], [64.8, 2173.0], [64.9, 2175.0], [65.0, 2175.0], [65.1, 2176.0], [65.2, 2176.0], [65.3, 2182.0], [65.4, 2185.0], [65.5, 2185.0], [65.6, 2187.0], [65.7, 2187.0], [65.8, 2187.0], [65.9, 2189.0], [66.0, 2189.0], [66.1, 2189.0], [66.2, 2190.0], [66.3, 2190.0], [66.4, 2194.0], [66.5, 2204.0], [66.6, 2204.0], [66.7, 2206.0], [66.8, 2206.0], [66.9, 2208.0], [67.0, 2208.0], [67.1, 2209.0], [67.2, 2211.0], [67.3, 2212.0], [67.4, 2219.0], [67.5, 2220.0], [67.6, 2222.0], [67.7, 2222.0], [67.8, 2224.0], [67.9, 2225.0], [68.0, 2225.0], [68.1, 2229.0], [68.2, 2229.0], [68.3, 2234.0], [68.4, 2245.0], [68.5, 2250.0], [68.6, 2255.0], [68.7, 2257.0], [68.8, 2260.0], [68.9, 2265.0], [69.0, 2265.0], [69.1, 2272.0], [69.2, 2280.0], [69.3, 2285.0], [69.4, 2286.0], [69.5, 2297.0], [69.6, 2307.0], [69.7, 2321.0], [69.8, 2323.0], [69.9, 2325.0], [70.0, 2325.0], [70.1, 2327.0], [70.2, 2332.0], [70.3, 2346.0], [70.4, 2348.0], [70.5, 2352.0], [70.6, 2364.0], [70.7, 2365.0], [70.8, 2381.0], [70.9, 2384.0], [71.0, 2384.0], [71.1, 2389.0], [71.2, 2389.0], [71.3, 2393.0], [71.4, 2394.0], [71.5, 2413.0], [71.6, 2420.0], [71.7, 2421.0], [71.8, 2423.0], [71.9, 2433.0], [72.0, 2433.0], [72.1, 2439.0], [72.2, 2444.0], [72.3, 2462.0], [72.4, 2475.0], [72.5, 2479.0], [72.6, 2480.0], [72.7, 2487.0], [72.8, 2487.0], [72.9, 2489.0], [73.0, 2489.0], [73.1, 2498.0], [73.2, 2514.0], [73.3, 2517.0], [73.4, 2529.0], [73.5, 2536.0], [73.6, 2540.0], [73.7, 2551.0], [73.8, 2554.0], [73.9, 2555.0], [74.0, 2555.0], [74.1, 2560.0], [74.2, 2575.0], [74.3, 2576.0], [74.4, 2580.0], [74.5, 2596.0], [74.6, 2604.0], [74.7, 2623.0], [74.8, 2625.0], [74.9, 2645.0], [75.0, 2645.0], [75.1, 2651.0], [75.2, 2660.0], [75.3, 2668.0], [75.4, 2676.0], [75.5, 2713.0], [75.6, 2730.0], [75.7, 2761.0], [75.8, 2790.0], [75.9, 3012.0], [76.0, 3012.0], [76.1, 3024.0], [76.2, 3097.0], [76.3, 3144.0], [76.4, 3169.0], [76.5, 3170.0], [76.6, 3291.0], [76.7, 3321.0], [76.8, 3527.0], [76.9, 3557.0], [77.0, 3557.0], [77.1, 3612.0], [77.2, 3640.0], [77.3, 3642.0], [77.4, 3738.0], [77.5, 3740.0], [77.6, 3743.0], [77.7, 3754.0], [77.8, 3765.0], [77.9, 3777.0], [78.0, 3777.0], [78.1, 3896.0], [78.2, 3896.0], [78.3, 3918.0], [78.4, 3919.0], [78.5, 3925.0], [78.6, 3953.0], [78.7, 4122.0], [78.8, 4123.0], [78.9, 4147.0], [79.0, 4147.0], [79.1, 4154.0], [79.2, 4158.0], [79.3, 4231.0], [79.4, 4264.0], [79.5, 4268.0], [79.6, 4283.0], [79.7, 4299.0], [79.8, 4342.0], [79.9, 4350.0], [80.0, 4350.0], [80.1, 4376.0], [80.2, 4383.0], [80.3, 4383.0], [80.4, 4425.0], [80.5, 4498.0], [80.6, 4525.0], [80.7, 4558.0], [80.8, 4575.0], [80.9, 4598.0], [81.0, 4598.0], [81.1, 4601.0], [81.2, 4612.0], [81.3, 4625.0], [81.4, 4628.0], [81.5, 4628.0], [81.6, 4634.0], [81.7, 4636.0], [81.8, 4650.0], [81.9, 4652.0], [82.0, 4652.0], [82.1, 4660.0], [82.2, 4661.0], [82.3, 4662.0], [82.4, 4662.0], [82.5, 4664.0], [82.6, 4679.0], [82.7, 4693.0], [82.8, 4699.0], [82.9, 4709.0], [83.0, 4709.0], [83.1, 4718.0], [83.2, 4732.0], [83.3, 4734.0], [83.4, 4737.0], [83.5, 4741.0], [83.6, 4745.0], [83.7, 4746.0], [83.8, 4749.0], [83.9, 4752.0], [84.0, 4752.0], [84.1, 4754.0], [84.2, 4759.0], [84.3, 4769.0], [84.4, 4773.0], [84.5, 4783.0], [84.6, 4796.0], [84.7, 4797.0], [84.8, 4797.0], [84.9, 4798.0], [85.0, 4798.0], [85.1, 4799.0], [85.2, 4799.0], [85.3, 4799.0], [85.4, 4800.0], [85.5, 4800.0], [85.6, 4802.0], [85.7, 4802.0], [85.8, 4802.0], [85.9, 4802.0], [86.0, 4802.0], [86.1, 4803.0], [86.2, 4803.0], [86.3, 4803.0], [86.4, 4804.0], [86.5, 4804.0], [86.6, 4805.0], [86.7, 4805.0], [86.8, 4806.0], [86.9, 4806.0], [87.0, 4806.0], [87.1, 4807.0], [87.2, 4807.0], [87.3, 4807.0], [87.4, 4807.0], [87.5, 4807.0], [87.6, 4808.0], [87.7, 4808.0], [87.8, 4809.0], [87.9, 4809.0], [88.0, 4809.0], [88.1, 4809.0], [88.2, 4809.0], [88.3, 4810.0], [88.4, 4811.0], [88.5, 4811.0], [88.6, 4811.0], [88.7, 4811.0], [88.8, 4812.0], [88.9, 4812.0], [89.0, 4812.0], [89.1, 4813.0], [89.2, 4813.0], [89.3, 4814.0], [89.4, 4814.0], [89.5, 4814.0], [89.6, 4815.0], [89.7, 4816.0], [89.8, 4816.0], [89.9, 4816.0], [90.0, 4816.0], [90.1, 4816.0], [90.2, 4816.0], [90.3, 4817.0], [90.4, 4817.0], [90.5, 4817.0], [90.6, 4818.0], [90.7, 4818.0], [90.8, 4818.0], [90.9, 4818.0], [91.0, 4818.0], [91.1, 4819.0], [91.2, 4819.0], [91.3, 4821.0], [91.4, 4821.0], [91.5, 4821.0], [91.6, 4821.0], [91.7, 4821.0], [91.8, 4821.0], [91.9, 4821.0], [92.0, 4821.0], [92.1, 4822.0], [92.2, 4824.0], [92.3, 4824.0], [92.4, 4824.0], [92.5, 4824.0], [92.6, 4824.0], [92.7, 4825.0], [92.8, 4825.0], [92.9, 4826.0], [93.0, 4826.0], [93.1, 4827.0], [93.2, 4827.0], [93.3, 4828.0], [93.4, 4829.0], [93.5, 4830.0], [93.6, 4830.0], [93.7, 4831.0], [93.8, 4832.0], [93.9, 4838.0], [94.0, 4838.0], [94.1, 4841.0], [94.2, 4843.0], [94.3, 4843.0], [94.4, 4845.0], [94.5, 4854.0], [94.6, 4863.0], [94.7, 4864.0], [94.8, 4869.0], [94.9, 4872.0], [95.0, 4872.0], [95.1, 4878.0], [95.2, 4882.0], [95.3, 4887.0], [95.4, 4891.0], [95.5, 4892.0], [95.6, 4898.0], [95.7, 4903.0], [95.8, 4903.0], [95.9, 4905.0], [96.0, 4905.0], [96.1, 4905.0], [96.2, 4924.0], [96.3, 4925.0], [96.4, 4930.0], [96.5, 4931.0], [96.6, 4933.0], [96.7, 4940.0], [96.8, 4940.0], [96.9, 4941.0], [97.0, 4941.0], [97.1, 4942.0], [97.2, 4945.0], [97.3, 4946.0], [97.4, 4946.0], [97.5, 4947.0], [97.6, 4949.0], [97.7, 4950.0], [97.8, 4953.0], [97.9, 4958.0], [98.0, 4958.0], [98.1, 4962.0], [98.2, 4963.0], [98.3, 4965.0], [98.4, 4966.0], [98.5, 4971.0], [98.6, 4972.0], [98.7, 4974.0], [98.8, 4978.0], [98.9, 4984.0], [99.0, 4984.0], [99.1, 4989.0], [99.2, 4996.0], [99.3, 4996.0], [99.4, 5004.0], [99.5, 5012.0], [99.6, 5045.0], [99.7, 5096.0], [99.8, 5116.0], [99.9, 5535.0], [100.0, 5535.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 165.0, "series": [{"data": [[0.0, 53.0], [2300.0, 1.0], [600.0, 9.0], [2600.0, 1.0], [700.0, 22.0], [2800.0, 1.0], [200.0, 18.0], [800.0, 7.0], [900.0, 5.0], [1100.0, 1.0], [300.0, 14.0], [1200.0, 5.0], [1300.0, 6.0], [1400.0, 19.0], [1500.0, 15.0], [1600.0, 17.0], [100.0, 45.0], [400.0, 16.0], [1700.0, 4.0], [1800.0, 7.0], [1900.0, 11.0], [500.0, 18.0], [2000.0, 5.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[0.0, 165.0], [600.0, 36.0], [700.0, 28.0], [800.0, 25.0], [900.0, 38.0], [1000.0, 57.0], [1100.0, 35.0], [1200.0, 40.0], [1300.0, 35.0], [1400.0, 21.0], [1500.0, 18.0], [1600.0, 13.0], [100.0, 137.0], [1700.0, 21.0], [1800.0, 10.0], [1900.0, 11.0], [2000.0, 12.0], [2100.0, 9.0], [2200.0, 4.0], [2300.0, 2.0], [2400.0, 8.0], [2500.0, 4.0], [2600.0, 7.0], [2800.0, 2.0], [2700.0, 5.0], [200.0, 45.0], [300.0, 42.0], [400.0, 27.0], [500.0, 43.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 99.0], [600.0, 31.0], [700.0, 38.0], [800.0, 35.0], [900.0, 37.0], [1000.0, 44.0], [1100.0, 45.0], [1200.0, 34.0], [1300.0, 19.0], [1400.0, 21.0], [1500.0, 45.0], [1600.0, 21.0], [100.0, 140.0], [1700.0, 25.0], [1800.0, 25.0], [1900.0, 20.0], [2000.0, 14.0], [2100.0, 18.0], [2300.0, 18.0], [2200.0, 8.0], [2400.0, 6.0], [2600.0, 1.0], [2800.0, 3.0], [2700.0, 3.0], [2900.0, 1.0], [3000.0, 2.0], [3100.0, 1.0], [200.0, 59.0], [3400.0, 1.0], [3700.0, 1.0], [3600.0, 1.0], [4400.0, 1.0], [300.0, 32.0], [400.0, 23.0], [500.0, 28.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 13.0], [600.0, 19.0], [700.0, 13.0], [800.0, 8.0], [900.0, 7.0], [1000.0, 6.0], [1100.0, 4.0], [1200.0, 8.0], [1300.0, 11.0], [1400.0, 16.0], [1500.0, 26.0], [1600.0, 25.0], [1700.0, 35.0], [1800.0, 27.0], [1900.0, 33.0], [2000.0, 41.0], [2100.0, 44.0], [2200.0, 28.0], [2300.0, 17.0], [2400.0, 15.0], [2500.0, 13.0], [2600.0, 8.0], [2700.0, 4.0], [3000.0, 3.0], [3100.0, 3.0], [3200.0, 1.0], [3300.0, 1.0], [3500.0, 2.0], [3600.0, 3.0], [3700.0, 6.0], [3800.0, 2.0], [3900.0, 4.0], [4100.0, 5.0], [4300.0, 5.0], [4200.0, 5.0], [4600.0, 17.0], [4500.0, 4.0], [4400.0, 2.0], [4800.0, 93.0], [4700.0, 22.0], [5100.0, 1.0], [5000.0, 4.0], [4900.0, 33.0], [5500.0, 1.0], [100.0, 61.0], [200.0, 102.0], [300.0, 44.0], [400.0, 39.0], [500.0, 16.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 5500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 889.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1175.0, "series": [{"data": [[0.0, 1175.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 889.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 936.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 148.9443333333337, "minX": 1.72983918E12, "maxY": 148.9443333333337, "series": [{"data": [[1.72983918E12, 148.9443333333337]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72983918E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 9.0, "minX": 1.0, "maxY": 4726.680203045684, "series": [{"data": [[8.0, 60.0], [11.0, 68.0], [12.0, 79.0], [206.0, 998.8375634517763], [207.0, 65.5], [208.0, 1990.5], [215.0, 579.8], [210.0, 29.0], [214.0, 172.0], [13.0, 164.0], [218.0, 1297.2], [219.0, 66.33333333333333], [221.0, 977.0], [14.0, 94.75], [15.0, 107.25], [16.0, 89.875], [17.0, 81.6], [18.0, 85.33333333333333], [19.0, 91.5], [20.0, 126.33333333333333], [21.0, 135.36363636363635], [22.0, 89.8], [23.0, 111.0], [24.0, 145.45454545454544], [25.0, 133.0], [28.0, 179.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[156.24333333333328, 742.106666666667]], "isOverall": false, "label": "HTTP Request-2-Aggregated", "isController": false}, {"data": [[4.0, 15.5], [5.0, 23.0], [7.0, 61.0], [8.0, 56.57142857142857], [9.0, 73.5], [10.0, 64.66666666666667], [11.0, 98.0], [12.0, 91.0], [13.0, 90.33333333333334], [14.0, 59.14285714285714], [15.0, 39.8], [16.0, 78.09090909090908], [17.0, 92.68181818181819], [18.0, 83.25], [19.0, 84.33333333333333], [20.0, 90.625], [21.0, 123.10000000000001], [22.0, 97.33333333333334], [23.0, 203.1333333333333], [24.0, 259.20689655172407], [25.0, 128.66666666666666], [28.0, 1388.0], [29.0, 22.0], [52.0, 1296.7666666666669], [66.0, 551.0], [64.0, 299.3333333333333], [67.0, 322.0], [68.0, 76.0], [71.0, 336.0], [75.0, 376.0], [74.0, 463.85714285714283], [78.0, 346.0], [77.0, 411.5], [83.0, 304.0], [135.0, 275.0], [183.0, 425.0], [182.0, 427.2], [184.0, 350.0], [206.0, 1457.2487309644662], [207.0, 391.5], [208.0, 600.3333333333334], [215.0, 901.6474358974356], [214.0, 65.0], [212.0, 13.0], [210.0, 36.0], [219.0, 581.7999999999997], [218.0, 773.625], [217.0, 935.0869565217392], [216.0, 856.047619047619], [220.0, 324.70588235294116], [221.0, 842.8253968253969], [222.0, 948.5], [1.0, 9.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[148.1333333333332, 744.3544444444445]], "isOverall": false, "label": "HTTP Request-1-Aggregated", "isController": false}, {"data": [[4.0, 41.5], [5.0, 34.0], [7.0, 39.0], [8.0, 94.14285714285714], [9.0, 125.0], [10.0, 111.33333333333333], [11.0, 153.0], [12.0, 278.0], [13.0, 329.6666666666667], [14.0, 150.7142857142857], [15.0, 146.2], [16.0, 142.77272727272725], [17.0, 116.18181818181819], [18.0, 137.75000000000003], [19.0, 154.36111111111111], [20.0, 250.08333333333337], [21.0, 165.2333333333333], [22.0, 125.95238095238096], [23.0, 212.33333333333334], [24.0, 250.7586206896551], [25.0, 117.33333333333334], [28.0, 1028.0], [29.0, 49.0], [52.0, 747.7333333333333], [66.0, 98.0], [64.0, 207.66666666666666], [67.0, 329.0], [68.0, 377.0], [71.0, 237.0], [75.0, 248.5], [74.0, 490.00000000000006], [78.0, 1431.0], [77.0, 215.5], [83.0, 794.0], [135.0, 1186.0], [183.0, 1019.0], [182.0, 1050.8], [184.0, 1057.0], [206.0, 1882.269035532995], [207.0, 2150.0], [208.0, 1482.3333333333333], [215.0, 831.9294871794873], [214.0, 897.0], [212.0, 63.0], [210.0, 81.0], [219.0, 795.4923076923075], [218.0, 1009.7500000000002], [217.0, 1231.4347826086957], [216.0, 1072.6190476190477], [220.0, 1259.8235294117646], [221.0, 935.9841269841269], [222.0, 1120.5], [1.0, 11.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[148.13333333333318, 900.9188888888903]], "isOverall": false, "label": "HTTP Request-0-Aggregated", "isController": false}, {"data": [[4.0, 67.0], [5.0, 57.0], [7.0, 100.0], [8.0, 179.0], [9.0, 199.0], [10.0, 177.0], [11.0, 285.5], [12.0, 478.0], [13.0, 475.5], [14.0, 277.7142857142857], [15.0, 282.6], [16.0, 277.3181818181818], [17.0, 233.40909090909088], [18.0, 242.9375], [19.0, 280.3611111111111], [20.0, 405.375], [21.0, 341.9666666666667], [22.0, 257.6190476190476], [23.0, 451.80000000000007], [24.0, 628.0689655172415], [25.0, 295.3333333333333], [28.0, 2596.0], [29.0, 71.0], [52.0, 2045.7333333333333], [66.0, 650.0], [64.0, 507.6666666666667], [67.0, 652.0], [68.0, 684.5], [71.0, 574.0], [75.0, 624.5], [74.0, 987.9999999999999], [78.0, 1778.0], [77.0, 627.5], [83.0, 1296.0], [135.0, 1622.0], [183.0, 1444.0], [182.0, 1478.4], [184.0, 1407.3333333333333], [206.0, 4726.680203045684], [207.0, 2607.5], [208.0, 3409.6666666666665], [215.0, 1861.2051282051282], [214.0, 1134.0], [212.0, 76.0], [210.0, 146.0], [219.0, 1408.1384615384618], [218.0, 2223.416666666666], [217.0, 2242.0], [216.0, 2066.2857142857147], [220.0, 1776.470588235294], [221.0, 1861.6190476190475], [222.0, 2069.5], [1.0, 23.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[148.13333333333316, 2021.027777777784]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 222.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 11210.0, "minX": 1.72983918E12, "maxY": 40260.0, "series": [{"data": [[1.72983918E12, 40260.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.72983918E12, 11210.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72983918E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 742.106666666667, "minX": 1.72983918E12, "maxY": 2021.027777777784, "series": [{"data": [[1.72983918E12, 742.106666666667]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[1.72983918E12, 744.3544444444445]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.72983918E12, 900.9188888888903]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.72983918E12, 2021.027777777784]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72983918E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 552.9300000000002, "minX": 1.72983918E12, "maxY": 889.7633333333331, "series": [{"data": [[1.72983918E12, 552.9300000000002]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[1.72983918E12, 741.2277777777769]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.72983918E12, 889.7633333333331]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.72983918E12, 889.7633333333331]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72983918E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.72983918E12, "maxY": 220.45444444444448, "series": [{"data": [[1.72983918E12, 0.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[1.72983918E12, 0.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.72983918E12, 220.45444444444448]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.72983918E12, 220.4544444444443]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72983918E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 4.0, "minX": 1.72983918E12, "maxY": 5535.0, "series": [{"data": [[1.72983918E12, 5535.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.72983918E12, 2422.8]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.72983918E12, 4939.9299999999985]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.72983918E12, 4736.849999999999]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.72983918E12, 4.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.72983918E12, 838.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72983918E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 77.0, "minX": 42.0, "maxY": 1924.0, "series": [{"data": [[145.0, 1916.0], [146.0, 980.0], [153.0, 129.0], [159.0, 127.0], [42.0, 1535.0], [171.0, 744.0], [181.0, 159.0], [187.0, 147.0], [49.0, 593.0], [200.0, 1075.5], [214.0, 420.5], [252.0, 1090.0], [65.0, 77.0], [382.0, 1447.5], [96.0, 716.0], [110.0, 1924.0], [448.0, 1861.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 448.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 62.0, "minX": 42.0, "maxY": 1924.0, "series": [{"data": [[145.0, 1916.0], [146.0, 973.0], [153.0, 107.0], [159.0, 111.0], [42.0, 1394.0], [171.0, 534.0], [181.0, 137.0], [187.0, 110.0], [49.0, 593.0], [200.0, 963.5], [214.0, 320.0], [252.0, 968.5], [65.0, 62.0], [382.0, 919.5], [96.0, 716.0], [110.0, 1924.0], [448.0, 1176.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 448.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.72983918E12, "maxY": 50.0, "series": [{"data": [[1.72983918E12, 50.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72983918E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 20.0, "minX": 1.72983918E12, "maxY": 30.0, "series": [{"data": [[1.72983918E12, 30.0]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.72983918E12, 20.0]], "isOverall": false, "label": "302", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72983918E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 5.0, "minX": 1.72983918E12, "maxY": 15.0, "series": [{"data": [[1.72983918E12, 15.0]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.72983918E12, 15.0]], "isOverall": false, "label": "HTTP Request-0-success", "isController": false}, {"data": [[1.72983918E12, 15.0]], "isOverall": false, "label": "HTTP Request-1-success", "isController": false}, {"data": [[1.72983918E12, 5.0]], "isOverall": false, "label": "HTTP Request-2-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72983918E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.72983918E12, "maxY": 50.0, "series": [{"data": [[1.72983918E12, 50.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72983918E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

