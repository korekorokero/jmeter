/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 3.0, "minX": 0.0, "maxY": 6597.0, "series": [{"data": [[0.0, 3.0], [0.1, 3.0], [0.2, 3.0], [0.3, 3.0], [0.4, 5.0], [0.5, 5.0], [0.6, 5.0], [0.7, 9.0], [0.8, 9.0], [0.9, 9.0], [1.0, 12.0], [1.1, 12.0], [1.2, 12.0], [1.3, 12.0], [1.4, 16.0], [1.5, 16.0], [1.6, 16.0], [1.7, 26.0], [1.8, 26.0], [1.9, 26.0], [2.0, 26.0], [2.1, 26.0], [2.2, 26.0], [2.3, 26.0], [2.4, 33.0], [2.5, 33.0], [2.6, 33.0], [2.7, 34.0], [2.8, 34.0], [2.9, 34.0], [3.0, 37.0], [3.1, 37.0], [3.2, 37.0], [3.3, 37.0], [3.4, 37.0], [3.5, 37.0], [3.6, 37.0], [3.7, 38.0], [3.8, 38.0], [3.9, 38.0], [4.0, 39.0], [4.1, 39.0], [4.2, 39.0], [4.3, 39.0], [4.4, 39.0], [4.5, 39.0], [4.6, 39.0], [4.7, 40.0], [4.8, 40.0], [4.9, 40.0], [5.0, 42.0], [5.1, 42.0], [5.2, 42.0], [5.3, 42.0], [5.4, 43.0], [5.5, 43.0], [5.6, 43.0], [5.7, 44.0], [5.8, 44.0], [5.9, 44.0], [6.0, 45.0], [6.1, 45.0], [6.2, 45.0], [6.3, 45.0], [6.4, 46.0], [6.5, 46.0], [6.6, 46.0], [6.7, 46.0], [6.8, 46.0], [6.9, 46.0], [7.0, 47.0], [7.1, 47.0], [7.2, 47.0], [7.3, 47.0], [7.4, 47.0], [7.5, 47.0], [7.6, 47.0], [7.7, 50.0], [7.8, 50.0], [7.9, 50.0], [8.0, 52.0], [8.1, 52.0], [8.2, 52.0], [8.3, 52.0], [8.4, 52.0], [8.5, 52.0], [8.6, 52.0], [8.7, 52.0], [8.8, 52.0], [8.9, 52.0], [9.0, 54.0], [9.1, 54.0], [9.2, 54.0], [9.3, 54.0], [9.4, 54.0], [9.5, 54.0], [9.6, 54.0], [9.7, 54.0], [9.8, 54.0], [9.9, 54.0], [10.0, 55.0], [10.1, 55.0], [10.2, 55.0], [10.3, 55.0], [10.4, 58.0], [10.5, 58.0], [10.6, 58.0], [10.7, 58.0], [10.8, 58.0], [10.9, 58.0], [11.0, 59.0], [11.1, 59.0], [11.2, 59.0], [11.3, 59.0], [11.4, 61.0], [11.5, 61.0], [11.6, 61.0], [11.7, 62.0], [11.8, 62.0], [11.9, 62.0], [12.0, 62.0], [12.1, 63.0], [12.2, 63.0], [12.3, 63.0], [12.4, 63.0], [12.5, 63.0], [12.6, 63.0], [12.7, 67.0], [12.8, 67.0], [12.9, 67.0], [13.0, 67.0], [13.1, 68.0], [13.2, 68.0], [13.3, 68.0], [13.4, 68.0], [13.5, 68.0], [13.6, 68.0], [13.7, 69.0], [13.8, 69.0], [13.9, 69.0], [14.0, 69.0], [14.1, 71.0], [14.2, 71.0], [14.3, 71.0], [14.4, 74.0], [14.5, 74.0], [14.6, 74.0], [14.7, 74.0], [14.8, 74.0], [14.9, 74.0], [15.0, 74.0], [15.1, 75.0], [15.2, 75.0], [15.3, 75.0], [15.4, 76.0], [15.5, 76.0], [15.6, 76.0], [15.7, 78.0], [15.8, 78.0], [15.9, 78.0], [16.0, 78.0], [16.1, 78.0], [16.2, 78.0], [16.3, 78.0], [16.4, 79.0], [16.5, 79.0], [16.6, 79.0], [16.7, 80.0], [16.8, 80.0], [16.9, 80.0], [17.0, 81.0], [17.1, 81.0], [17.2, 81.0], [17.3, 81.0], [17.4, 81.0], [17.5, 81.0], [17.6, 81.0], [17.7, 81.0], [17.8, 81.0], [17.9, 81.0], [18.0, 82.0], [18.1, 82.0], [18.2, 82.0], [18.3, 82.0], [18.4, 82.0], [18.5, 82.0], [18.6, 82.0], [18.7, 83.0], [18.8, 83.0], [18.9, 83.0], [19.0, 87.0], [19.1, 87.0], [19.2, 87.0], [19.3, 87.0], [19.4, 88.0], [19.5, 88.0], [19.6, 88.0], [19.7, 88.0], [19.8, 88.0], [19.9, 88.0], [20.0, 88.0], [20.1, 88.0], [20.2, 88.0], [20.3, 88.0], [20.4, 91.0], [20.5, 91.0], [20.6, 91.0], [20.7, 93.0], [20.8, 93.0], [20.9, 93.0], [21.0, 94.0], [21.1, 94.0], [21.2, 94.0], [21.3, 94.0], [21.4, 96.0], [21.5, 96.0], [21.6, 96.0], [21.7, 96.0], [21.8, 96.0], [21.9, 96.0], [22.0, 97.0], [22.1, 97.0], [22.2, 97.0], [22.3, 97.0], [22.4, 97.0], [22.5, 97.0], [22.6, 97.0], [22.7, 97.0], [22.8, 97.0], [22.9, 97.0], [23.0, 98.0], [23.1, 98.0], [23.2, 98.0], [23.3, 98.0], [23.4, 98.0], [23.5, 98.0], [23.6, 98.0], [23.7, 99.0], [23.8, 99.0], [23.9, 99.0], [24.0, 100.0], [24.1, 100.0], [24.2, 100.0], [24.3, 100.0], [24.4, 100.0], [24.5, 100.0], [24.6, 100.0], [24.7, 101.0], [24.8, 101.0], [24.9, 101.0], [25.0, 101.0], [25.1, 101.0], [25.2, 101.0], [25.3, 101.0], [25.4, 105.0], [25.5, 105.0], [25.6, 105.0], [25.7, 108.0], [25.8, 108.0], [25.9, 108.0], [26.0, 108.0], [26.1, 108.0], [26.2, 108.0], [26.3, 108.0], [26.4, 110.0], [26.5, 110.0], [26.6, 110.0], [26.7, 113.0], [26.8, 113.0], [26.9, 113.0], [27.0, 114.0], [27.1, 114.0], [27.2, 114.0], [27.3, 114.0], [27.4, 116.0], [27.5, 116.0], [27.6, 116.0], [27.7, 118.0], [27.8, 118.0], [27.9, 118.0], [28.0, 119.0], [28.1, 119.0], [28.2, 119.0], [28.3, 119.0], [28.4, 125.0], [28.5, 125.0], [28.6, 125.0], [28.7, 126.0], [28.8, 126.0], [28.9, 126.0], [29.0, 127.0], [29.1, 127.0], [29.2, 127.0], [29.3, 127.0], [29.4, 130.0], [29.5, 130.0], [29.6, 130.0], [29.7, 130.0], [29.8, 130.0], [29.9, 130.0], [30.0, 131.0], [30.1, 131.0], [30.2, 131.0], [30.3, 131.0], [30.4, 133.0], [30.5, 133.0], [30.6, 133.0], [30.7, 133.0], [30.8, 133.0], [30.9, 133.0], [31.0, 135.0], [31.1, 135.0], [31.2, 135.0], [31.3, 135.0], [31.4, 136.0], [31.5, 136.0], [31.6, 136.0], [31.7, 139.0], [31.8, 139.0], [31.9, 139.0], [32.0, 140.0], [32.1, 140.0], [32.2, 140.0], [32.3, 140.0], [32.4, 140.0], [32.5, 140.0], [32.6, 140.0], [32.7, 149.0], [32.8, 149.0], [32.9, 149.0], [33.0, 149.0], [33.1, 149.0], [33.2, 149.0], [33.3, 149.0], [33.4, 156.0], [33.5, 156.0], [33.6, 156.0], [33.7, 163.0], [33.8, 163.0], [33.9, 163.0], [34.0, 163.0], [34.1, 163.0], [34.2, 163.0], [34.3, 163.0], [34.4, 168.0], [34.5, 168.0], [34.6, 168.0], [34.7, 185.0], [34.8, 185.0], [34.9, 185.0], [35.0, 191.0], [35.1, 191.0], [35.2, 191.0], [35.3, 191.0], [35.4, 200.0], [35.5, 200.0], [35.6, 200.0], [35.7, 203.0], [35.8, 203.0], [35.9, 203.0], [36.0, 208.0], [36.1, 208.0], [36.2, 208.0], [36.3, 208.0], [36.4, 209.0], [36.5, 209.0], [36.6, 209.0], [36.7, 210.0], [36.8, 210.0], [36.9, 210.0], [37.0, 220.0], [37.1, 220.0], [37.2, 220.0], [37.3, 220.0], [37.4, 242.0], [37.5, 242.0], [37.6, 242.0], [37.7, 244.0], [37.8, 244.0], [37.9, 244.0], [38.0, 244.0], [38.1, 246.0], [38.2, 246.0], [38.3, 246.0], [38.4, 270.0], [38.5, 270.0], [38.6, 270.0], [38.7, 272.0], [38.8, 272.0], [38.9, 272.0], [39.0, 272.0], [39.1, 284.0], [39.2, 284.0], [39.3, 284.0], [39.4, 287.0], [39.5, 287.0], [39.6, 287.0], [39.7, 290.0], [39.8, 290.0], [39.9, 290.0], [40.0, 290.0], [40.1, 293.0], [40.2, 293.0], [40.3, 293.0], [40.4, 300.0], [40.5, 300.0], [40.6, 300.0], [40.7, 300.0], [40.8, 300.0], [40.9, 300.0], [41.0, 300.0], [41.1, 326.0], [41.2, 326.0], [41.3, 326.0], [41.4, 328.0], [41.5, 328.0], [41.6, 328.0], [41.7, 332.0], [41.8, 332.0], [41.9, 332.0], [42.0, 332.0], [42.1, 338.0], [42.2, 338.0], [42.3, 338.0], [42.4, 341.0], [42.5, 341.0], [42.6, 341.0], [42.7, 344.0], [42.8, 344.0], [42.9, 344.0], [43.0, 344.0], [43.1, 346.0], [43.2, 346.0], [43.3, 346.0], [43.4, 351.0], [43.5, 351.0], [43.6, 351.0], [43.7, 354.0], [43.8, 354.0], [43.9, 354.0], [44.0, 354.0], [44.1, 355.0], [44.2, 355.0], [44.3, 355.0], [44.4, 356.0], [44.5, 356.0], [44.6, 356.0], [44.7, 357.0], [44.8, 357.0], [44.9, 357.0], [45.0, 357.0], [45.1, 362.0], [45.2, 362.0], [45.3, 362.0], [45.4, 364.0], [45.5, 364.0], [45.6, 364.0], [45.7, 366.0], [45.8, 366.0], [45.9, 366.0], [46.0, 366.0], [46.1, 369.0], [46.2, 369.0], [46.3, 369.0], [46.4, 373.0], [46.5, 373.0], [46.6, 373.0], [46.7, 375.0], [46.8, 375.0], [46.9, 375.0], [47.0, 375.0], [47.1, 375.0], [47.2, 375.0], [47.3, 375.0], [47.4, 378.0], [47.5, 378.0], [47.6, 378.0], [47.7, 383.0], [47.8, 383.0], [47.9, 383.0], [48.0, 383.0], [48.1, 384.0], [48.2, 384.0], [48.3, 384.0], [48.4, 385.0], [48.5, 385.0], [48.6, 385.0], [48.7, 385.0], [48.8, 385.0], [48.9, 385.0], [49.0, 385.0], [49.1, 389.0], [49.2, 389.0], [49.3, 389.0], [49.4, 391.0], [49.5, 391.0], [49.6, 391.0], [49.7, 393.0], [49.8, 393.0], [49.9, 393.0], [50.0, 393.0], [50.1, 396.0], [50.2, 396.0], [50.3, 396.0], [50.4, 399.0], [50.5, 399.0], [50.6, 399.0], [50.7, 399.0], [50.8, 399.0], [50.9, 399.0], [51.0, 399.0], [51.1, 402.0], [51.2, 402.0], [51.3, 402.0], [51.4, 405.0], [51.5, 405.0], [51.6, 405.0], [51.7, 406.0], [51.8, 406.0], [51.9, 406.0], [52.0, 406.0], [52.1, 408.0], [52.2, 408.0], [52.3, 408.0], [52.4, 412.0], [52.5, 412.0], [52.6, 412.0], [52.7, 413.0], [52.8, 413.0], [52.9, 413.0], [53.0, 413.0], [53.1, 417.0], [53.2, 417.0], [53.3, 417.0], [53.4, 418.0], [53.5, 418.0], [53.6, 418.0], [53.7, 418.0], [53.8, 418.0], [53.9, 418.0], [54.0, 418.0], [54.1, 421.0], [54.2, 421.0], [54.3, 421.0], [54.4, 424.0], [54.5, 424.0], [54.6, 424.0], [54.7, 428.0], [54.8, 428.0], [54.9, 428.0], [55.0, 428.0], [55.1, 429.0], [55.2, 429.0], [55.3, 429.0], [55.4, 433.0], [55.5, 433.0], [55.6, 433.0], [55.7, 435.0], [55.8, 435.0], [55.9, 435.0], [56.0, 435.0], [56.1, 439.0], [56.2, 439.0], [56.3, 439.0], [56.4, 444.0], [56.5, 444.0], [56.6, 444.0], [56.7, 450.0], [56.8, 450.0], [56.9, 450.0], [57.0, 450.0], [57.1, 451.0], [57.2, 451.0], [57.3, 451.0], [57.4, 453.0], [57.5, 453.0], [57.6, 453.0], [57.7, 453.0], [57.8, 453.0], [57.9, 453.0], [58.0, 453.0], [58.1, 458.0], [58.2, 458.0], [58.3, 458.0], [58.4, 464.0], [58.5, 464.0], [58.6, 464.0], [58.7, 471.0], [58.8, 471.0], [58.9, 471.0], [59.0, 471.0], [59.1, 477.0], [59.2, 477.0], [59.3, 477.0], [59.4, 479.0], [59.5, 479.0], [59.6, 479.0], [59.7, 480.0], [59.8, 480.0], [59.9, 480.0], [60.0, 480.0], [60.1, 484.0], [60.2, 484.0], [60.3, 484.0], [60.4, 488.0], [60.5, 488.0], [60.6, 488.0], [60.7, 489.0], [60.8, 489.0], [60.9, 489.0], [61.0, 489.0], [61.1, 491.0], [61.2, 491.0], [61.3, 491.0], [61.4, 508.0], [61.5, 508.0], [61.6, 508.0], [61.7, 516.0], [61.8, 516.0], [61.9, 516.0], [62.0, 516.0], [62.1, 521.0], [62.2, 521.0], [62.3, 521.0], [62.4, 527.0], [62.5, 527.0], [62.6, 527.0], [62.7, 543.0], [62.8, 543.0], [62.9, 543.0], [63.0, 543.0], [63.1, 549.0], [63.2, 549.0], [63.3, 549.0], [63.4, 557.0], [63.5, 557.0], [63.6, 557.0], [63.7, 559.0], [63.8, 559.0], [63.9, 559.0], [64.0, 559.0], [64.1, 566.0], [64.2, 566.0], [64.3, 566.0], [64.4, 573.0], [64.5, 573.0], [64.6, 573.0], [64.7, 576.0], [64.8, 576.0], [64.9, 576.0], [65.0, 576.0], [65.1, 576.0], [65.2, 576.0], [65.3, 576.0], [65.4, 584.0], [65.5, 584.0], [65.6, 584.0], [65.7, 586.0], [65.8, 586.0], [65.9, 586.0], [66.0, 586.0], [66.1, 591.0], [66.2, 591.0], [66.3, 591.0], [66.4, 593.0], [66.5, 593.0], [66.6, 593.0], [66.7, 614.0], [66.8, 614.0], [66.9, 614.0], [67.0, 614.0], [67.1, 623.0], [67.2, 623.0], [67.3, 623.0], [67.4, 627.0], [67.5, 627.0], [67.6, 627.0], [67.7, 642.0], [67.8, 642.0], [67.9, 642.0], [68.0, 642.0], [68.1, 643.0], [68.2, 643.0], [68.3, 643.0], [68.4, 643.0], [68.5, 643.0], [68.6, 643.0], [68.7, 645.0], [68.8, 645.0], [68.9, 645.0], [69.0, 645.0], [69.1, 654.0], [69.2, 654.0], [69.3, 654.0], [69.4, 659.0], [69.5, 659.0], [69.6, 659.0], [69.7, 666.0], [69.8, 666.0], [69.9, 666.0], [70.0, 666.0], [70.1, 680.0], [70.2, 680.0], [70.3, 680.0], [70.4, 681.0], [70.5, 681.0], [70.6, 681.0], [70.7, 687.0], [70.8, 687.0], [70.9, 687.0], [71.0, 687.0], [71.1, 695.0], [71.2, 695.0], [71.3, 695.0], [71.4, 695.0], [71.5, 695.0], [71.6, 695.0], [71.7, 698.0], [71.8, 698.0], [71.9, 698.0], [72.0, 698.0], [72.1, 704.0], [72.2, 704.0], [72.3, 704.0], [72.4, 721.0], [72.5, 721.0], [72.6, 721.0], [72.7, 723.0], [72.8, 723.0], [72.9, 723.0], [73.0, 723.0], [73.1, 724.0], [73.2, 724.0], [73.3, 724.0], [73.4, 727.0], [73.5, 727.0], [73.6, 727.0], [73.7, 728.0], [73.8, 728.0], [73.9, 728.0], [74.0, 728.0], [74.1, 731.0], [74.2, 731.0], [74.3, 731.0], [74.4, 733.0], [74.5, 733.0], [74.6, 733.0], [74.7, 733.0], [74.8, 733.0], [74.9, 733.0], [75.0, 733.0], [75.1, 737.0], [75.2, 737.0], [75.3, 737.0], [75.4, 739.0], [75.5, 739.0], [75.6, 739.0], [75.7, 740.0], [75.8, 740.0], [75.9, 740.0], [76.0, 740.0], [76.1, 753.0], [76.2, 753.0], [76.3, 753.0], [76.4, 756.0], [76.5, 756.0], [76.6, 756.0], [76.7, 760.0], [76.8, 760.0], [76.9, 760.0], [77.0, 760.0], [77.1, 761.0], [77.2, 761.0], [77.3, 761.0], [77.4, 762.0], [77.5, 762.0], [77.6, 762.0], [77.7, 773.0], [77.8, 773.0], [77.9, 773.0], [78.0, 775.0], [78.1, 775.0], [78.2, 775.0], [78.3, 775.0], [78.4, 782.0], [78.5, 782.0], [78.6, 782.0], [78.7, 787.0], [78.8, 787.0], [78.9, 787.0], [79.0, 788.0], [79.1, 788.0], [79.2, 788.0], [79.3, 788.0], [79.4, 791.0], [79.5, 791.0], [79.6, 791.0], [79.7, 795.0], [79.8, 795.0], [79.9, 795.0], [80.0, 801.0], [80.1, 801.0], [80.2, 801.0], [80.3, 801.0], [80.4, 803.0], [80.5, 803.0], [80.6, 803.0], [80.7, 807.0], [80.8, 807.0], [80.9, 807.0], [81.0, 811.0], [81.1, 811.0], [81.2, 811.0], [81.3, 811.0], [81.4, 812.0], [81.5, 812.0], [81.6, 812.0], [81.7, 816.0], [81.8, 816.0], [81.9, 816.0], [82.0, 838.0], [82.1, 838.0], [82.2, 838.0], [82.3, 838.0], [82.4, 846.0], [82.5, 846.0], [82.6, 846.0], [82.7, 847.0], [82.8, 847.0], [82.9, 847.0], [83.0, 848.0], [83.1, 848.0], [83.2, 848.0], [83.3, 848.0], [83.4, 849.0], [83.5, 849.0], [83.6, 849.0], [83.7, 858.0], [83.8, 858.0], [83.9, 858.0], [84.0, 868.0], [84.1, 868.0], [84.2, 868.0], [84.3, 868.0], [84.4, 868.0], [84.5, 868.0], [84.6, 868.0], [84.7, 883.0], [84.8, 883.0], [84.9, 883.0], [85.0, 884.0], [85.1, 884.0], [85.2, 884.0], [85.3, 884.0], [85.4, 898.0], [85.5, 898.0], [85.6, 898.0], [85.7, 899.0], [85.8, 899.0], [85.9, 899.0], [86.0, 913.0], [86.1, 913.0], [86.2, 913.0], [86.3, 913.0], [86.4, 914.0], [86.5, 914.0], [86.6, 914.0], [86.7, 921.0], [86.8, 921.0], [86.9, 921.0], [87.0, 976.0], [87.1, 976.0], [87.2, 976.0], [87.3, 976.0], [87.4, 1010.0], [87.5, 1010.0], [87.6, 1010.0], [87.7, 1119.0], [87.8, 1119.0], [87.9, 1119.0], [88.0, 1182.0], [88.1, 1182.0], [88.2, 1182.0], [88.3, 1182.0], [88.4, 1202.0], [88.5, 1202.0], [88.6, 1202.0], [88.7, 1248.0], [88.8, 1248.0], [88.9, 1248.0], [89.0, 1313.0], [89.1, 1313.0], [89.2, 1313.0], [89.3, 1313.0], [89.4, 1325.0], [89.5, 1325.0], [89.6, 1325.0], [89.7, 1434.0], [89.8, 1434.0], [89.9, 1434.0], [90.0, 1464.0], [90.1, 1464.0], [90.2, 1464.0], [90.3, 1464.0], [90.4, 1570.0], [90.5, 1570.0], [90.6, 1570.0], [90.7, 1576.0], [90.8, 1576.0], [90.9, 1576.0], [91.0, 1611.0], [91.1, 1611.0], [91.2, 1611.0], [91.3, 1611.0], [91.4, 1615.0], [91.5, 1615.0], [91.6, 1615.0], [91.7, 1616.0], [91.8, 1616.0], [91.9, 1616.0], [92.0, 1624.0], [92.1, 1624.0], [92.2, 1624.0], [92.3, 1624.0], [92.4, 1640.0], [92.5, 1640.0], [92.6, 1640.0], [92.7, 1657.0], [92.8, 1657.0], [92.9, 1657.0], [93.0, 1701.0], [93.1, 1701.0], [93.2, 1701.0], [93.3, 1701.0], [93.4, 1731.0], [93.5, 1731.0], [93.6, 1731.0], [93.7, 1732.0], [93.8, 1732.0], [93.9, 1732.0], [94.0, 1744.0], [94.1, 1744.0], [94.2, 1744.0], [94.3, 1744.0], [94.4, 1752.0], [94.5, 1752.0], [94.6, 1752.0], [94.7, 1763.0], [94.8, 1763.0], [94.9, 1763.0], [95.0, 1764.0], [95.1, 1764.0], [95.2, 1764.0], [95.3, 1764.0], [95.4, 1778.0], [95.5, 1778.0], [95.6, 1778.0], [95.7, 1787.0], [95.8, 1787.0], [95.9, 1787.0], [96.0, 1794.0], [96.1, 1794.0], [96.2, 1794.0], [96.3, 1794.0], [96.4, 1806.0], [96.5, 1806.0], [96.6, 1806.0], [96.7, 1874.0], [96.8, 1874.0], [96.9, 1874.0], [97.0, 1887.0], [97.1, 1887.0], [97.2, 1887.0], [97.3, 1887.0], [97.4, 1938.0], [97.5, 1938.0], [97.6, 1938.0], [97.7, 1951.0], [97.8, 1951.0], [97.9, 1951.0], [98.0, 1962.0], [98.1, 1962.0], [98.2, 1962.0], [98.3, 1962.0], [98.4, 2012.0], [98.5, 2012.0], [98.6, 2012.0], [98.7, 2190.0], [98.8, 2190.0], [98.9, 2190.0], [99.0, 2343.0], [99.1, 2343.0], [99.2, 2343.0], [99.3, 2343.0], [99.4, 2442.0], [99.5, 2442.0], [99.6, 2442.0], [99.7, 3184.0], [99.8, 3184.0], [99.9, 3184.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[0.0, 4.0], [0.1, 4.0], [0.2, 9.0], [0.3, 9.0], [0.4, 9.0], [0.5, 9.0], [0.6, 12.0], [0.7, 15.0], [0.8, 17.0], [0.9, 19.0], [1.0, 19.0], [1.1, 19.0], [1.2, 21.0], [1.3, 21.0], [1.4, 22.0], [1.5, 24.0], [1.6, 28.0], [1.7, 29.0], [1.8, 29.0], [1.9, 30.0], [2.0, 30.0], [2.1, 32.0], [2.2, 33.0], [2.3, 35.0], [2.4, 35.0], [2.5, 36.0], [2.6, 36.0], [2.7, 37.0], [2.8, 37.0], [2.9, 37.0], [3.0, 37.0], [3.1, 37.0], [3.2, 38.0], [3.3, 40.0], [3.4, 41.0], [3.5, 43.0], [3.6, 43.0], [3.7, 44.0], [3.8, 46.0], [3.9, 46.0], [4.0, 46.0], [4.1, 46.0], [4.2, 47.0], [4.3, 47.0], [4.4, 47.0], [4.5, 48.0], [4.6, 48.0], [4.7, 48.0], [4.8, 49.0], [4.9, 49.0], [5.0, 49.0], [5.1, 49.0], [5.2, 51.0], [5.3, 51.0], [5.4, 52.0], [5.5, 53.0], [5.6, 53.0], [5.7, 54.0], [5.8, 54.0], [5.9, 55.0], [6.0, 55.0], [6.1, 55.0], [6.2, 55.0], [6.3, 55.0], [6.4, 55.0], [6.5, 56.0], [6.6, 57.0], [6.7, 57.0], [6.8, 57.0], [6.9, 58.0], [7.0, 59.0], [7.1, 59.0], [7.2, 59.0], [7.3, 59.0], [7.4, 61.0], [7.5, 61.0], [7.6, 62.0], [7.7, 62.0], [7.8, 62.0], [7.9, 62.0], [8.0, 63.0], [8.1, 63.0], [8.2, 63.0], [8.3, 63.0], [8.4, 63.0], [8.5, 63.0], [8.6, 65.0], [8.7, 65.0], [8.8, 66.0], [8.9, 66.0], [9.0, 66.0], [9.1, 66.0], [9.2, 66.0], [9.3, 68.0], [9.4, 68.0], [9.5, 68.0], [9.6, 68.0], [9.7, 69.0], [9.8, 69.0], [9.9, 69.0], [10.0, 70.0], [10.1, 70.0], [10.2, 70.0], [10.3, 71.0], [10.4, 71.0], [10.5, 71.0], [10.6, 71.0], [10.7, 72.0], [10.8, 72.0], [10.9, 72.0], [11.0, 72.0], [11.1, 72.0], [11.2, 74.0], [11.3, 74.0], [11.4, 74.0], [11.5, 76.0], [11.6, 77.0], [11.7, 78.0], [11.8, 78.0], [11.9, 78.0], [12.0, 79.0], [12.1, 79.0], [12.2, 79.0], [12.3, 79.0], [12.4, 79.0], [12.5, 79.0], [12.6, 79.0], [12.7, 80.0], [12.8, 80.0], [12.9, 81.0], [13.0, 81.0], [13.1, 81.0], [13.2, 82.0], [13.3, 82.0], [13.4, 82.0], [13.5, 82.0], [13.6, 83.0], [13.7, 85.0], [13.8, 85.0], [13.9, 86.0], [14.0, 86.0], [14.1, 86.0], [14.2, 86.0], [14.3, 86.0], [14.4, 87.0], [14.5, 87.0], [14.6, 87.0], [14.7, 88.0], [14.8, 88.0], [14.9, 88.0], [15.0, 88.0], [15.1, 88.0], [15.2, 88.0], [15.3, 89.0], [15.4, 89.0], [15.5, 89.0], [15.6, 89.0], [15.7, 89.0], [15.8, 90.0], [15.9, 91.0], [16.0, 91.0], [16.1, 91.0], [16.2, 91.0], [16.3, 91.0], [16.4, 91.0], [16.5, 91.0], [16.6, 92.0], [16.7, 92.0], [16.8, 92.0], [16.9, 92.0], [17.0, 92.0], [17.1, 92.0], [17.2, 93.0], [17.3, 93.0], [17.4, 93.0], [17.5, 93.0], [17.6, 93.0], [17.7, 93.0], [17.8, 94.0], [17.9, 94.0], [18.0, 94.0], [18.1, 94.0], [18.2, 95.0], [18.3, 96.0], [18.4, 96.0], [18.5, 96.0], [18.6, 96.0], [18.7, 96.0], [18.8, 96.0], [18.9, 96.0], [19.0, 97.0], [19.1, 97.0], [19.2, 97.0], [19.3, 97.0], [19.4, 97.0], [19.5, 98.0], [19.6, 98.0], [19.7, 98.0], [19.8, 99.0], [19.9, 100.0], [20.0, 100.0], [20.1, 100.0], [20.2, 100.0], [20.3, 101.0], [20.4, 101.0], [20.5, 101.0], [20.6, 102.0], [20.7, 102.0], [20.8, 103.0], [20.9, 104.0], [21.0, 104.0], [21.1, 104.0], [21.2, 105.0], [21.3, 105.0], [21.4, 105.0], [21.5, 105.0], [21.6, 105.0], [21.7, 106.0], [21.8, 106.0], [21.9, 106.0], [22.0, 107.0], [22.1, 107.0], [22.2, 108.0], [22.3, 108.0], [22.4, 108.0], [22.5, 109.0], [22.6, 109.0], [22.7, 110.0], [22.8, 110.0], [22.9, 110.0], [23.0, 112.0], [23.1, 112.0], [23.2, 112.0], [23.3, 112.0], [23.4, 113.0], [23.5, 113.0], [23.6, 114.0], [23.7, 114.0], [23.8, 115.0], [23.9, 115.0], [24.0, 115.0], [24.1, 115.0], [24.2, 115.0], [24.3, 117.0], [24.4, 117.0], [24.5, 118.0], [24.6, 118.0], [24.7, 119.0], [24.8, 119.0], [24.9, 120.0], [25.0, 120.0], [25.1, 120.0], [25.2, 120.0], [25.3, 120.0], [25.4, 122.0], [25.5, 123.0], [25.6, 124.0], [25.7, 124.0], [25.8, 125.0], [25.9, 127.0], [26.0, 127.0], [26.1, 127.0], [26.2, 127.0], [26.3, 127.0], [26.4, 128.0], [26.5, 129.0], [26.6, 129.0], [26.7, 129.0], [26.8, 130.0], [26.9, 131.0], [27.0, 131.0], [27.1, 131.0], [27.2, 131.0], [27.3, 131.0], [27.4, 135.0], [27.5, 136.0], [27.6, 136.0], [27.7, 137.0], [27.8, 141.0], [27.9, 141.0], [28.0, 143.0], [28.1, 143.0], [28.2, 144.0], [28.3, 145.0], [28.4, 145.0], [28.5, 146.0], [28.6, 152.0], [28.7, 155.0], [28.8, 155.0], [28.9, 160.0], [29.0, 161.0], [29.1, 161.0], [29.2, 164.0], [29.3, 166.0], [29.4, 168.0], [29.5, 168.0], [29.6, 172.0], [29.7, 174.0], [29.8, 177.0], [29.9, 178.0], [30.0, 178.0], [30.1, 178.0], [30.2, 182.0], [30.3, 185.0], [30.4, 188.0], [30.5, 189.0], [30.6, 191.0], [30.7, 192.0], [30.8, 193.0], [30.9, 198.0], [31.0, 200.0], [31.1, 200.0], [31.2, 201.0], [31.3, 202.0], [31.4, 203.0], [31.5, 206.0], [31.6, 207.0], [31.7, 207.0], [31.8, 207.0], [31.9, 209.0], [32.0, 211.0], [32.1, 211.0], [32.2, 211.0], [32.3, 213.0], [32.4, 214.0], [32.5, 215.0], [32.6, 216.0], [32.7, 216.0], [32.8, 217.0], [32.9, 223.0], [33.0, 224.0], [33.1, 224.0], [33.2, 226.0], [33.3, 229.0], [33.4, 230.0], [33.5, 230.0], [33.6, 233.0], [33.7, 237.0], [33.8, 237.0], [33.9, 237.0], [34.0, 239.0], [34.1, 239.0], [34.2, 243.0], [34.3, 244.0], [34.4, 251.0], [34.5, 254.0], [34.6, 254.0], [34.7, 256.0], [34.8, 257.0], [34.9, 260.0], [35.0, 260.0], [35.1, 260.0], [35.2, 260.0], [35.3, 262.0], [35.4, 264.0], [35.5, 272.0], [35.6, 275.0], [35.7, 280.0], [35.8, 281.0], [35.9, 281.0], [36.0, 281.0], [36.1, 283.0], [36.2, 284.0], [36.3, 285.0], [36.4, 285.0], [36.5, 285.0], [36.6, 292.0], [36.7, 294.0], [36.8, 294.0], [36.9, 294.0], [37.0, 294.0], [37.1, 299.0], [37.2, 299.0], [37.3, 302.0], [37.4, 309.0], [37.5, 309.0], [37.6, 311.0], [37.7, 316.0], [37.8, 316.0], [37.9, 320.0], [38.0, 320.0], [38.1, 321.0], [38.2, 323.0], [38.3, 323.0], [38.4, 329.0], [38.5, 329.0], [38.6, 330.0], [38.7, 338.0], [38.8, 341.0], [38.9, 343.0], [39.0, 343.0], [39.1, 345.0], [39.2, 347.0], [39.3, 348.0], [39.4, 348.0], [39.5, 349.0], [39.6, 350.0], [39.7, 351.0], [39.8, 354.0], [39.9, 355.0], [40.0, 355.0], [40.1, 356.0], [40.2, 356.0], [40.3, 356.0], [40.4, 357.0], [40.5, 360.0], [40.6, 362.0], [40.7, 363.0], [40.8, 364.0], [40.9, 365.0], [41.0, 365.0], [41.1, 365.0], [41.2, 370.0], [41.3, 372.0], [41.4, 380.0], [41.5, 380.0], [41.6, 380.0], [41.7, 381.0], [41.8, 382.0], [41.9, 387.0], [42.0, 387.0], [42.1, 388.0], [42.2, 390.0], [42.3, 391.0], [42.4, 393.0], [42.5, 393.0], [42.6, 395.0], [42.7, 397.0], [42.8, 399.0], [42.9, 402.0], [43.0, 402.0], [43.1, 403.0], [43.2, 406.0], [43.3, 411.0], [43.4, 414.0], [43.5, 415.0], [43.6, 415.0], [43.7, 418.0], [43.8, 420.0], [43.9, 421.0], [44.0, 421.0], [44.1, 422.0], [44.2, 423.0], [44.3, 424.0], [44.4, 431.0], [44.5, 431.0], [44.6, 431.0], [44.7, 437.0], [44.8, 440.0], [44.9, 442.0], [45.0, 442.0], [45.1, 445.0], [45.2, 446.0], [45.3, 448.0], [45.4, 448.0], [45.5, 449.0], [45.6, 450.0], [45.7, 451.0], [45.8, 451.0], [45.9, 454.0], [46.0, 454.0], [46.1, 455.0], [46.2, 455.0], [46.3, 456.0], [46.4, 458.0], [46.5, 461.0], [46.6, 465.0], [46.7, 466.0], [46.8, 473.0], [46.9, 475.0], [47.0, 475.0], [47.1, 479.0], [47.2, 480.0], [47.3, 483.0], [47.4, 488.0], [47.5, 492.0], [47.6, 492.0], [47.7, 493.0], [47.8, 494.0], [47.9, 494.0], [48.0, 494.0], [48.1, 498.0], [48.2, 499.0], [48.3, 502.0], [48.4, 505.0], [48.5, 506.0], [48.6, 508.0], [48.7, 509.0], [48.8, 510.0], [48.9, 511.0], [49.0, 511.0], [49.1, 511.0], [49.2, 512.0], [49.3, 512.0], [49.4, 512.0], [49.5, 513.0], [49.6, 516.0], [49.7, 516.0], [49.8, 517.0], [49.9, 518.0], [50.0, 518.0], [50.1, 519.0], [50.2, 520.0], [50.3, 522.0], [50.4, 523.0], [50.5, 525.0], [50.6, 527.0], [50.7, 530.0], [50.8, 531.0], [50.9, 534.0], [51.0, 534.0], [51.1, 535.0], [51.2, 536.0], [51.3, 536.0], [51.4, 537.0], [51.5, 537.0], [51.6, 539.0], [51.7, 539.0], [51.8, 543.0], [51.9, 545.0], [52.0, 545.0], [52.1, 545.0], [52.2, 545.0], [52.3, 549.0], [52.4, 555.0], [52.5, 556.0], [52.6, 557.0], [52.7, 558.0], [52.8, 561.0], [52.9, 561.0], [53.0, 561.0], [53.1, 561.0], [53.2, 564.0], [53.3, 565.0], [53.4, 568.0], [53.5, 570.0], [53.6, 571.0], [53.7, 571.0], [53.8, 577.0], [53.9, 578.0], [54.0, 578.0], [54.1, 583.0], [54.2, 587.0], [54.3, 588.0], [54.4, 588.0], [54.5, 594.0], [54.6, 596.0], [54.7, 598.0], [54.8, 600.0], [54.9, 603.0], [55.0, 603.0], [55.1, 604.0], [55.2, 605.0], [55.3, 606.0], [55.4, 608.0], [55.5, 610.0], [55.6, 610.0], [55.7, 611.0], [55.8, 614.0], [55.9, 615.0], [56.0, 615.0], [56.1, 617.0], [56.2, 620.0], [56.3, 620.0], [56.4, 624.0], [56.5, 624.0], [56.6, 625.0], [56.7, 627.0], [56.8, 636.0], [56.9, 637.0], [57.0, 637.0], [57.1, 637.0], [57.2, 639.0], [57.3, 639.0], [57.4, 639.0], [57.5, 640.0], [57.6, 640.0], [57.7, 640.0], [57.8, 641.0], [57.9, 642.0], [58.0, 642.0], [58.1, 643.0], [58.2, 643.0], [58.3, 643.0], [58.4, 646.0], [58.5, 650.0], [58.6, 650.0], [58.7, 654.0], [58.8, 658.0], [58.9, 659.0], [59.0, 659.0], [59.1, 661.0], [59.2, 664.0], [59.3, 664.0], [59.4, 664.0], [59.5, 665.0], [59.6, 667.0], [59.7, 668.0], [59.8, 670.0], [59.9, 670.0], [60.0, 670.0], [60.1, 671.0], [60.2, 672.0], [60.3, 672.0], [60.4, 672.0], [60.5, 673.0], [60.6, 674.0], [60.7, 678.0], [60.8, 681.0], [60.9, 681.0], [61.0, 681.0], [61.1, 683.0], [61.2, 685.0], [61.3, 686.0], [61.4, 687.0], [61.5, 687.0], [61.6, 688.0], [61.7, 688.0], [61.8, 689.0], [61.9, 693.0], [62.0, 693.0], [62.1, 694.0], [62.2, 704.0], [62.3, 705.0], [62.4, 705.0], [62.5, 706.0], [62.6, 708.0], [62.7, 714.0], [62.8, 714.0], [62.9, 726.0], [63.0, 726.0], [63.1, 727.0], [63.2, 728.0], [63.3, 729.0], [63.4, 734.0], [63.5, 735.0], [63.6, 736.0], [63.7, 738.0], [63.8, 740.0], [63.9, 742.0], [64.0, 742.0], [64.1, 744.0], [64.2, 744.0], [64.3, 747.0], [64.4, 750.0], [64.5, 753.0], [64.6, 753.0], [64.7, 753.0], [64.8, 754.0], [64.9, 754.0], [65.0, 754.0], [65.1, 755.0], [65.2, 759.0], [65.3, 759.0], [65.4, 760.0], [65.5, 762.0], [65.6, 763.0], [65.7, 763.0], [65.8, 763.0], [65.9, 767.0], [66.0, 767.0], [66.1, 768.0], [66.2, 769.0], [66.3, 769.0], [66.4, 770.0], [66.5, 772.0], [66.6, 772.0], [66.7, 773.0], [66.8, 773.0], [66.9, 774.0], [67.0, 774.0], [67.1, 775.0], [67.2, 775.0], [67.3, 780.0], [67.4, 781.0], [67.5, 784.0], [67.6, 784.0], [67.7, 785.0], [67.8, 786.0], [67.9, 786.0], [68.0, 786.0], [68.1, 792.0], [68.2, 796.0], [68.3, 797.0], [68.4, 800.0], [68.5, 804.0], [68.6, 805.0], [68.7, 806.0], [68.8, 809.0], [68.9, 810.0], [69.0, 810.0], [69.1, 810.0], [69.2, 810.0], [69.3, 810.0], [69.4, 811.0], [69.5, 812.0], [69.6, 813.0], [69.7, 814.0], [69.8, 817.0], [69.9, 817.0], [70.0, 817.0], [70.1, 821.0], [70.2, 822.0], [70.3, 823.0], [70.4, 824.0], [70.5, 824.0], [70.6, 830.0], [70.7, 830.0], [70.8, 832.0], [70.9, 835.0], [71.0, 835.0], [71.1, 837.0], [71.2, 838.0], [71.3, 839.0], [71.4, 842.0], [71.5, 848.0], [71.6, 848.0], [71.7, 849.0], [71.8, 849.0], [71.9, 851.0], [72.0, 851.0], [72.1, 858.0], [72.2, 860.0], [72.3, 861.0], [72.4, 865.0], [72.5, 866.0], [72.6, 866.0], [72.7, 868.0], [72.8, 876.0], [72.9, 877.0], [73.0, 877.0], [73.1, 878.0], [73.2, 878.0], [73.3, 880.0], [73.4, 883.0], [73.5, 884.0], [73.6, 887.0], [73.7, 893.0], [73.8, 897.0], [73.9, 899.0], [74.0, 899.0], [74.1, 901.0], [74.2, 901.0], [74.3, 905.0], [74.4, 907.0], [74.5, 909.0], [74.6, 909.0], [74.7, 911.0], [74.8, 911.0], [74.9, 920.0], [75.0, 920.0], [75.1, 925.0], [75.2, 925.0], [75.3, 926.0], [75.4, 928.0], [75.5, 928.0], [75.6, 929.0], [75.7, 936.0], [75.8, 938.0], [75.9, 939.0], [76.0, 939.0], [76.1, 943.0], [76.2, 946.0], [76.3, 948.0], [76.4, 949.0], [76.5, 955.0], [76.6, 956.0], [76.7, 962.0], [76.8, 962.0], [76.9, 968.0], [77.0, 968.0], [77.1, 972.0], [77.2, 973.0], [77.3, 980.0], [77.4, 981.0], [77.5, 984.0], [77.6, 987.0], [77.7, 987.0], [77.8, 989.0], [77.9, 992.0], [78.0, 992.0], [78.1, 998.0], [78.2, 999.0], [78.3, 1000.0], [78.4, 1005.0], [78.5, 1009.0], [78.6, 1012.0], [78.7, 1020.0], [78.8, 1026.0], [78.9, 1028.0], [79.0, 1028.0], [79.1, 1035.0], [79.2, 1036.0], [79.3, 1039.0], [79.4, 1041.0], [79.5, 1048.0], [79.6, 1051.0], [79.7, 1051.0], [79.8, 1057.0], [79.9, 1058.0], [80.0, 1058.0], [80.1, 1070.0], [80.2, 1074.0], [80.3, 1078.0], [80.4, 1088.0], [80.5, 1091.0], [80.6, 1096.0], [80.7, 1097.0], [80.8, 1102.0], [80.9, 1106.0], [81.0, 1106.0], [81.1, 1107.0], [81.2, 1109.0], [81.3, 1112.0], [81.4, 1117.0], [81.5, 1124.0], [81.6, 1133.0], [81.7, 1134.0], [81.8, 1139.0], [81.9, 1142.0], [82.0, 1142.0], [82.1, 1143.0], [82.2, 1144.0], [82.3, 1145.0], [82.4, 1148.0], [82.5, 1154.0], [82.6, 1154.0], [82.7, 1159.0], [82.8, 1162.0], [82.9, 1165.0], [83.0, 1165.0], [83.1, 1168.0], [83.2, 1170.0], [83.3, 1171.0], [83.4, 1173.0], [83.5, 1182.0], [83.6, 1183.0], [83.7, 1190.0], [83.8, 1190.0], [83.9, 1193.0], [84.0, 1193.0], [84.1, 1197.0], [84.2, 1202.0], [84.3, 1206.0], [84.4, 1208.0], [84.5, 1223.0], [84.6, 1231.0], [84.7, 1231.0], [84.8, 1259.0], [84.9, 1262.0], [85.0, 1262.0], [85.1, 1263.0], [85.2, 1267.0], [85.3, 1269.0], [85.4, 1270.0], [85.5, 1270.0], [85.6, 1272.0], [85.7, 1289.0], [85.8, 1289.0], [85.9, 1296.0], [86.0, 1296.0], [86.1, 1300.0], [86.2, 1307.0], [86.3, 1329.0], [86.4, 1336.0], [86.5, 1340.0], [86.6, 1360.0], [86.7, 1374.0], [86.8, 1384.0], [86.9, 1387.0], [87.0, 1387.0], [87.1, 1401.0], [87.2, 1418.0], [87.3, 1419.0], [87.4, 1422.0], [87.5, 1442.0], [87.6, 1447.0], [87.7, 1451.0], [87.8, 1460.0], [87.9, 1485.0], [88.0, 1485.0], [88.1, 1486.0], [88.2, 1487.0], [88.3, 1496.0], [88.4, 1497.0], [88.5, 1500.0], [88.6, 1513.0], [88.7, 1514.0], [88.8, 1515.0], [88.9, 1521.0], [89.0, 1521.0], [89.1, 1525.0], [89.2, 1525.0], [89.3, 1553.0], [89.4, 1555.0], [89.5, 1563.0], [89.6, 1569.0], [89.7, 1574.0], [89.8, 1578.0], [89.9, 1598.0], [90.0, 1598.0], [90.1, 1620.0], [90.2, 1629.0], [90.3, 1632.0], [90.4, 1644.0], [90.5, 1647.0], [90.6, 1653.0], [90.7, 1655.0], [90.8, 1655.0], [90.9, 1663.0], [91.0, 1663.0], [91.1, 1664.0], [91.2, 1665.0], [91.3, 1668.0], [91.4, 1672.0], [91.5, 1673.0], [91.6, 1682.0], [91.7, 1684.0], [91.8, 1700.0], [91.9, 1701.0], [92.0, 1701.0], [92.1, 1702.0], [92.2, 1702.0], [92.3, 1711.0], [92.4, 1715.0], [92.5, 1727.0], [92.6, 1735.0], [92.7, 1754.0], [92.8, 1754.0], [92.9, 1772.0], [93.0, 1772.0], [93.1, 1781.0], [93.2, 1794.0], [93.3, 1798.0], [93.4, 1805.0], [93.5, 1820.0], [93.6, 1825.0], [93.7, 1828.0], [93.8, 1841.0], [93.9, 1846.0], [94.0, 1846.0], [94.1, 1850.0], [94.2, 1870.0], [94.3, 1881.0], [94.4, 1885.0], [94.5, 1886.0], [94.6, 1889.0], [94.7, 1897.0], [94.8, 1911.0], [94.9, 1915.0], [95.0, 1915.0], [95.1, 1918.0], [95.2, 1922.0], [95.3, 1924.0], [95.4, 1930.0], [95.5, 1933.0], [95.6, 1937.0], [95.7, 1937.0], [95.8, 1949.0], [95.9, 1962.0], [96.0, 1962.0], [96.1, 1975.0], [96.2, 1976.0], [96.3, 2008.0], [96.4, 2011.0], [96.5, 2027.0], [96.6, 2092.0], [96.7, 2098.0], [96.8, 2113.0], [96.9, 2132.0], [97.0, 2132.0], [97.1, 2187.0], [97.2, 2187.0], [97.3, 2211.0], [97.4, 2225.0], [97.5, 2226.0], [97.6, 2263.0], [97.7, 2272.0], [97.8, 2273.0], [97.9, 2274.0], [98.0, 2274.0], [98.1, 2306.0], [98.2, 2346.0], [98.3, 2377.0], [98.4, 2489.0], [98.5, 2588.0], [98.6, 2626.0], [98.7, 2649.0], [98.8, 2658.0], [98.9, 2683.0], [99.0, 2683.0], [99.1, 2845.0], [99.2, 2960.0], [99.3, 2976.0], [99.4, 3013.0], [99.5, 3023.0], [99.6, 3041.0], [99.7, 3108.0], [99.8, 3217.0], [99.9, 3543.0], [100.0, 3543.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 3.0], [0.1, 3.0], [0.2, 3.0], [0.3, 4.0], [0.4, 7.0], [0.5, 10.0], [0.6, 11.0], [0.7, 12.0], [0.8, 12.0], [0.9, 13.0], [1.0, 14.0], [1.1, 14.0], [1.2, 17.0], [1.3, 18.0], [1.4, 18.0], [1.5, 19.0], [1.6, 23.0], [1.7, 23.0], [1.8, 23.0], [1.9, 25.0], [2.0, 26.0], [2.1, 26.0], [2.2, 29.0], [2.3, 31.0], [2.4, 32.0], [2.5, 32.0], [2.6, 34.0], [2.7, 34.0], [2.8, 35.0], [2.9, 36.0], [3.0, 36.0], [3.1, 39.0], [3.2, 42.0], [3.3, 43.0], [3.4, 43.0], [3.5, 44.0], [3.6, 46.0], [3.7, 46.0], [3.8, 46.0], [3.9, 46.0], [4.0, 46.0], [4.1, 47.0], [4.2, 48.0], [4.3, 48.0], [4.4, 49.0], [4.5, 49.0], [4.6, 50.0], [4.7, 50.0], [4.8, 50.0], [4.9, 51.0], [5.0, 51.0], [5.1, 51.0], [5.2, 51.0], [5.3, 51.0], [5.4, 52.0], [5.5, 52.0], [5.6, 53.0], [5.7, 54.0], [5.8, 55.0], [5.9, 57.0], [6.0, 58.0], [6.1, 58.0], [6.2, 60.0], [6.3, 60.0], [6.4, 61.0], [6.5, 62.0], [6.6, 64.0], [6.7, 65.0], [6.8, 67.0], [6.9, 68.0], [7.0, 69.0], [7.1, 69.0], [7.2, 70.0], [7.3, 72.0], [7.4, 74.0], [7.5, 74.0], [7.6, 75.0], [7.7, 75.0], [7.8, 75.0], [7.9, 76.0], [8.0, 77.0], [8.1, 77.0], [8.2, 77.0], [8.3, 78.0], [8.4, 78.0], [8.5, 79.0], [8.6, 80.0], [8.7, 81.0], [8.8, 81.0], [8.9, 81.0], [9.0, 82.0], [9.1, 82.0], [9.2, 82.0], [9.3, 83.0], [9.4, 83.0], [9.5, 84.0], [9.6, 84.0], [9.7, 84.0], [9.8, 85.0], [9.9, 85.0], [10.0, 85.0], [10.1, 85.0], [10.2, 86.0], [10.3, 86.0], [10.4, 88.0], [10.5, 90.0], [10.6, 90.0], [10.7, 90.0], [10.8, 91.0], [10.9, 92.0], [11.0, 92.0], [11.1, 92.0], [11.2, 92.0], [11.3, 93.0], [11.4, 93.0], [11.5, 94.0], [11.6, 94.0], [11.7, 95.0], [11.8, 97.0], [11.9, 97.0], [12.0, 98.0], [12.1, 98.0], [12.2, 100.0], [12.3, 100.0], [12.4, 100.0], [12.5, 101.0], [12.6, 102.0], [12.7, 102.0], [12.8, 102.0], [12.9, 102.0], [13.0, 102.0], [13.1, 102.0], [13.2, 103.0], [13.3, 103.0], [13.4, 103.0], [13.5, 103.0], [13.6, 104.0], [13.7, 104.0], [13.8, 104.0], [13.9, 105.0], [14.0, 105.0], [14.1, 105.0], [14.2, 105.0], [14.3, 106.0], [14.4, 107.0], [14.5, 107.0], [14.6, 107.0], [14.7, 107.0], [14.8, 107.0], [14.9, 108.0], [15.0, 108.0], [15.1, 108.0], [15.2, 108.0], [15.3, 109.0], [15.4, 109.0], [15.5, 111.0], [15.6, 113.0], [15.7, 113.0], [15.8, 113.0], [15.9, 113.0], [16.0, 114.0], [16.1, 114.0], [16.2, 114.0], [16.3, 116.0], [16.4, 118.0], [16.5, 118.0], [16.6, 118.0], [16.7, 119.0], [16.8, 119.0], [16.9, 120.0], [17.0, 120.0], [17.1, 120.0], [17.2, 120.0], [17.3, 121.0], [17.4, 122.0], [17.5, 123.0], [17.6, 123.0], [17.7, 124.0], [17.8, 124.0], [17.9, 125.0], [18.0, 125.0], [18.1, 125.0], [18.2, 125.0], [18.3, 126.0], [18.4, 126.0], [18.5, 126.0], [18.6, 126.0], [18.7, 127.0], [18.8, 127.0], [18.9, 127.0], [19.0, 128.0], [19.1, 128.0], [19.2, 128.0], [19.3, 128.0], [19.4, 129.0], [19.5, 131.0], [19.6, 131.0], [19.7, 133.0], [19.8, 133.0], [19.9, 133.0], [20.0, 133.0], [20.1, 133.0], [20.2, 134.0], [20.3, 135.0], [20.4, 135.0], [20.5, 136.0], [20.6, 137.0], [20.7, 137.0], [20.8, 138.0], [20.9, 138.0], [21.0, 139.0], [21.1, 139.0], [21.2, 140.0], [21.3, 141.0], [21.4, 142.0], [21.5, 142.0], [21.6, 142.0], [21.7, 142.0], [21.8, 143.0], [21.9, 143.0], [22.0, 144.0], [22.1, 144.0], [22.2, 145.0], [22.3, 145.0], [22.4, 145.0], [22.5, 147.0], [22.6, 148.0], [22.7, 148.0], [22.8, 148.0], [22.9, 149.0], [23.0, 150.0], [23.1, 150.0], [23.2, 150.0], [23.3, 150.0], [23.4, 150.0], [23.5, 152.0], [23.6, 152.0], [23.7, 153.0], [23.8, 153.0], [23.9, 153.0], [24.0, 153.0], [24.1, 153.0], [24.2, 155.0], [24.3, 155.0], [24.4, 156.0], [24.5, 157.0], [24.6, 159.0], [24.7, 159.0], [24.8, 160.0], [24.9, 160.0], [25.0, 160.0], [25.1, 160.0], [25.2, 161.0], [25.3, 162.0], [25.4, 167.0], [25.5, 168.0], [25.6, 168.0], [25.7, 169.0], [25.8, 170.0], [25.9, 171.0], [26.0, 171.0], [26.1, 171.0], [26.2, 171.0], [26.3, 172.0], [26.4, 174.0], [26.5, 180.0], [26.6, 180.0], [26.7, 181.0], [26.8, 182.0], [26.9, 182.0], [27.0, 184.0], [27.1, 184.0], [27.2, 188.0], [27.3, 188.0], [27.4, 189.0], [27.5, 189.0], [27.6, 189.0], [27.7, 192.0], [27.8, 196.0], [27.9, 196.0], [28.0, 198.0], [28.1, 198.0], [28.2, 198.0], [28.3, 199.0], [28.4, 203.0], [28.5, 203.0], [28.6, 205.0], [28.7, 208.0], [28.8, 210.0], [28.9, 212.0], [29.0, 215.0], [29.1, 215.0], [29.2, 216.0], [29.3, 222.0], [29.4, 224.0], [29.5, 225.0], [29.6, 227.0], [29.7, 228.0], [29.8, 229.0], [29.9, 234.0], [30.0, 236.0], [30.1, 236.0], [30.2, 236.0], [30.3, 238.0], [30.4, 241.0], [30.5, 241.0], [30.6, 241.0], [30.7, 248.0], [30.8, 248.0], [30.9, 249.0], [31.0, 249.0], [31.1, 249.0], [31.2, 250.0], [31.3, 250.0], [31.4, 253.0], [31.5, 257.0], [31.6, 258.0], [31.7, 258.0], [31.8, 260.0], [31.9, 262.0], [32.0, 264.0], [32.1, 264.0], [32.2, 267.0], [32.3, 269.0], [32.4, 272.0], [32.5, 272.0], [32.6, 272.0], [32.7, 275.0], [32.8, 278.0], [32.9, 280.0], [33.0, 286.0], [33.1, 286.0], [33.2, 289.0], [33.3, 302.0], [33.4, 302.0], [33.5, 308.0], [33.6, 315.0], [33.7, 317.0], [33.8, 321.0], [33.9, 322.0], [34.0, 335.0], [34.1, 335.0], [34.2, 336.0], [34.3, 339.0], [34.4, 341.0], [34.5, 342.0], [34.6, 345.0], [34.7, 349.0], [34.8, 349.0], [34.9, 350.0], [35.0, 358.0], [35.1, 358.0], [35.2, 361.0], [35.3, 366.0], [35.4, 369.0], [35.5, 371.0], [35.6, 372.0], [35.7, 376.0], [35.8, 377.0], [35.9, 384.0], [36.0, 384.0], [36.1, 384.0], [36.2, 385.0], [36.3, 388.0], [36.4, 390.0], [36.5, 390.0], [36.6, 397.0], [36.7, 397.0], [36.8, 397.0], [36.9, 400.0], [37.0, 400.0], [37.1, 403.0], [37.2, 412.0], [37.3, 413.0], [37.4, 416.0], [37.5, 419.0], [37.6, 425.0], [37.7, 429.0], [37.8, 434.0], [37.9, 435.0], [38.0, 435.0], [38.1, 438.0], [38.2, 442.0], [38.3, 442.0], [38.4, 443.0], [38.5, 443.0], [38.6, 444.0], [38.7, 446.0], [38.8, 446.0], [38.9, 451.0], [39.0, 451.0], [39.1, 454.0], [39.2, 457.0], [39.3, 458.0], [39.4, 459.0], [39.5, 460.0], [39.6, 461.0], [39.7, 462.0], [39.8, 465.0], [39.9, 466.0], [40.0, 466.0], [40.1, 468.0], [40.2, 470.0], [40.3, 472.0], [40.4, 474.0], [40.5, 475.0], [40.6, 476.0], [40.7, 477.0], [40.8, 478.0], [40.9, 479.0], [41.0, 479.0], [41.1, 482.0], [41.2, 487.0], [41.3, 487.0], [41.4, 488.0], [41.5, 491.0], [41.6, 495.0], [41.7, 495.0], [41.8, 500.0], [41.9, 501.0], [42.0, 501.0], [42.1, 501.0], [42.2, 503.0], [42.3, 505.0], [42.4, 509.0], [42.5, 512.0], [42.6, 513.0], [42.7, 514.0], [42.8, 515.0], [42.9, 517.0], [43.0, 517.0], [43.1, 520.0], [43.2, 521.0], [43.3, 522.0], [43.4, 526.0], [43.5, 528.0], [43.6, 529.0], [43.7, 530.0], [43.8, 530.0], [43.9, 531.0], [44.0, 531.0], [44.1, 531.0], [44.2, 533.0], [44.3, 534.0], [44.4, 534.0], [44.5, 534.0], [44.6, 535.0], [44.7, 535.0], [44.8, 539.0], [44.9, 540.0], [45.0, 540.0], [45.1, 540.0], [45.2, 542.0], [45.3, 546.0], [45.4, 548.0], [45.5, 550.0], [45.6, 550.0], [45.7, 551.0], [45.8, 556.0], [45.9, 556.0], [46.0, 556.0], [46.1, 558.0], [46.2, 560.0], [46.3, 560.0], [46.4, 564.0], [46.5, 564.0], [46.6, 568.0], [46.7, 569.0], [46.8, 569.0], [46.9, 570.0], [47.0, 570.0], [47.1, 572.0], [47.2, 575.0], [47.3, 576.0], [47.4, 578.0], [47.5, 580.0], [47.6, 581.0], [47.7, 583.0], [47.8, 587.0], [47.9, 589.0], [48.0, 589.0], [48.1, 590.0], [48.2, 595.0], [48.3, 596.0], [48.4, 596.0], [48.5, 596.0], [48.6, 599.0], [48.7, 600.0], [48.8, 602.0], [48.9, 603.0], [49.0, 603.0], [49.1, 605.0], [49.2, 605.0], [49.3, 608.0], [49.4, 612.0], [49.5, 612.0], [49.6, 615.0], [49.7, 616.0], [49.8, 620.0], [49.9, 621.0], [50.0, 621.0], [50.1, 624.0], [50.2, 633.0], [50.3, 635.0], [50.4, 636.0], [50.5, 638.0], [50.6, 639.0], [50.7, 642.0], [50.8, 645.0], [50.9, 645.0], [51.0, 645.0], [51.1, 649.0], [51.2, 656.0], [51.3, 656.0], [51.4, 656.0], [51.5, 657.0], [51.6, 659.0], [51.7, 661.0], [51.8, 662.0], [51.9, 664.0], [52.0, 664.0], [52.1, 665.0], [52.2, 665.0], [52.3, 670.0], [52.4, 677.0], [52.5, 679.0], [52.6, 681.0], [52.7, 683.0], [52.8, 685.0], [52.9, 685.0], [53.0, 685.0], [53.1, 688.0], [53.2, 690.0], [53.3, 692.0], [53.4, 693.0], [53.5, 693.0], [53.6, 694.0], [53.7, 695.0], [53.8, 698.0], [53.9, 699.0], [54.0, 699.0], [54.1, 702.0], [54.2, 706.0], [54.3, 706.0], [54.4, 707.0], [54.5, 710.0], [54.6, 712.0], [54.7, 713.0], [54.8, 713.0], [54.9, 721.0], [55.0, 721.0], [55.1, 723.0], [55.2, 725.0], [55.3, 726.0], [55.4, 731.0], [55.5, 736.0], [55.6, 736.0], [55.7, 739.0], [55.8, 740.0], [55.9, 740.0], [56.0, 740.0], [56.1, 740.0], [56.2, 741.0], [56.3, 741.0], [56.4, 741.0], [56.5, 741.0], [56.6, 742.0], [56.7, 746.0], [56.8, 746.0], [56.9, 747.0], [57.0, 747.0], [57.1, 749.0], [57.2, 760.0], [57.3, 764.0], [57.4, 770.0], [57.5, 773.0], [57.6, 775.0], [57.7, 776.0], [57.8, 778.0], [57.9, 779.0], [58.0, 779.0], [58.1, 780.0], [58.2, 780.0], [58.3, 782.0], [58.4, 789.0], [58.5, 798.0], [58.6, 799.0], [58.7, 803.0], [58.8, 804.0], [58.9, 807.0], [59.0, 807.0], [59.1, 810.0], [59.2, 818.0], [59.3, 819.0], [59.4, 826.0], [59.5, 827.0], [59.6, 830.0], [59.7, 831.0], [59.8, 837.0], [59.9, 837.0], [60.0, 837.0], [60.1, 838.0], [60.2, 843.0], [60.3, 847.0], [60.4, 850.0], [60.5, 854.0], [60.6, 856.0], [60.7, 858.0], [60.8, 859.0], [60.9, 860.0], [61.0, 860.0], [61.1, 868.0], [61.2, 871.0], [61.3, 880.0], [61.4, 912.0], [61.5, 913.0], [61.6, 913.0], [61.7, 915.0], [61.8, 922.0], [61.9, 923.0], [62.0, 923.0], [62.1, 929.0], [62.2, 939.0], [62.3, 941.0], [62.4, 944.0], [62.5, 953.0], [62.6, 953.0], [62.7, 959.0], [62.8, 961.0], [62.9, 962.0], [63.0, 962.0], [63.1, 962.0], [63.2, 965.0], [63.3, 970.0], [63.4, 973.0], [63.5, 995.0], [63.6, 997.0], [63.7, 1002.0], [63.8, 1011.0], [63.9, 1012.0], [64.0, 1012.0], [64.1, 1021.0], [64.2, 1024.0], [64.3, 1031.0], [64.4, 1033.0], [64.5, 1035.0], [64.6, 1042.0], [64.7, 1045.0], [64.8, 1062.0], [64.9, 1071.0], [65.0, 1071.0], [65.1, 1071.0], [65.2, 1079.0], [65.3, 1099.0], [65.4, 1099.0], [65.5, 1135.0], [65.6, 1151.0], [65.7, 1154.0], [65.8, 1171.0], [65.9, 1188.0], [66.0, 1188.0], [66.1, 1189.0], [66.2, 1192.0], [66.3, 1201.0], [66.4, 1207.0], [66.5, 1210.0], [66.6, 1282.0], [66.7, 1284.0], [66.8, 1285.0], [66.9, 1286.0], [67.0, 1286.0], [67.1, 1292.0], [67.2, 1295.0], [67.3, 1300.0], [67.4, 1315.0], [67.5, 1323.0], [67.6, 1355.0], [67.7, 1361.0], [67.8, 1408.0], [67.9, 1411.0], [68.0, 1411.0], [68.1, 1419.0], [68.2, 1451.0], [68.3, 1453.0], [68.4, 1460.0], [68.5, 1483.0], [68.6, 1484.0], [68.7, 1520.0], [68.8, 1528.0], [68.9, 1536.0], [69.0, 1536.0], [69.1, 1537.0], [69.2, 1556.0], [69.3, 1556.0], [69.4, 1562.0], [69.5, 1571.0], [69.6, 1703.0], [69.7, 1745.0], [69.8, 1745.0], [69.9, 1747.0], [70.0, 1747.0], [70.1, 1754.0], [70.2, 1762.0], [70.3, 1766.0], [70.4, 1780.0], [70.5, 1796.0], [70.6, 1828.0], [70.7, 1848.0], [70.8, 1876.0], [70.9, 1895.0], [71.0, 1895.0], [71.1, 1927.0], [71.2, 1933.0], [71.3, 1944.0], [71.4, 1944.0], [71.5, 1946.0], [71.6, 1952.0], [71.7, 1958.0], [71.8, 1961.0], [71.9, 1963.0], [72.0, 1963.0], [72.1, 1967.0], [72.2, 1974.0], [72.3, 1974.0], [72.4, 1996.0], [72.5, 1999.0], [72.6, 2010.0], [72.7, 2022.0], [72.8, 2028.0], [72.9, 2033.0], [73.0, 2033.0], [73.1, 2041.0], [73.2, 2043.0], [73.3, 2044.0], [73.4, 2047.0], [73.5, 2047.0], [73.6, 2051.0], [73.7, 2053.0], [73.8, 2055.0], [73.9, 2055.0], [74.0, 2055.0], [74.1, 2056.0], [74.2, 2057.0], [74.3, 2070.0], [74.4, 2077.0], [74.5, 2078.0], [74.6, 2079.0], [74.7, 2083.0], [74.8, 2083.0], [74.9, 2090.0], [75.0, 2090.0], [75.1, 2096.0], [75.2, 2097.0], [75.3, 2102.0], [75.4, 2110.0], [75.5, 2110.0], [75.6, 2115.0], [75.7, 2115.0], [75.8, 2116.0], [75.9, 2121.0], [76.0, 2121.0], [76.1, 2124.0], [76.2, 2129.0], [76.3, 2132.0], [76.4, 2132.0], [76.5, 2141.0], [76.6, 2142.0], [76.7, 2146.0], [76.8, 2150.0], [76.9, 2150.0], [77.0, 2150.0], [77.1, 2150.0], [77.2, 2152.0], [77.3, 2159.0], [77.4, 2165.0], [77.5, 2172.0], [77.6, 2177.0], [77.7, 2177.0], [77.8, 2186.0], [77.9, 2188.0], [78.0, 2188.0], [78.1, 2188.0], [78.2, 2188.0], [78.3, 2191.0], [78.4, 2192.0], [78.5, 2193.0], [78.6, 2200.0], [78.7, 2204.0], [78.8, 2206.0], [78.9, 2212.0], [79.0, 2212.0], [79.1, 2213.0], [79.2, 2221.0], [79.3, 2222.0], [79.4, 2225.0], [79.5, 2228.0], [79.6, 2228.0], [79.7, 2229.0], [79.8, 2232.0], [79.9, 2234.0], [80.0, 2234.0], [80.1, 2238.0], [80.2, 2238.0], [80.3, 2239.0], [80.4, 2240.0], [80.5, 2247.0], [80.6, 2249.0], [80.7, 2250.0], [80.8, 2253.0], [80.9, 2256.0], [81.0, 2256.0], [81.1, 2258.0], [81.2, 2258.0], [81.3, 2265.0], [81.4, 2269.0], [81.5, 2272.0], [81.6, 2274.0], [81.7, 2280.0], [81.8, 2281.0], [81.9, 2283.0], [82.0, 2283.0], [82.1, 2290.0], [82.2, 2296.0], [82.3, 2299.0], [82.4, 2302.0], [82.5, 2310.0], [82.6, 2314.0], [82.7, 2315.0], [82.8, 2317.0], [82.9, 2318.0], [83.0, 2318.0], [83.1, 2320.0], [83.2, 2320.0], [83.3, 2325.0], [83.4, 2325.0], [83.5, 2329.0], [83.6, 2330.0], [83.7, 2332.0], [83.8, 2334.0], [83.9, 2336.0], [84.0, 2336.0], [84.1, 2337.0], [84.2, 2337.0], [84.3, 2339.0], [84.4, 2345.0], [84.5, 2349.0], [84.6, 2351.0], [84.7, 2352.0], [84.8, 2352.0], [84.9, 2358.0], [85.0, 2358.0], [85.1, 2358.0], [85.2, 2360.0], [85.3, 2361.0], [85.4, 2368.0], [85.5, 2373.0], [85.6, 2379.0], [85.7, 2380.0], [85.8, 2382.0], [85.9, 2382.0], [86.0, 2382.0], [86.1, 2386.0], [86.2, 2389.0], [86.3, 2397.0], [86.4, 2398.0], [86.5, 2407.0], [86.6, 2408.0], [86.7, 2410.0], [86.8, 2411.0], [86.9, 2411.0], [87.0, 2411.0], [87.1, 2412.0], [87.2, 2412.0], [87.3, 2417.0], [87.4, 2420.0], [87.5, 2421.0], [87.6, 2424.0], [87.7, 2424.0], [87.8, 2429.0], [87.9, 2437.0], [88.0, 2437.0], [88.1, 2438.0], [88.2, 2438.0], [88.3, 2444.0], [88.4, 2445.0], [88.5, 2461.0], [88.6, 2468.0], [88.7, 2475.0], [88.8, 2476.0], [88.9, 2480.0], [89.0, 2480.0], [89.1, 2482.0], [89.2, 2486.0], [89.3, 2490.0], [89.4, 2505.0], [89.5, 2507.0], [89.6, 2512.0], [89.7, 2522.0], [89.8, 2531.0], [89.9, 2531.0], [90.0, 2531.0], [90.1, 2537.0], [90.2, 2540.0], [90.3, 2543.0], [90.4, 2543.0], [90.5, 2553.0], [90.6, 2557.0], [90.7, 2562.0], [90.8, 2564.0], [90.9, 2581.0], [91.0, 2581.0], [91.1, 2591.0], [91.2, 2598.0], [91.3, 2605.0], [91.4, 2637.0], [91.5, 2648.0], [91.6, 2659.0], [91.7, 2664.0], [91.8, 2683.0], [91.9, 2695.0], [92.0, 2695.0], [92.1, 2698.0], [92.2, 2702.0], [92.3, 2705.0], [92.4, 2707.0], [92.5, 2712.0], [92.6, 2715.0], [92.7, 2717.0], [92.8, 2725.0], [92.9, 2726.0], [93.0, 2726.0], [93.1, 2730.0], [93.2, 2734.0], [93.3, 2735.0], [93.4, 2738.0], [93.5, 2739.0], [93.6, 2741.0], [93.7, 2747.0], [93.8, 2753.0], [93.9, 2764.0], [94.0, 2764.0], [94.1, 2779.0], [94.2, 2805.0], [94.3, 2808.0], [94.4, 2845.0], [94.5, 2845.0], [94.6, 2867.0], [94.7, 2867.0], [94.8, 2870.0], [94.9, 2882.0], [95.0, 2882.0], [95.1, 2894.0], [95.2, 2903.0], [95.3, 2911.0], [95.4, 2931.0], [95.5, 2940.0], [95.6, 2966.0], [95.7, 2972.0], [95.8, 2994.0], [95.9, 2995.0], [96.0, 2995.0], [96.1, 2998.0], [96.2, 3000.0], [96.3, 3009.0], [96.4, 3026.0], [96.5, 3043.0], [96.6, 3062.0], [96.7, 3063.0], [96.8, 3067.0], [96.9, 3068.0], [97.0, 3068.0], [97.1, 3072.0], [97.2, 3075.0], [97.3, 3095.0], [97.4, 3111.0], [97.5, 3134.0], [97.6, 3249.0], [97.7, 3303.0], [97.8, 3332.0], [97.9, 3355.0], [98.0, 3355.0], [98.1, 3396.0], [98.2, 3420.0], [98.3, 3443.0], [98.4, 3631.0], [98.5, 3690.0], [98.6, 3788.0], [98.7, 3816.0], [98.8, 3969.0], [98.9, 4063.0], [99.0, 4063.0], [99.1, 4139.0], [99.2, 4152.0], [99.3, 4161.0], [99.4, 4180.0], [99.5, 4182.0], [99.6, 4185.0], [99.7, 4240.0], [99.8, 4782.0], [99.9, 5254.0], [100.0, 5254.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 20.0], [0.1, 20.0], [0.2, 27.0], [0.3, 30.0], [0.4, 44.0], [0.5, 50.0], [0.6, 50.0], [0.7, 55.0], [0.8, 57.0], [0.9, 60.0], [1.0, 76.0], [1.1, 76.0], [1.2, 93.0], [1.3, 93.0], [1.4, 94.0], [1.5, 94.0], [1.6, 94.0], [1.7, 95.0], [1.8, 106.0], [1.9, 106.0], [2.0, 111.0], [2.1, 111.0], [2.2, 113.0], [2.3, 116.0], [2.4, 116.0], [2.5, 117.0], [2.6, 119.0], [2.7, 119.0], [2.8, 127.0], [2.9, 128.0], [3.0, 128.0], [3.1, 129.0], [3.2, 132.0], [3.3, 133.0], [3.4, 137.0], [3.5, 139.0], [3.6, 140.0], [3.7, 140.0], [3.8, 141.0], [3.9, 141.0], [4.0, 141.0], [4.1, 143.0], [4.2, 144.0], [4.3, 147.0], [4.4, 148.0], [4.5, 148.0], [4.6, 148.0], [4.7, 149.0], [4.8, 151.0], [4.9, 153.0], [5.0, 154.0], [5.1, 154.0], [5.2, 156.0], [5.3, 159.0], [5.4, 159.0], [5.5, 160.0], [5.6, 161.0], [5.7, 163.0], [5.8, 163.0], [5.9, 163.0], [6.0, 167.0], [6.1, 167.0], [6.2, 167.0], [6.3, 168.0], [6.4, 168.0], [6.5, 175.0], [6.6, 178.0], [6.7, 178.0], [6.8, 179.0], [6.9, 181.0], [7.0, 182.0], [7.1, 182.0], [7.2, 182.0], [7.3, 183.0], [7.4, 184.0], [7.5, 185.0], [7.6, 185.0], [7.7, 185.0], [7.8, 185.0], [7.9, 185.0], [8.0, 186.0], [8.1, 186.0], [8.2, 187.0], [8.3, 188.0], [8.4, 189.0], [8.5, 189.0], [8.6, 190.0], [8.7, 190.0], [8.8, 192.0], [8.9, 193.0], [9.0, 194.0], [9.1, 194.0], [9.2, 195.0], [9.3, 195.0], [9.4, 196.0], [9.5, 196.0], [9.6, 197.0], [9.7, 197.0], [9.8, 198.0], [9.9, 198.0], [10.0, 201.0], [10.1, 201.0], [10.2, 203.0], [10.3, 203.0], [10.4, 204.0], [10.5, 204.0], [10.6, 205.0], [10.7, 205.0], [10.8, 206.0], [10.9, 207.0], [11.0, 207.0], [11.1, 207.0], [11.2, 208.0], [11.3, 210.0], [11.4, 210.0], [11.5, 211.0], [11.6, 212.0], [11.7, 213.0], [11.8, 213.0], [11.9, 213.0], [12.0, 214.0], [12.1, 214.0], [12.2, 214.0], [12.3, 215.0], [12.4, 216.0], [12.5, 217.0], [12.6, 217.0], [12.7, 217.0], [12.8, 218.0], [12.9, 218.0], [13.0, 219.0], [13.1, 219.0], [13.2, 219.0], [13.3, 220.0], [13.4, 220.0], [13.5, 221.0], [13.6, 221.0], [13.7, 222.0], [13.8, 224.0], [13.9, 225.0], [14.0, 225.0], [14.1, 225.0], [14.2, 226.0], [14.3, 227.0], [14.4, 228.0], [14.5, 228.0], [14.6, 228.0], [14.7, 228.0], [14.8, 229.0], [14.9, 229.0], [15.0, 229.0], [15.1, 229.0], [15.2, 231.0], [15.3, 232.0], [15.4, 233.0], [15.5, 234.0], [15.6, 236.0], [15.7, 242.0], [15.8, 242.0], [15.9, 244.0], [16.0, 244.0], [16.1, 244.0], [16.2, 245.0], [16.3, 246.0], [16.4, 247.0], [16.5, 248.0], [16.6, 248.0], [16.7, 249.0], [16.8, 249.0], [16.9, 250.0], [17.0, 251.0], [17.1, 251.0], [17.2, 251.0], [17.3, 252.0], [17.4, 253.0], [17.5, 253.0], [17.6, 255.0], [17.7, 255.0], [17.8, 256.0], [17.9, 257.0], [18.0, 258.0], [18.1, 258.0], [18.2, 259.0], [18.3, 259.0], [18.4, 261.0], [18.5, 264.0], [18.6, 280.0], [18.7, 282.0], [18.8, 285.0], [18.9, 287.0], [19.0, 288.0], [19.1, 288.0], [19.2, 288.0], [19.3, 288.0], [19.4, 288.0], [19.5, 288.0], [19.6, 289.0], [19.7, 291.0], [19.8, 295.0], [19.9, 296.0], [20.0, 297.0], [20.1, 297.0], [20.2, 301.0], [20.3, 302.0], [20.4, 302.0], [20.5, 303.0], [20.6, 310.0], [20.7, 312.0], [20.8, 313.0], [20.9, 313.0], [21.0, 313.0], [21.1, 313.0], [21.2, 316.0], [21.3, 317.0], [21.4, 318.0], [21.5, 318.0], [21.6, 318.0], [21.7, 322.0], [21.8, 323.0], [21.9, 323.0], [22.0, 324.0], [22.1, 324.0], [22.2, 328.0], [22.3, 331.0], [22.4, 332.0], [22.5, 335.0], [22.6, 337.0], [22.7, 337.0], [22.8, 338.0], [22.9, 339.0], [23.0, 342.0], [23.1, 342.0], [23.2, 342.0], [23.3, 343.0], [23.4, 348.0], [23.5, 350.0], [23.6, 355.0], [23.7, 358.0], [23.8, 360.0], [23.9, 360.0], [24.0, 365.0], [24.1, 365.0], [24.2, 366.0], [24.3, 368.0], [24.4, 374.0], [24.5, 374.0], [24.6, 376.0], [24.7, 377.0], [24.8, 379.0], [24.9, 380.0], [25.0, 380.0], [25.1, 380.0], [25.2, 383.0], [25.3, 383.0], [25.4, 384.0], [25.5, 391.0], [25.6, 393.0], [25.7, 394.0], [25.8, 411.0], [25.9, 413.0], [26.0, 416.0], [26.1, 416.0], [26.2, 423.0], [26.3, 423.0], [26.4, 423.0], [26.5, 424.0], [26.6, 424.0], [26.7, 428.0], [26.8, 429.0], [26.9, 437.0], [27.0, 443.0], [27.1, 443.0], [27.2, 444.0], [27.3, 444.0], [27.4, 446.0], [27.5, 468.0], [27.6, 474.0], [27.7, 479.0], [27.8, 481.0], [27.9, 487.0], [28.0, 489.0], [28.1, 489.0], [28.2, 498.0], [28.3, 513.0], [28.4, 517.0], [28.5, 520.0], [28.6, 520.0], [28.7, 528.0], [28.8, 529.0], [28.9, 531.0], [29.0, 541.0], [29.1, 541.0], [29.2, 545.0], [29.3, 548.0], [29.4, 559.0], [29.5, 566.0], [29.6, 583.0], [29.7, 583.0], [29.8, 589.0], [29.9, 590.0], [30.0, 595.0], [30.1, 595.0], [30.2, 604.0], [30.3, 625.0], [30.4, 631.0], [30.5, 642.0], [30.6, 646.0], [30.7, 650.0], [30.8, 657.0], [30.9, 674.0], [31.0, 680.0], [31.1, 680.0], [31.2, 682.0], [31.3, 684.0], [31.4, 693.0], [31.5, 695.0], [31.6, 709.0], [31.7, 709.0], [31.8, 710.0], [31.9, 725.0], [32.0, 735.0], [32.1, 735.0], [32.2, 748.0], [32.3, 793.0], [32.4, 796.0], [32.5, 798.0], [32.6, 798.0], [32.7, 799.0], [32.8, 802.0], [32.9, 819.0], [33.0, 826.0], [33.1, 826.0], [33.2, 833.0], [33.3, 843.0], [33.4, 849.0], [33.5, 858.0], [33.6, 860.0], [33.7, 860.0], [33.8, 866.0], [33.9, 871.0], [34.0, 878.0], [34.1, 878.0], [34.2, 897.0], [34.3, 905.0], [34.4, 907.0], [34.5, 922.0], [34.6, 924.0], [34.7, 931.0], [34.8, 931.0], [34.9, 935.0], [35.0, 937.0], [35.1, 937.0], [35.2, 939.0], [35.3, 941.0], [35.4, 958.0], [35.5, 959.0], [35.6, 960.0], [35.7, 978.0], [35.8, 979.0], [35.9, 980.0], [36.0, 980.0], [36.1, 981.0], [36.2, 981.0], [36.3, 995.0], [36.4, 996.0], [36.5, 998.0], [36.6, 1002.0], [36.7, 1004.0], [36.8, 1004.0], [36.9, 1019.0], [37.0, 1019.0], [37.1, 1019.0], [37.2, 1023.0], [37.3, 1024.0], [37.4, 1026.0], [37.5, 1036.0], [37.6, 1040.0], [37.7, 1055.0], [37.8, 1056.0], [37.9, 1057.0], [38.0, 1057.0], [38.1, 1057.0], [38.2, 1071.0], [38.3, 1076.0], [38.4, 1077.0], [38.5, 1080.0], [38.6, 1087.0], [38.7, 1092.0], [38.8, 1095.0], [38.9, 1095.0], [39.0, 1095.0], [39.1, 1095.0], [39.2, 1096.0], [39.3, 1104.0], [39.4, 1108.0], [39.5, 1114.0], [39.6, 1115.0], [39.7, 1120.0], [39.8, 1120.0], [39.9, 1125.0], [40.0, 1125.0], [40.1, 1140.0], [40.2, 1143.0], [40.3, 1144.0], [40.4, 1145.0], [40.5, 1145.0], [40.6, 1145.0], [40.7, 1153.0], [40.8, 1154.0], [40.9, 1155.0], [41.0, 1155.0], [41.1, 1162.0], [41.2, 1163.0], [41.3, 1174.0], [41.4, 1175.0], [41.5, 1179.0], [41.6, 1185.0], [41.7, 1185.0], [41.8, 1185.0], [41.9, 1192.0], [42.0, 1192.0], [42.1, 1194.0], [42.2, 1200.0], [42.3, 1200.0], [42.4, 1201.0], [42.5, 1203.0], [42.6, 1204.0], [42.7, 1210.0], [42.8, 1215.0], [42.9, 1223.0], [43.0, 1223.0], [43.1, 1225.0], [43.2, 1225.0], [43.3, 1232.0], [43.4, 1232.0], [43.5, 1234.0], [43.6, 1235.0], [43.7, 1243.0], [43.8, 1252.0], [43.9, 1253.0], [44.0, 1253.0], [44.1, 1258.0], [44.2, 1270.0], [44.3, 1272.0], [44.4, 1272.0], [44.5, 1275.0], [44.6, 1276.0], [44.7, 1276.0], [44.8, 1276.0], [44.9, 1279.0], [45.0, 1279.0], [45.1, 1282.0], [45.2, 1286.0], [45.3, 1287.0], [45.4, 1288.0], [45.5, 1289.0], [45.6, 1292.0], [45.7, 1295.0], [45.8, 1297.0], [45.9, 1301.0], [46.0, 1301.0], [46.1, 1302.0], [46.2, 1304.0], [46.3, 1305.0], [46.4, 1307.0], [46.5, 1307.0], [46.6, 1311.0], [46.7, 1314.0], [46.8, 1317.0], [46.9, 1317.0], [47.0, 1317.0], [47.1, 1321.0], [47.2, 1321.0], [47.3, 1323.0], [47.4, 1325.0], [47.5, 1329.0], [47.6, 1333.0], [47.7, 1334.0], [47.8, 1345.0], [47.9, 1346.0], [48.0, 1346.0], [48.1, 1347.0], [48.2, 1350.0], [48.3, 1353.0], [48.4, 1354.0], [48.5, 1355.0], [48.6, 1359.0], [48.7, 1363.0], [48.8, 1367.0], [48.9, 1384.0], [49.0, 1384.0], [49.1, 1386.0], [49.2, 1392.0], [49.3, 1394.0], [49.4, 1395.0], [49.5, 1398.0], [49.6, 1398.0], [49.7, 1402.0], [49.8, 1406.0], [49.9, 1407.0], [50.0, 1407.0], [50.1, 1408.0], [50.2, 1411.0], [50.3, 1412.0], [50.4, 1414.0], [50.5, 1414.0], [50.6, 1416.0], [50.7, 1420.0], [50.8, 1426.0], [50.9, 1431.0], [51.0, 1431.0], [51.1, 1434.0], [51.2, 1435.0], [51.3, 1442.0], [51.4, 1443.0], [51.5, 1445.0], [51.6, 1448.0], [51.7, 1452.0], [51.8, 1453.0], [51.9, 1465.0], [52.0, 1465.0], [52.1, 1466.0], [52.2, 1469.0], [52.3, 1471.0], [52.4, 1477.0], [52.5, 1479.0], [52.6, 1480.0], [52.7, 1489.0], [52.8, 1493.0], [52.9, 1500.0], [53.0, 1500.0], [53.1, 1510.0], [53.2, 1513.0], [53.3, 1513.0], [53.4, 1515.0], [53.5, 1517.0], [53.6, 1518.0], [53.7, 1520.0], [53.8, 1529.0], [53.9, 1539.0], [54.0, 1539.0], [54.1, 1540.0], [54.2, 1540.0], [54.3, 1542.0], [54.4, 1543.0], [54.5, 1545.0], [54.6, 1549.0], [54.7, 1551.0], [54.8, 1552.0], [54.9, 1553.0], [55.0, 1553.0], [55.1, 1557.0], [55.2, 1558.0], [55.3, 1565.0], [55.4, 1567.0], [55.5, 1569.0], [55.6, 1570.0], [55.7, 1572.0], [55.8, 1580.0], [55.9, 1584.0], [56.0, 1584.0], [56.1, 1585.0], [56.2, 1585.0], [56.3, 1591.0], [56.4, 1592.0], [56.5, 1598.0], [56.6, 1598.0], [56.7, 1598.0], [56.8, 1600.0], [56.9, 1606.0], [57.0, 1606.0], [57.1, 1613.0], [57.2, 1626.0], [57.3, 1626.0], [57.4, 1632.0], [57.5, 1639.0], [57.6, 1641.0], [57.7, 1666.0], [57.8, 1672.0], [57.9, 1680.0], [58.0, 1680.0], [58.1, 1681.0], [58.2, 1690.0], [58.3, 1712.0], [58.4, 1713.0], [58.5, 1718.0], [58.6, 1718.0], [58.7, 1739.0], [58.8, 1747.0], [58.9, 1748.0], [59.0, 1748.0], [59.1, 1751.0], [59.2, 1767.0], [59.3, 1772.0], [59.4, 1777.0], [59.5, 1778.0], [59.6, 1778.0], [59.7, 1785.0], [59.8, 1793.0], [59.9, 1796.0], [60.0, 1796.0], [60.1, 1797.0], [60.2, 1798.0], [60.3, 1822.0], [60.4, 1823.0], [60.5, 1826.0], [60.6, 1830.0], [60.7, 1834.0], [60.8, 1838.0], [60.9, 1850.0], [61.0, 1850.0], [61.1, 1856.0], [61.2, 1859.0], [61.3, 1864.0], [61.4, 1905.0], [61.5, 1935.0], [61.6, 1960.0], [61.7, 1968.0], [61.8, 1981.0], [61.9, 1999.0], [62.0, 1999.0], [62.1, 2002.0], [62.2, 2028.0], [62.3, 2037.0], [62.4, 2043.0], [62.5, 2050.0], [62.6, 2052.0], [62.7, 2059.0], [62.8, 2061.0], [62.9, 2063.0], [63.0, 2063.0], [63.1, 2065.0], [63.2, 2069.0], [63.3, 2070.0], [63.4, 2098.0], [63.5, 2104.0], [63.6, 2110.0], [63.7, 2117.0], [63.8, 2134.0], [63.9, 2155.0], [64.0, 2155.0], [64.1, 2178.0], [64.2, 2186.0], [64.3, 2202.0], [64.4, 2210.0], [64.5, 2211.0], [64.6, 2214.0], [64.7, 2214.0], [64.8, 2217.0], [64.9, 2228.0], [65.0, 2228.0], [65.1, 2247.0], [65.2, 2276.0], [65.3, 2284.0], [65.4, 2300.0], [65.5, 2315.0], [65.6, 2317.0], [65.7, 2321.0], [65.8, 2345.0], [65.9, 2377.0], [66.0, 2377.0], [66.1, 2381.0], [66.2, 2391.0], [66.3, 2435.0], [66.4, 2447.0], [66.5, 2489.0], [66.6, 2507.0], [66.7, 2565.0], [66.8, 2574.0], [66.9, 2583.0], [67.0, 2583.0], [67.1, 2592.0], [67.2, 2624.0], [67.3, 2632.0], [67.4, 2671.0], [67.5, 2694.0], [67.6, 2727.0], [67.7, 2728.0], [67.8, 2765.0], [67.9, 2784.0], [68.0, 2784.0], [68.1, 2793.0], [68.2, 2802.0], [68.3, 2822.0], [68.4, 2822.0], [68.5, 2831.0], [68.6, 2833.0], [68.7, 2836.0], [68.8, 2838.0], [68.9, 2841.0], [69.0, 2841.0], [69.1, 2854.0], [69.2, 2856.0], [69.3, 2863.0], [69.4, 2881.0], [69.5, 2900.0], [69.6, 2942.0], [69.7, 2957.0], [69.8, 2968.0], [69.9, 3024.0], [70.0, 3024.0], [70.1, 3107.0], [70.2, 3119.0], [70.3, 3197.0], [70.4, 3220.0], [70.5, 3230.0], [70.6, 3230.0], [70.7, 3250.0], [70.8, 3322.0], [70.9, 3374.0], [71.0, 3374.0], [71.1, 3379.0], [71.2, 3381.0], [71.3, 3395.0], [71.4, 3418.0], [71.5, 3419.0], [71.6, 3421.0], [71.7, 3423.0], [71.8, 3448.0], [71.9, 3450.0], [72.0, 3450.0], [72.1, 3459.0], [72.2, 3462.0], [72.3, 3471.0], [72.4, 3472.0], [72.5, 3478.0], [72.6, 3486.0], [72.7, 3487.0], [72.8, 3491.0], [72.9, 3493.0], [73.0, 3493.0], [73.1, 3494.0], [73.2, 3501.0], [73.3, 3501.0], [73.4, 3507.0], [73.5, 3509.0], [73.6, 3511.0], [73.7, 3516.0], [73.8, 3516.0], [73.9, 3523.0], [74.0, 3523.0], [74.1, 3527.0], [74.2, 3528.0], [74.3, 3529.0], [74.4, 3534.0], [74.5, 3544.0], [74.6, 3544.0], [74.7, 3550.0], [74.8, 3552.0], [74.9, 3552.0], [75.0, 3552.0], [75.1, 3555.0], [75.2, 3556.0], [75.3, 3559.0], [75.4, 3560.0], [75.5, 3560.0], [75.6, 3573.0], [75.7, 3574.0], [75.8, 3575.0], [75.9, 3580.0], [76.0, 3580.0], [76.1, 3582.0], [76.2, 3614.0], [76.3, 3640.0], [76.4, 3661.0], [76.5, 3670.0], [76.6, 3673.0], [76.7, 3676.0], [76.8, 3679.0], [76.9, 3719.0], [77.0, 3719.0], [77.1, 3733.0], [77.2, 3738.0], [77.3, 3746.0], [77.4, 3803.0], [77.5, 3808.0], [77.6, 3809.0], [77.7, 3810.0], [77.8, 3811.0], [77.9, 3822.0], [78.0, 3822.0], [78.1, 3826.0], [78.2, 3834.0], [78.3, 3835.0], [78.4, 3841.0], [78.5, 3843.0], [78.6, 3845.0], [78.7, 3846.0], [78.8, 3848.0], [78.9, 3852.0], [79.0, 3852.0], [79.1, 3854.0], [79.2, 3879.0], [79.3, 3902.0], [79.4, 3907.0], [79.5, 3910.0], [79.6, 3928.0], [79.7, 3968.0], [79.8, 3970.0], [79.9, 3979.0], [80.0, 3979.0], [80.1, 3986.0], [80.2, 3988.0], [80.3, 3992.0], [80.4, 4012.0], [80.5, 4019.0], [80.6, 4027.0], [80.7, 4033.0], [80.8, 4075.0], [80.9, 4087.0], [81.0, 4087.0], [81.1, 4122.0], [81.2, 4126.0], [81.3, 4135.0], [81.4, 4179.0], [81.5, 4186.0], [81.6, 4195.0], [81.7, 4197.0], [81.8, 4197.0], [81.9, 4228.0], [82.0, 4228.0], [82.1, 4232.0], [82.2, 4232.0], [82.3, 4237.0], [82.4, 4241.0], [82.5, 4242.0], [82.6, 4243.0], [82.7, 4247.0], [82.8, 4250.0], [82.9, 4254.0], [83.0, 4254.0], [83.1, 4260.0], [83.2, 4262.0], [83.3, 4262.0], [83.4, 4274.0], [83.5, 4280.0], [83.6, 4289.0], [83.7, 4291.0], [83.8, 4293.0], [83.9, 4298.0], [84.0, 4298.0], [84.1, 4302.0], [84.2, 4305.0], [84.3, 4309.0], [84.4, 4317.0], [84.5, 4330.0], [84.6, 4334.0], [84.7, 4344.0], [84.8, 4345.0], [84.9, 4346.0], [85.0, 4346.0], [85.1, 4346.0], [85.2, 4347.0], [85.3, 4354.0], [85.4, 4362.0], [85.5, 4363.0], [85.6, 4364.0], [85.7, 4366.0], [85.8, 4368.0], [85.9, 4368.0], [86.0, 4368.0], [86.1, 4380.0], [86.2, 4381.0], [86.3, 4387.0], [86.4, 4414.0], [86.5, 4443.0], [86.6, 4457.0], [86.7, 4463.0], [86.8, 4466.0], [86.9, 4472.0], [87.0, 4472.0], [87.1, 4480.0], [87.2, 4491.0], [87.3, 4495.0], [87.4, 4500.0], [87.5, 4502.0], [87.6, 4504.0], [87.7, 4509.0], [87.8, 4511.0], [87.9, 4512.0], [88.0, 4512.0], [88.1, 4512.0], [88.2, 4515.0], [88.3, 4516.0], [88.4, 4517.0], [88.5, 4521.0], [88.6, 4524.0], [88.7, 4525.0], [88.8, 4529.0], [88.9, 4539.0], [89.0, 4539.0], [89.1, 4546.0], [89.2, 4550.0], [89.3, 4553.0], [89.4, 4556.0], [89.5, 4564.0], [89.6, 4569.0], [89.7, 4574.0], [89.8, 4575.0], [89.9, 4578.0], [90.0, 4578.0], [90.1, 4581.0], [90.2, 4582.0], [90.3, 4583.0], [90.4, 4588.0], [90.5, 4607.0], [90.6, 4609.0], [90.7, 4610.0], [90.8, 4613.0], [90.9, 4616.0], [91.0, 4616.0], [91.1, 4618.0], [91.2, 4623.0], [91.3, 4626.0], [91.4, 4632.0], [91.5, 4640.0], [91.6, 4640.0], [91.7, 4641.0], [91.8, 4641.0], [91.9, 4661.0], [92.0, 4661.0], [92.1, 4661.0], [92.2, 4672.0], [92.3, 4686.0], [92.4, 4687.0], [92.5, 4698.0], [92.6, 4699.0], [92.7, 4706.0], [92.8, 4712.0], [92.9, 4716.0], [93.0, 4716.0], [93.1, 4717.0], [93.2, 4718.0], [93.3, 4734.0], [93.4, 4735.0], [93.5, 4738.0], [93.6, 4741.0], [93.7, 4742.0], [93.8, 4742.0], [93.9, 4743.0], [94.0, 4743.0], [94.1, 4744.0], [94.2, 4744.0], [94.3, 4751.0], [94.4, 4759.0], [94.5, 4763.0], [94.6, 4766.0], [94.7, 4768.0], [94.8, 4776.0], [94.9, 4780.0], [95.0, 4780.0], [95.1, 4788.0], [95.2, 4788.0], [95.3, 4797.0], [95.4, 4798.0], [95.5, 4807.0], [95.6, 4813.0], [95.7, 4823.0], [95.8, 4833.0], [95.9, 4859.0], [96.0, 4859.0], [96.1, 4860.0], [96.2, 4889.0], [96.3, 4891.0], [96.4, 4891.0], [96.5, 4909.0], [96.6, 4911.0], [96.7, 4913.0], [96.8, 4915.0], [96.9, 4916.0], [97.0, 4916.0], [97.1, 4919.0], [97.2, 4920.0], [97.3, 4921.0], [97.4, 4923.0], [97.5, 4929.0], [97.6, 4930.0], [97.7, 4931.0], [97.8, 4936.0], [97.9, 4960.0], [98.0, 4960.0], [98.1, 4977.0], [98.2, 4992.0], [98.3, 5051.0], [98.4, 5059.0], [98.5, 5066.0], [98.6, 5163.0], [98.7, 5169.0], [98.8, 5171.0], [98.9, 5173.0], [99.0, 5173.0], [99.1, 5176.0], [99.2, 5180.0], [99.3, 5191.0], [99.4, 5193.0], [99.5, 5199.0], [99.6, 5207.0], [99.7, 5245.0], [99.8, 5453.0], [99.9, 6597.0], [100.0, 6597.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 179.0, "series": [{"data": [[0.0, 72.0], [600.0, 16.0], [700.0, 24.0], [800.0, 18.0], [900.0, 4.0], [1000.0, 1.0], [1100.0, 2.0], [1200.0, 2.0], [1300.0, 2.0], [1400.0, 2.0], [1500.0, 2.0], [1600.0, 6.0], [100.0, 34.0], [1700.0, 10.0], [1800.0, 3.0], [1900.0, 3.0], [2000.0, 1.0], [2100.0, 1.0], [2300.0, 1.0], [2400.0, 1.0], [3100.0, 1.0], [200.0, 15.0], [300.0, 32.0], [400.0, 31.0], [500.0, 16.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[0.0, 179.0], [600.0, 66.0], [700.0, 56.0], [800.0, 51.0], [900.0, 38.0], [1000.0, 23.0], [1100.0, 30.0], [1200.0, 17.0], [1300.0, 9.0], [1400.0, 13.0], [1500.0, 14.0], [1600.0, 16.0], [100.0, 100.0], [1700.0, 14.0], [1800.0, 13.0], [1900.0, 13.0], [2000.0, 5.0], [2100.0, 4.0], [2200.0, 7.0], [2300.0, 3.0], [2400.0, 1.0], [2500.0, 1.0], [2600.0, 4.0], [2800.0, 1.0], [2900.0, 2.0], [3000.0, 3.0], [3100.0, 1.0], [200.0, 56.0], [3200.0, 1.0], [3500.0, 1.0], [300.0, 51.0], [400.0, 48.0], [500.0, 59.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 109.0], [600.0, 48.0], [700.0, 42.0], [800.0, 24.0], [900.0, 21.0], [1000.0, 16.0], [1100.0, 7.0], [1200.0, 9.0], [1300.0, 5.0], [1400.0, 8.0], [1500.0, 8.0], [100.0, 146.0], [1700.0, 9.0], [1800.0, 4.0], [1900.0, 14.0], [2000.0, 24.0], [2100.0, 30.0], [2200.0, 34.0], [2300.0, 37.0], [2400.0, 26.0], [2500.0, 17.0], [2600.0, 8.0], [2700.0, 18.0], [2800.0, 9.0], [2900.0, 9.0], [3000.0, 11.0], [3100.0, 2.0], [3300.0, 4.0], [3200.0, 1.0], [200.0, 44.0], [3400.0, 2.0], [3700.0, 1.0], [3600.0, 2.0], [3800.0, 1.0], [3900.0, 1.0], [4000.0, 1.0], [4100.0, 6.0], [4200.0, 1.0], [4700.0, 1.0], [300.0, 33.0], [5200.0, 1.0], [400.0, 44.0], [500.0, 62.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 16.0], [600.0, 13.0], [700.0, 11.0], [800.0, 13.0], [900.0, 21.0], [1000.0, 24.0], [1100.0, 26.0], [1200.0, 34.0], [1300.0, 34.0], [1400.0, 29.0], [1500.0, 35.0], [1600.0, 13.0], [1700.0, 18.0], [1800.0, 10.0], [1900.0, 6.0], [2000.0, 13.0], [2100.0, 7.0], [2300.0, 8.0], [2200.0, 10.0], [2400.0, 3.0], [2500.0, 5.0], [2600.0, 4.0], [2800.0, 12.0], [2700.0, 5.0], [2900.0, 4.0], [3000.0, 1.0], [3100.0, 3.0], [3300.0, 5.0], [3200.0, 4.0], [3400.0, 16.0], [3500.0, 27.0], [3600.0, 7.0], [3700.0, 4.0], [3800.0, 17.0], [3900.0, 10.0], [4000.0, 6.0], [4300.0, 21.0], [4100.0, 8.0], [4200.0, 19.0], [4400.0, 9.0], [4500.0, 28.0], [4600.0, 20.0], [4800.0, 9.0], [4700.0, 25.0], [5100.0, 9.0], [4900.0, 16.0], [5000.0, 3.0], [5200.0, 2.0], [5400.0, 1.0], [6500.0, 1.0], [100.0, 74.0], [200.0, 91.0], [300.0, 51.0], [400.0, 22.0], [500.0, 17.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 6500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 837.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1249.0, "series": [{"data": [[0.0, 1249.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 914.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 837.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 151.91099999999975, "minX": 1.72983834E12, "maxY": 151.91099999999975, "series": [{"data": [[1.72983834E12, 151.91099999999975]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72983834E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 13.0, "minX": 2.0, "maxY": 4805.210526315789, "series": [{"data": [[8.0, 30.5], [147.0, 246.0], [175.0, 727.0], [12.0, 72.0], [206.0, 546.3353293413173], [213.0, 1458.6363636363635], [209.0, 1709.6666666666667], [212.0, 42.0], [211.0, 462.6], [210.0, 486.3333333333333], [221.0, 675.5], [216.0, 1258.3333333333333], [218.0, 50.75], [219.0, 1351.3333333333333], [14.0, 71.25], [15.0, 102.11111111111111], [16.0, 217.8], [17.0, 78.76923076923077], [18.0, 89.25925925925925], [19.0, 86.2857142857143], [20.0, 63.5], [21.0, 97.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[156.41000000000017, 532.4333333333335]], "isOverall": false, "label": "HTTP Request-2-Aggregated", "isController": false}, {"data": [[2.0, 19.0], [3.0, 38.0], [4.0, 30.0], [5.0, 30.5], [6.0, 48.0], [7.0, 29.0], [8.0, 54.8], [12.0, 66.71428571428572], [13.0, 66.0], [14.0, 139.0], [15.0, 96.0], [16.0, 94.4736842105263], [17.0, 84.7674418604651], [18.0, 93.88732394366195], [19.0, 93.69811320754717], [20.0, 110.00000000000001], [21.0, 146.75], [22.0, 345.0], [26.0, 2683.0], [30.0, 294.0], [40.0, 272.5], [124.0, 110.0], [135.0, 687.5], [133.0, 539.0], [131.0, 439.5], [136.0, 561.0], [151.0, 632.6666666666666], [150.0, 636.0], [149.0, 584.3333333333334], [148.0, 561.1176470588234], [147.0, 429.99999999999994], [152.0, 571.0], [159.0, 722.5], [155.0, 494.0], [156.0, 851.6666666666666], [158.0, 756.6666666666667], [166.0, 726.3333333333334], [160.0, 697.6666666666666], [161.0, 884.3333333333334], [167.0, 828.4285714285714], [162.0, 860.0], [163.0, 639.0], [172.0, 743.3333333333334], [168.0, 206.0], [173.0, 828.7777777777778], [175.0, 810.6666666666667], [174.0, 916.6666666666667], [176.0, 939.5], [188.0, 994.5], [190.0, 620.75], [191.0, 1290.5], [199.0, 674.0], [198.0, 1112.6666666666667], [192.0, 757.8], [206.0, 1153.8750000000007], [202.0, 1053.5], [200.0, 1374.0], [213.0, 937.6470588235294], [209.0, 892.8421052631579], [212.0, 620.75], [211.0, 1340.6666666666665], [210.0, 921.0], [208.0, 1115.5], [214.0, 1247.0], [215.0, 1300.0], [216.0, 964.6363636363637], [221.0, 684.927536231884], [219.0, 765.3924050632912], [220.0, 990.6538461538463], [218.0, 524.875], [223.0, 769.8461538461539], [222.0, 962.0], [217.0, 1165.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[151.41333333333353, 657.9855555555562]], "isOverall": false, "label": "HTTP Request-1-Aggregated", "isController": false}, {"data": [[2.0, 31.0], [3.0, 19.0], [4.0, 13.0], [5.0, 24.0], [6.0, 13.0], [7.0, 34.0], [8.0, 132.6], [12.0, 144.14285714285714], [13.0, 119.0], [14.0, 269.7142857142857], [15.0, 139.6315789473684], [16.0, 128.78947368421055], [17.0, 135.86046511627907], [18.0, 129.92957746478876], [19.0, 131.22641509433964], [20.0, 91.00000000000001], [21.0, 107.5], [22.0, 46.0], [26.0, 843.0], [30.0, 778.0], [40.0, 312.5], [124.0, 23.0], [135.0, 760.6666666666667], [133.0, 1154.0], [131.0, 695.0], [136.0, 1091.0], [151.0, 685.0], [150.0, 798.0], [149.0, 997.6666666666666], [148.0, 877.1764705882352], [147.0, 1795.4], [152.0, 1207.0], [159.0, 668.6666666666667], [155.0, 702.0], [156.0, 789.0], [158.0, 830.0], [166.0, 710.5], [160.0, 770.3333333333334], [161.0, 1250.0], [167.0, 1374.2857142857142], [162.0, 746.0], [163.0, 706.0], [172.0, 920.3333333333334], [168.0, 827.0], [173.0, 1197.888888888889], [175.0, 1934.3888888888887], [174.0, 691.6666666666666], [176.0, 726.0], [188.0, 1331.25], [190.0, 1756.5], [191.0, 1010.0], [199.0, 3233.0], [198.0, 1491.6666666666667], [192.0, 2325.4], [206.0, 2399.7916666666656], [202.0, 3349.0], [200.0, 2994.0], [213.0, 2027.352941176471], [209.0, 2287.0526315789475], [212.0, 2594.5], [211.0, 2626.333333333333], [210.0, 3101.8], [208.0, 967.5], [214.0, 2446.0], [215.0, 2150.0], [219.0, 648.0759493670886], [218.0, 1208.875], [216.0, 1349.8181818181818], [221.0, 548.8478260869565], [220.0, 1145.2692307692312], [223.0, 1534.3076923076922], [222.0, 1285.4], [217.0, 2438.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[151.41333333333353, 1061.4111111111104]], "isOverall": false, "label": "HTTP Request-0-Aggregated", "isController": false}, {"data": [[2.0, 50.0], [3.0, 57.0], [4.0, 44.0], [5.0, 55.0], [6.0, 61.5], [7.0, 63.33333333333333], [8.0, 209.4], [12.0, 231.85714285714286], [13.0, 185.0], [14.0, 449.85714285714283], [15.0, 291.2631578947368], [16.0, 301.6315789473684], [17.0, 254.20930232558143], [18.0, 264.60563380281695], [19.0, 263.622641509434], [20.0, 239.57142857142856], [21.0, 325.0], [22.0, 391.0], [26.0, 3527.0], [30.0, 1297.0], [40.0, 637.5], [124.0, 133.0], [135.0, 1477.0], [133.0, 1793.0], [131.0, 1135.0], [136.0, 1652.0], [151.0, 1479.0], [150.0, 1434.0], [149.0, 1675.6666666666667], [148.0, 1614.0588235294117], [147.0, 2349.0], [152.0, 1778.0], [159.0, 1507.8333333333335], [155.0, 1569.0], [156.0, 1837.6666666666667], [158.0, 1663.3333333333333], [166.0, 1509.3333333333333], [160.0, 1564.3333333333335], [161.0, 2134.6666666666665], [167.0, 2203.0], [162.0, 1606.0], [163.0, 1345.0], [172.0, 1664.0], [168.0, 1321.0], [173.0, 2027.2222222222222], [175.0, 2865.7777777777774], [174.0, 1773.6666666666667], [176.0, 1666.5], [188.0, 2326.0], [190.0, 2377.5], [191.0, 2300.5], [199.0, 4030.0], [198.0, 2857.0], [192.0, 3483.0], [206.0, 4242.333333333335], [202.0, 4403.5], [200.0, 4368.0], [213.0, 4329.705882352941], [209.0, 4805.210526315789], [212.0, 3259.25], [211.0, 4650.166666666667], [210.0, 4545.8], [208.0, 2083.5], [214.0, 4000.0], [215.0, 3450.0], [219.0, 1489.1898734177216], [218.0, 1797.5], [216.0, 2840.181818181818], [221.0, 1284.8333333333328], [220.0, 2159.3461538461543], [223.0, 2347.6153846153848], [222.0, 2248.0], [217.0, 3719.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[151.41333333333338, 1966.0899999999983]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 223.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 11210.0, "minX": 1.72983834E12, "maxY": 40260.0, "series": [{"data": [[1.72983834E12, 40260.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.72983834E12, 11210.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72983834E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 532.4333333333335, "minX": 1.72983834E12, "maxY": 1966.0899999999983, "series": [{"data": [[1.72983834E12, 532.4333333333335]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[1.72983834E12, 657.9855555555562]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.72983834E12, 1061.4111111111104]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.72983834E12, 1966.0899999999983]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72983834E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 527.4266666666664, "minX": 1.72983834E12, "maxY": 913.3611111111134, "series": [{"data": [[1.72983834E12, 527.4266666666664]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[1.72983834E12, 649.5288888888889]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.72983834E12, 913.3611111111134]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.72983834E12, 913.3611111111125]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72983834E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.72983834E12, "maxY": 178.77888888888918, "series": [{"data": [[1.72983834E12, 0.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[1.72983834E12, 0.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.72983834E12, 178.77888888888899]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.72983834E12, 178.77888888888918]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72983834E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 3.0, "minX": 1.72983834E12, "maxY": 6597.0, "series": [{"data": [[1.72983834E12, 6597.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.72983834E12, 3074.7000000000003]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.72983834E12, 4914.98]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.72983834E12, 4288.549999999998]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.72983834E12, 3.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.72983834E12, 671.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72983834E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 106.0, "minX": 63.0, "maxY": 2314.5, "series": [{"data": [[138.0, 140.0], [160.0, 127.0], [166.0, 113.0], [167.0, 124.0], [178.0, 2314.5], [195.0, 1975.0], [193.0, 106.0], [207.0, 1629.0], [211.0, 1190.0], [238.0, 657.5], [63.0, 322.0], [67.0, 2097.0], [263.0, 849.0], [299.0, 1109.0], [80.0, 359.5], [375.0, 1763.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 375.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 93.0, "minX": 63.0, "maxY": 1796.0, "series": [{"data": [[138.0, 107.5], [160.0, 107.0], [166.0, 97.0], [167.0, 103.0], [178.0, 1264.5], [195.0, 973.0], [193.0, 93.0], [207.0, 1432.0], [211.0, 1062.0], [238.0, 473.0], [63.0, 301.0], [67.0, 1796.0], [263.0, 650.0], [299.0, 741.0], [80.0, 359.5], [375.0, 1197.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 375.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.72983834E12, "maxY": 50.0, "series": [{"data": [[1.72983834E12, 50.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72983834E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 20.0, "minX": 1.72983834E12, "maxY": 30.0, "series": [{"data": [[1.72983834E12, 30.0]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.72983834E12, 20.0]], "isOverall": false, "label": "302", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72983834E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 5.0, "minX": 1.72983834E12, "maxY": 15.0, "series": [{"data": [[1.72983834E12, 15.0]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.72983834E12, 15.0]], "isOverall": false, "label": "HTTP Request-0-success", "isController": false}, {"data": [[1.72983834E12, 15.0]], "isOverall": false, "label": "HTTP Request-1-success", "isController": false}, {"data": [[1.72983834E12, 5.0]], "isOverall": false, "label": "HTTP Request-2-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72983834E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.72983834E12, "maxY": 50.0, "series": [{"data": [[1.72983834E12, 50.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72983834E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

