/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 3.0, "minX": 0.0, "maxY": 8540.0, "series": [{"data": [[0.0, 4.0], [0.1, 4.0], [0.2, 4.0], [0.3, 4.0], [0.4, 7.0], [0.5, 7.0], [0.6, 7.0], [0.7, 11.0], [0.8, 11.0], [0.9, 11.0], [1.0, 13.0], [1.1, 13.0], [1.2, 13.0], [1.3, 13.0], [1.4, 42.0], [1.5, 42.0], [1.6, 42.0], [1.7, 50.0], [1.8, 50.0], [1.9, 50.0], [2.0, 51.0], [2.1, 51.0], [2.2, 51.0], [2.3, 51.0], [2.4, 53.0], [2.5, 53.0], [2.6, 53.0], [2.7, 55.0], [2.8, 55.0], [2.9, 55.0], [3.0, 61.0], [3.1, 61.0], [3.2, 61.0], [3.3, 61.0], [3.4, 62.0], [3.5, 62.0], [3.6, 62.0], [3.7, 64.0], [3.8, 64.0], [3.9, 64.0], [4.0, 65.0], [4.1, 65.0], [4.2, 65.0], [4.3, 65.0], [4.4, 67.0], [4.5, 67.0], [4.6, 67.0], [4.7, 70.0], [4.8, 70.0], [4.9, 70.0], [5.0, 73.0], [5.1, 73.0], [5.2, 73.0], [5.3, 73.0], [5.4, 79.0], [5.5, 79.0], [5.6, 79.0], [5.7, 79.0], [5.8, 79.0], [5.9, 79.0], [6.0, 81.0], [6.1, 81.0], [6.2, 81.0], [6.3, 81.0], [6.4, 85.0], [6.5, 85.0], [6.6, 85.0], [6.7, 86.0], [6.8, 86.0], [6.9, 86.0], [7.0, 89.0], [7.1, 89.0], [7.2, 89.0], [7.3, 89.0], [7.4, 90.0], [7.5, 90.0], [7.6, 90.0], [7.7, 90.0], [7.8, 90.0], [7.9, 90.0], [8.0, 91.0], [8.1, 91.0], [8.2, 91.0], [8.3, 91.0], [8.4, 91.0], [8.5, 91.0], [8.6, 91.0], [8.7, 93.0], [8.8, 93.0], [8.9, 93.0], [9.0, 95.0], [9.1, 95.0], [9.2, 95.0], [9.3, 95.0], [9.4, 98.0], [9.5, 98.0], [9.6, 98.0], [9.7, 99.0], [9.8, 99.0], [9.9, 99.0], [10.0, 99.0], [10.1, 99.0], [10.2, 99.0], [10.3, 99.0], [10.4, 103.0], [10.5, 103.0], [10.6, 103.0], [10.7, 105.0], [10.8, 105.0], [10.9, 105.0], [11.0, 108.0], [11.1, 108.0], [11.2, 108.0], [11.3, 108.0], [11.4, 109.0], [11.5, 109.0], [11.6, 109.0], [11.7, 110.0], [11.8, 110.0], [11.9, 110.0], [12.0, 110.0], [12.1, 110.0], [12.2, 110.0], [12.3, 110.0], [12.4, 110.0], [12.5, 110.0], [12.6, 110.0], [12.7, 114.0], [12.8, 114.0], [12.9, 114.0], [13.0, 114.0], [13.1, 116.0], [13.2, 116.0], [13.3, 116.0], [13.4, 116.0], [13.5, 116.0], [13.6, 116.0], [13.7, 121.0], [13.8, 121.0], [13.9, 121.0], [14.0, 121.0], [14.1, 122.0], [14.2, 122.0], [14.3, 122.0], [14.4, 122.0], [14.5, 122.0], [14.6, 122.0], [14.7, 123.0], [14.8, 123.0], [14.9, 123.0], [15.0, 123.0], [15.1, 129.0], [15.2, 129.0], [15.3, 129.0], [15.4, 132.0], [15.5, 132.0], [15.6, 132.0], [15.7, 134.0], [15.8, 134.0], [15.9, 134.0], [16.0, 134.0], [16.1, 140.0], [16.2, 140.0], [16.3, 140.0], [16.4, 140.0], [16.5, 140.0], [16.6, 140.0], [16.7, 140.0], [16.8, 140.0], [16.9, 140.0], [17.0, 140.0], [17.1, 142.0], [17.2, 142.0], [17.3, 142.0], [17.4, 145.0], [17.5, 145.0], [17.6, 145.0], [17.7, 147.0], [17.8, 147.0], [17.9, 147.0], [18.0, 162.0], [18.1, 162.0], [18.2, 162.0], [18.3, 162.0], [18.4, 166.0], [18.5, 166.0], [18.6, 166.0], [18.7, 167.0], [18.8, 167.0], [18.9, 167.0], [19.0, 167.0], [19.1, 167.0], [19.2, 167.0], [19.3, 167.0], [19.4, 174.0], [19.5, 174.0], [19.6, 174.0], [19.7, 175.0], [19.8, 175.0], [19.9, 175.0], [20.0, 185.0], [20.1, 185.0], [20.2, 185.0], [20.3, 185.0], [20.4, 192.0], [20.5, 192.0], [20.6, 192.0], [20.7, 194.0], [20.8, 194.0], [20.9, 194.0], [21.0, 199.0], [21.1, 199.0], [21.2, 199.0], [21.3, 199.0], [21.4, 202.0], [21.5, 202.0], [21.6, 202.0], [21.7, 204.0], [21.8, 204.0], [21.9, 204.0], [22.0, 212.0], [22.1, 212.0], [22.2, 212.0], [22.3, 212.0], [22.4, 233.0], [22.5, 233.0], [22.6, 233.0], [22.7, 241.0], [22.8, 241.0], [22.9, 241.0], [23.0, 244.0], [23.1, 244.0], [23.2, 244.0], [23.3, 244.0], [23.4, 245.0], [23.5, 245.0], [23.6, 245.0], [23.7, 248.0], [23.8, 248.0], [23.9, 248.0], [24.0, 248.0], [24.1, 248.0], [24.2, 248.0], [24.3, 248.0], [24.4, 272.0], [24.5, 272.0], [24.6, 272.0], [24.7, 279.0], [24.8, 279.0], [24.9, 279.0], [25.0, 299.0], [25.1, 299.0], [25.2, 299.0], [25.3, 299.0], [25.4, 372.0], [25.5, 372.0], [25.6, 372.0], [25.7, 392.0], [25.8, 392.0], [25.9, 392.0], [26.0, 408.0], [26.1, 408.0], [26.2, 408.0], [26.3, 408.0], [26.4, 434.0], [26.5, 434.0], [26.6, 434.0], [26.7, 442.0], [26.8, 442.0], [26.9, 442.0], [27.0, 474.0], [27.1, 474.0], [27.2, 474.0], [27.3, 474.0], [27.4, 488.0], [27.5, 488.0], [27.6, 488.0], [27.7, 528.0], [27.8, 528.0], [27.9, 528.0], [28.0, 538.0], [28.1, 538.0], [28.2, 538.0], [28.3, 538.0], [28.4, 553.0], [28.5, 553.0], [28.6, 553.0], [28.7, 585.0], [28.8, 585.0], [28.9, 585.0], [29.0, 604.0], [29.1, 604.0], [29.2, 604.0], [29.3, 604.0], [29.4, 651.0], [29.5, 651.0], [29.6, 651.0], [29.7, 653.0], [29.8, 653.0], [29.9, 653.0], [30.0, 661.0], [30.1, 661.0], [30.2, 661.0], [30.3, 661.0], [30.4, 702.0], [30.5, 702.0], [30.6, 702.0], [30.7, 710.0], [30.8, 710.0], [30.9, 710.0], [31.0, 716.0], [31.1, 716.0], [31.2, 716.0], [31.3, 716.0], [31.4, 752.0], [31.5, 752.0], [31.6, 752.0], [31.7, 796.0], [31.8, 796.0], [31.9, 796.0], [32.0, 853.0], [32.1, 853.0], [32.2, 853.0], [32.3, 853.0], [32.4, 862.0], [32.5, 862.0], [32.6, 862.0], [32.7, 891.0], [32.8, 891.0], [32.9, 891.0], [33.0, 900.0], [33.1, 900.0], [33.2, 900.0], [33.3, 900.0], [33.4, 907.0], [33.5, 907.0], [33.6, 907.0], [33.7, 924.0], [33.8, 924.0], [33.9, 924.0], [34.0, 925.0], [34.1, 925.0], [34.2, 925.0], [34.3, 925.0], [34.4, 929.0], [34.5, 929.0], [34.6, 929.0], [34.7, 929.0], [34.8, 929.0], [34.9, 929.0], [35.0, 968.0], [35.1, 968.0], [35.2, 968.0], [35.3, 968.0], [35.4, 974.0], [35.5, 974.0], [35.6, 974.0], [35.7, 976.0], [35.8, 976.0], [35.9, 976.0], [36.0, 986.0], [36.1, 986.0], [36.2, 986.0], [36.3, 986.0], [36.4, 999.0], [36.5, 999.0], [36.6, 999.0], [36.7, 999.0], [36.8, 999.0], [36.9, 999.0], [37.0, 1004.0], [37.1, 1004.0], [37.2, 1004.0], [37.3, 1004.0], [37.4, 1009.0], [37.5, 1009.0], [37.6, 1009.0], [37.7, 1012.0], [37.8, 1012.0], [37.9, 1012.0], [38.0, 1014.0], [38.1, 1014.0], [38.2, 1014.0], [38.3, 1014.0], [38.4, 1017.0], [38.5, 1017.0], [38.6, 1017.0], [38.7, 1023.0], [38.8, 1023.0], [38.9, 1023.0], [39.0, 1024.0], [39.1, 1024.0], [39.2, 1024.0], [39.3, 1024.0], [39.4, 1029.0], [39.5, 1029.0], [39.6, 1029.0], [39.7, 1030.0], [39.8, 1030.0], [39.9, 1030.0], [40.0, 1031.0], [40.1, 1031.0], [40.2, 1031.0], [40.3, 1031.0], [40.4, 1035.0], [40.5, 1035.0], [40.6, 1035.0], [40.7, 1038.0], [40.8, 1038.0], [40.9, 1038.0], [41.0, 1038.0], [41.1, 1038.0], [41.2, 1038.0], [41.3, 1038.0], [41.4, 1039.0], [41.5, 1039.0], [41.6, 1039.0], [41.7, 1048.0], [41.8, 1048.0], [41.9, 1048.0], [42.0, 1048.0], [42.1, 1057.0], [42.2, 1057.0], [42.3, 1057.0], [42.4, 1075.0], [42.5, 1075.0], [42.6, 1075.0], [42.7, 1094.0], [42.8, 1094.0], [42.9, 1094.0], [43.0, 1094.0], [43.1, 1096.0], [43.2, 1096.0], [43.3, 1096.0], [43.4, 1111.0], [43.5, 1111.0], [43.6, 1111.0], [43.7, 1113.0], [43.8, 1113.0], [43.9, 1113.0], [44.0, 1113.0], [44.1, 1113.0], [44.2, 1113.0], [44.3, 1113.0], [44.4, 1128.0], [44.5, 1128.0], [44.6, 1128.0], [44.7, 1132.0], [44.8, 1132.0], [44.9, 1132.0], [45.0, 1132.0], [45.1, 1153.0], [45.2, 1153.0], [45.3, 1153.0], [45.4, 1164.0], [45.5, 1164.0], [45.6, 1164.0], [45.7, 1171.0], [45.8, 1171.0], [45.9, 1171.0], [46.0, 1171.0], [46.1, 1180.0], [46.2, 1180.0], [46.3, 1180.0], [46.4, 1181.0], [46.5, 1181.0], [46.6, 1181.0], [46.7, 1186.0], [46.8, 1186.0], [46.9, 1186.0], [47.0, 1186.0], [47.1, 1188.0], [47.2, 1188.0], [47.3, 1188.0], [47.4, 1236.0], [47.5, 1236.0], [47.6, 1236.0], [47.7, 1236.0], [47.8, 1236.0], [47.9, 1236.0], [48.0, 1236.0], [48.1, 1248.0], [48.2, 1248.0], [48.3, 1248.0], [48.4, 1249.0], [48.5, 1249.0], [48.6, 1249.0], [48.7, 1249.0], [48.8, 1249.0], [48.9, 1249.0], [49.0, 1249.0], [49.1, 1256.0], [49.2, 1256.0], [49.3, 1256.0], [49.4, 1257.0], [49.5, 1257.0], [49.6, 1257.0], [49.7, 1264.0], [49.8, 1264.0], [49.9, 1264.0], [50.0, 1264.0], [50.1, 1267.0], [50.2, 1267.0], [50.3, 1267.0], [50.4, 1270.0], [50.5, 1270.0], [50.6, 1270.0], [50.7, 1279.0], [50.8, 1279.0], [50.9, 1279.0], [51.0, 1279.0], [51.1, 1280.0], [51.2, 1280.0], [51.3, 1280.0], [51.4, 1282.0], [51.5, 1282.0], [51.6, 1282.0], [51.7, 1289.0], [51.8, 1289.0], [51.9, 1289.0], [52.0, 1289.0], [52.1, 1292.0], [52.2, 1292.0], [52.3, 1292.0], [52.4, 1293.0], [52.5, 1293.0], [52.6, 1293.0], [52.7, 1294.0], [52.8, 1294.0], [52.9, 1294.0], [53.0, 1294.0], [53.1, 1296.0], [53.2, 1296.0], [53.3, 1296.0], [53.4, 1299.0], [53.5, 1299.0], [53.6, 1299.0], [53.7, 1299.0], [53.8, 1299.0], [53.9, 1299.0], [54.0, 1299.0], [54.1, 1312.0], [54.2, 1312.0], [54.3, 1312.0], [54.4, 1314.0], [54.5, 1314.0], [54.6, 1314.0], [54.7, 1316.0], [54.8, 1316.0], [54.9, 1316.0], [55.0, 1316.0], [55.1, 1318.0], [55.2, 1318.0], [55.3, 1318.0], [55.4, 1319.0], [55.5, 1319.0], [55.6, 1319.0], [55.7, 1327.0], [55.8, 1327.0], [55.9, 1327.0], [56.0, 1327.0], [56.1, 1329.0], [56.2, 1329.0], [56.3, 1329.0], [56.4, 1335.0], [56.5, 1335.0], [56.6, 1335.0], [56.7, 1338.0], [56.8, 1338.0], [56.9, 1338.0], [57.0, 1338.0], [57.1, 1344.0], [57.2, 1344.0], [57.3, 1344.0], [57.4, 1346.0], [57.5, 1346.0], [57.6, 1346.0], [57.7, 1351.0], [57.8, 1351.0], [57.9, 1351.0], [58.0, 1351.0], [58.1, 1355.0], [58.2, 1355.0], [58.3, 1355.0], [58.4, 1359.0], [58.5, 1359.0], [58.6, 1359.0], [58.7, 1361.0], [58.8, 1361.0], [58.9, 1361.0], [59.0, 1361.0], [59.1, 1363.0], [59.2, 1363.0], [59.3, 1363.0], [59.4, 1367.0], [59.5, 1367.0], [59.6, 1367.0], [59.7, 1371.0], [59.8, 1371.0], [59.9, 1371.0], [60.0, 1371.0], [60.1, 1374.0], [60.2, 1374.0], [60.3, 1374.0], [60.4, 1380.0], [60.5, 1380.0], [60.6, 1380.0], [60.7, 1381.0], [60.8, 1381.0], [60.9, 1381.0], [61.0, 1381.0], [61.1, 1406.0], [61.2, 1406.0], [61.3, 1406.0], [61.4, 1407.0], [61.5, 1407.0], [61.6, 1407.0], [61.7, 1408.0], [61.8, 1408.0], [61.9, 1408.0], [62.0, 1408.0], [62.1, 1415.0], [62.2, 1415.0], [62.3, 1415.0], [62.4, 1417.0], [62.5, 1417.0], [62.6, 1417.0], [62.7, 1421.0], [62.8, 1421.0], [62.9, 1421.0], [63.0, 1421.0], [63.1, 1425.0], [63.2, 1425.0], [63.3, 1425.0], [63.4, 1435.0], [63.5, 1435.0], [63.6, 1435.0], [63.7, 1436.0], [63.8, 1436.0], [63.9, 1436.0], [64.0, 1436.0], [64.1, 1446.0], [64.2, 1446.0], [64.3, 1446.0], [64.4, 1451.0], [64.5, 1451.0], [64.6, 1451.0], [64.7, 1460.0], [64.8, 1460.0], [64.9, 1460.0], [65.0, 1460.0], [65.1, 1460.0], [65.2, 1460.0], [65.3, 1460.0], [65.4, 1463.0], [65.5, 1463.0], [65.6, 1463.0], [65.7, 1480.0], [65.8, 1480.0], [65.9, 1480.0], [66.0, 1480.0], [66.1, 1481.0], [66.2, 1481.0], [66.3, 1481.0], [66.4, 1487.0], [66.5, 1487.0], [66.6, 1487.0], [66.7, 1490.0], [66.8, 1490.0], [66.9, 1490.0], [67.0, 1490.0], [67.1, 1490.0], [67.2, 1490.0], [67.3, 1490.0], [67.4, 1494.0], [67.5, 1494.0], [67.6, 1494.0], [67.7, 1500.0], [67.8, 1500.0], [67.9, 1500.0], [68.0, 1500.0], [68.1, 1502.0], [68.2, 1502.0], [68.3, 1502.0], [68.4, 1502.0], [68.5, 1502.0], [68.6, 1502.0], [68.7, 1588.0], [68.8, 1588.0], [68.9, 1588.0], [69.0, 1588.0], [69.1, 1590.0], [69.2, 1590.0], [69.3, 1590.0], [69.4, 1593.0], [69.5, 1593.0], [69.6, 1593.0], [69.7, 1597.0], [69.8, 1597.0], [69.9, 1597.0], [70.0, 1597.0], [70.1, 1600.0], [70.2, 1600.0], [70.3, 1600.0], [70.4, 1608.0], [70.5, 1608.0], [70.6, 1608.0], [70.7, 1615.0], [70.8, 1615.0], [70.9, 1615.0], [71.0, 1615.0], [71.1, 1618.0], [71.2, 1618.0], [71.3, 1618.0], [71.4, 1628.0], [71.5, 1628.0], [71.6, 1628.0], [71.7, 1637.0], [71.8, 1637.0], [71.9, 1637.0], [72.0, 1637.0], [72.1, 1638.0], [72.2, 1638.0], [72.3, 1638.0], [72.4, 1647.0], [72.5, 1647.0], [72.6, 1647.0], [72.7, 1658.0], [72.8, 1658.0], [72.9, 1658.0], [73.0, 1658.0], [73.1, 1664.0], [73.2, 1664.0], [73.3, 1664.0], [73.4, 1668.0], [73.5, 1668.0], [73.6, 1668.0], [73.7, 1669.0], [73.8, 1669.0], [73.9, 1669.0], [74.0, 1669.0], [74.1, 1678.0], [74.2, 1678.0], [74.3, 1678.0], [74.4, 1680.0], [74.5, 1680.0], [74.6, 1680.0], [74.7, 1705.0], [74.8, 1705.0], [74.9, 1705.0], [75.0, 1705.0], [75.1, 1712.0], [75.2, 1712.0], [75.3, 1712.0], [75.4, 1714.0], [75.5, 1714.0], [75.6, 1714.0], [75.7, 1719.0], [75.8, 1719.0], [75.9, 1719.0], [76.0, 1739.0], [76.1, 1739.0], [76.2, 1739.0], [76.3, 1739.0], [76.4, 1747.0], [76.5, 1747.0], [76.6, 1747.0], [76.7, 1758.0], [76.8, 1758.0], [76.9, 1758.0], [77.0, 1763.0], [77.1, 1763.0], [77.2, 1763.0], [77.3, 1763.0], [77.4, 1764.0], [77.5, 1764.0], [77.6, 1764.0], [77.7, 1769.0], [77.8, 1769.0], [77.9, 1769.0], [78.0, 1790.0], [78.1, 1790.0], [78.2, 1790.0], [78.3, 1790.0], [78.4, 1797.0], [78.5, 1797.0], [78.6, 1797.0], [78.7, 1800.0], [78.8, 1800.0], [78.9, 1800.0], [79.0, 1801.0], [79.1, 1801.0], [79.2, 1801.0], [79.3, 1801.0], [79.4, 1803.0], [79.5, 1803.0], [79.6, 1803.0], [79.7, 1813.0], [79.8, 1813.0], [79.9, 1813.0], [80.0, 1849.0], [80.1, 1849.0], [80.2, 1849.0], [80.3, 1849.0], [80.4, 1851.0], [80.5, 1851.0], [80.6, 1851.0], [80.7, 1851.0], [80.8, 1851.0], [80.9, 1851.0], [81.0, 1865.0], [81.1, 1865.0], [81.2, 1865.0], [81.3, 1865.0], [81.4, 1872.0], [81.5, 1872.0], [81.6, 1872.0], [81.7, 1896.0], [81.8, 1896.0], [81.9, 1896.0], [82.0, 1913.0], [82.1, 1913.0], [82.2, 1913.0], [82.3, 1913.0], [82.4, 1964.0], [82.5, 1964.0], [82.6, 1964.0], [82.7, 2004.0], [82.8, 2004.0], [82.9, 2004.0], [83.0, 2019.0], [83.1, 2019.0], [83.2, 2019.0], [83.3, 2019.0], [83.4, 2036.0], [83.5, 2036.0], [83.6, 2036.0], [83.7, 2057.0], [83.8, 2057.0], [83.9, 2057.0], [84.0, 2081.0], [84.1, 2081.0], [84.2, 2081.0], [84.3, 2081.0], [84.4, 2090.0], [84.5, 2090.0], [84.6, 2090.0], [84.7, 2090.0], [84.8, 2090.0], [84.9, 2090.0], [85.0, 2093.0], [85.1, 2093.0], [85.2, 2093.0], [85.3, 2093.0], [85.4, 2094.0], [85.5, 2094.0], [85.6, 2094.0], [85.7, 2103.0], [85.8, 2103.0], [85.9, 2103.0], [86.0, 2105.0], [86.1, 2105.0], [86.2, 2105.0], [86.3, 2105.0], [86.4, 2109.0], [86.5, 2109.0], [86.6, 2109.0], [86.7, 2110.0], [86.8, 2110.0], [86.9, 2110.0], [87.0, 2136.0], [87.1, 2136.0], [87.2, 2136.0], [87.3, 2136.0], [87.4, 2138.0], [87.5, 2138.0], [87.6, 2138.0], [87.7, 2144.0], [87.8, 2144.0], [87.9, 2144.0], [88.0, 2165.0], [88.1, 2165.0], [88.2, 2165.0], [88.3, 2165.0], [88.4, 2165.0], [88.5, 2165.0], [88.6, 2165.0], [88.7, 2166.0], [88.8, 2166.0], [88.9, 2166.0], [89.0, 2177.0], [89.1, 2177.0], [89.2, 2177.0], [89.3, 2177.0], [89.4, 2181.0], [89.5, 2181.0], [89.6, 2181.0], [89.7, 2190.0], [89.8, 2190.0], [89.9, 2190.0], [90.0, 2199.0], [90.1, 2199.0], [90.2, 2199.0], [90.3, 2199.0], [90.4, 2209.0], [90.5, 2209.0], [90.6, 2209.0], [90.7, 2229.0], [90.8, 2229.0], [90.9, 2229.0], [91.0, 2259.0], [91.1, 2259.0], [91.2, 2259.0], [91.3, 2259.0], [91.4, 2276.0], [91.5, 2276.0], [91.6, 2276.0], [91.7, 2285.0], [91.8, 2285.0], [91.9, 2285.0], [92.0, 2292.0], [92.1, 2292.0], [92.2, 2292.0], [92.3, 2292.0], [92.4, 2302.0], [92.5, 2302.0], [92.6, 2302.0], [92.7, 2308.0], [92.8, 2308.0], [92.9, 2308.0], [93.0, 2317.0], [93.1, 2317.0], [93.2, 2317.0], [93.3, 2317.0], [93.4, 2324.0], [93.5, 2324.0], [93.6, 2324.0], [93.7, 2331.0], [93.8, 2331.0], [93.9, 2331.0], [94.0, 2337.0], [94.1, 2337.0], [94.2, 2337.0], [94.3, 2337.0], [94.4, 2341.0], [94.5, 2341.0], [94.6, 2341.0], [94.7, 2344.0], [94.8, 2344.0], [94.9, 2344.0], [95.0, 2350.0], [95.1, 2350.0], [95.2, 2350.0], [95.3, 2350.0], [95.4, 2351.0], [95.5, 2351.0], [95.6, 2351.0], [95.7, 2400.0], [95.8, 2400.0], [95.9, 2400.0], [96.0, 2425.0], [96.1, 2425.0], [96.2, 2425.0], [96.3, 2425.0], [96.4, 2445.0], [96.5, 2445.0], [96.6, 2445.0], [96.7, 2451.0], [96.8, 2451.0], [96.9, 2451.0], [97.0, 2474.0], [97.1, 2474.0], [97.2, 2474.0], [97.3, 2474.0], [97.4, 2489.0], [97.5, 2489.0], [97.6, 2489.0], [97.7, 2547.0], [97.8, 2547.0], [97.9, 2547.0], [98.0, 2593.0], [98.1, 2593.0], [98.2, 2593.0], [98.3, 2593.0], [98.4, 2600.0], [98.5, 2600.0], [98.6, 2600.0], [98.7, 2638.0], [98.8, 2638.0], [98.9, 2638.0], [99.0, 2740.0], [99.1, 2740.0], [99.2, 2740.0], [99.3, 2740.0], [99.4, 2776.0], [99.5, 2776.0], [99.6, 2776.0], [99.7, 3753.0], [99.8, 3753.0], [99.9, 3753.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[0.0, 3.0], [0.1, 3.0], [0.2, 4.0], [0.3, 8.0], [0.4, 10.0], [0.5, 18.0], [0.6, 20.0], [0.7, 20.0], [0.8, 20.0], [0.9, 24.0], [1.0, 25.0], [1.1, 25.0], [1.2, 26.0], [1.3, 28.0], [1.4, 28.0], [1.5, 31.0], [1.6, 32.0], [1.7, 33.0], [1.8, 36.0], [1.9, 37.0], [2.0, 37.0], [2.1, 39.0], [2.2, 41.0], [2.3, 41.0], [2.4, 45.0], [2.5, 45.0], [2.6, 49.0], [2.7, 49.0], [2.8, 50.0], [2.9, 50.0], [3.0, 50.0], [3.1, 50.0], [3.2, 50.0], [3.3, 51.0], [3.4, 56.0], [3.5, 56.0], [3.6, 56.0], [3.7, 57.0], [3.8, 57.0], [3.9, 57.0], [4.0, 57.0], [4.1, 57.0], [4.2, 59.0], [4.3, 59.0], [4.4, 60.0], [4.5, 61.0], [4.6, 62.0], [4.7, 62.0], [4.8, 63.0], [4.9, 64.0], [5.0, 65.0], [5.1, 65.0], [5.2, 67.0], [5.3, 67.0], [5.4, 67.0], [5.5, 67.0], [5.6, 68.0], [5.7, 68.0], [5.8, 68.0], [5.9, 69.0], [6.0, 69.0], [6.1, 69.0], [6.2, 69.0], [6.3, 69.0], [6.4, 70.0], [6.5, 70.0], [6.6, 70.0], [6.7, 70.0], [6.8, 72.0], [6.9, 73.0], [7.0, 74.0], [7.1, 74.0], [7.2, 75.0], [7.3, 75.0], [7.4, 75.0], [7.5, 75.0], [7.6, 76.0], [7.7, 78.0], [7.8, 78.0], [7.9, 79.0], [8.0, 79.0], [8.1, 79.0], [8.2, 79.0], [8.3, 80.0], [8.4, 80.0], [8.5, 80.0], [8.6, 81.0], [8.7, 81.0], [8.8, 82.0], [8.9, 84.0], [9.0, 85.0], [9.1, 85.0], [9.2, 86.0], [9.3, 86.0], [9.4, 87.0], [9.5, 87.0], [9.6, 88.0], [9.7, 88.0], [9.8, 89.0], [9.9, 91.0], [10.0, 91.0], [10.1, 91.0], [10.2, 91.0], [10.3, 93.0], [10.4, 94.0], [10.5, 95.0], [10.6, 95.0], [10.7, 96.0], [10.8, 96.0], [10.9, 96.0], [11.0, 97.0], [11.1, 97.0], [11.2, 98.0], [11.3, 98.0], [11.4, 102.0], [11.5, 102.0], [11.6, 102.0], [11.7, 102.0], [11.8, 103.0], [11.9, 104.0], [12.0, 104.0], [12.1, 104.0], [12.2, 105.0], [12.3, 106.0], [12.4, 106.0], [12.5, 106.0], [12.6, 107.0], [12.7, 109.0], [12.8, 109.0], [12.9, 110.0], [13.0, 110.0], [13.1, 110.0], [13.2, 110.0], [13.3, 111.0], [13.4, 111.0], [13.5, 111.0], [13.6, 111.0], [13.7, 112.0], [13.8, 112.0], [13.9, 112.0], [14.0, 113.0], [14.1, 113.0], [14.2, 114.0], [14.3, 115.0], [14.4, 115.0], [14.5, 116.0], [14.6, 116.0], [14.7, 116.0], [14.8, 117.0], [14.9, 117.0], [15.0, 117.0], [15.1, 117.0], [15.2, 118.0], [15.3, 119.0], [15.4, 119.0], [15.5, 119.0], [15.6, 121.0], [15.7, 121.0], [15.8, 124.0], [15.9, 124.0], [16.0, 124.0], [16.1, 124.0], [16.2, 125.0], [16.3, 125.0], [16.4, 126.0], [16.5, 126.0], [16.6, 126.0], [16.7, 126.0], [16.8, 127.0], [16.9, 127.0], [17.0, 127.0], [17.1, 127.0], [17.2, 129.0], [17.3, 130.0], [17.4, 132.0], [17.5, 132.0], [17.6, 135.0], [17.7, 137.0], [17.8, 137.0], [17.9, 137.0], [18.0, 137.0], [18.1, 137.0], [18.2, 139.0], [18.3, 139.0], [18.4, 141.0], [18.5, 143.0], [18.6, 143.0], [18.7, 144.0], [18.8, 144.0], [18.9, 144.0], [19.0, 144.0], [19.1, 144.0], [19.2, 145.0], [19.3, 145.0], [19.4, 146.0], [19.5, 146.0], [19.6, 148.0], [19.7, 149.0], [19.8, 150.0], [19.9, 151.0], [20.0, 152.0], [20.1, 152.0], [20.2, 152.0], [20.3, 153.0], [20.4, 153.0], [20.5, 155.0], [20.6, 156.0], [20.7, 158.0], [20.8, 160.0], [20.9, 160.0], [21.0, 162.0], [21.1, 162.0], [21.2, 162.0], [21.3, 163.0], [21.4, 163.0], [21.5, 163.0], [21.6, 165.0], [21.7, 165.0], [21.8, 165.0], [21.9, 170.0], [22.0, 171.0], [22.1, 171.0], [22.2, 171.0], [22.3, 172.0], [22.4, 173.0], [22.5, 173.0], [22.6, 173.0], [22.7, 173.0], [22.8, 176.0], [22.9, 176.0], [23.0, 177.0], [23.1, 177.0], [23.2, 178.0], [23.3, 178.0], [23.4, 180.0], [23.5, 181.0], [23.6, 181.0], [23.7, 184.0], [23.8, 186.0], [23.9, 187.0], [24.0, 188.0], [24.1, 188.0], [24.2, 189.0], [24.3, 189.0], [24.4, 190.0], [24.5, 191.0], [24.6, 192.0], [24.7, 192.0], [24.8, 196.0], [24.9, 196.0], [25.0, 197.0], [25.1, 197.0], [25.2, 200.0], [25.3, 203.0], [25.4, 207.0], [25.5, 213.0], [25.6, 219.0], [25.7, 219.0], [25.8, 222.0], [25.9, 223.0], [26.0, 223.0], [26.1, 223.0], [26.2, 224.0], [26.3, 224.0], [26.4, 224.0], [26.5, 226.0], [26.6, 228.0], [26.7, 228.0], [26.8, 230.0], [26.9, 230.0], [27.0, 230.0], [27.1, 230.0], [27.2, 236.0], [27.3, 242.0], [27.4, 245.0], [27.5, 245.0], [27.6, 246.0], [27.7, 246.0], [27.8, 247.0], [27.9, 249.0], [28.0, 250.0], [28.1, 250.0], [28.2, 257.0], [28.3, 259.0], [28.4, 265.0], [28.5, 265.0], [28.6, 268.0], [28.7, 269.0], [28.8, 270.0], [28.9, 270.0], [29.0, 274.0], [29.1, 274.0], [29.2, 278.0], [29.3, 278.0], [29.4, 279.0], [29.5, 287.0], [29.6, 291.0], [29.7, 298.0], [29.8, 302.0], [29.9, 302.0], [30.0, 304.0], [30.1, 304.0], [30.2, 313.0], [30.3, 314.0], [30.4, 314.0], [30.5, 316.0], [30.6, 322.0], [30.7, 324.0], [30.8, 331.0], [30.9, 331.0], [31.0, 333.0], [31.1, 333.0], [31.2, 333.0], [31.3, 333.0], [31.4, 334.0], [31.5, 338.0], [31.6, 339.0], [31.7, 340.0], [31.8, 348.0], [31.9, 356.0], [32.0, 356.0], [32.1, 356.0], [32.2, 359.0], [32.3, 365.0], [32.4, 366.0], [32.5, 369.0], [32.6, 370.0], [32.7, 373.0], [32.8, 376.0], [32.9, 380.0], [33.0, 383.0], [33.1, 383.0], [33.2, 389.0], [33.3, 390.0], [33.4, 390.0], [33.5, 406.0], [33.6, 408.0], [33.7, 414.0], [33.8, 420.0], [33.9, 422.0], [34.0, 422.0], [34.1, 422.0], [34.2, 425.0], [34.3, 426.0], [34.4, 433.0], [34.5, 435.0], [34.6, 439.0], [34.7, 441.0], [34.8, 442.0], [34.9, 444.0], [35.0, 444.0], [35.1, 445.0], [35.2, 446.0], [35.3, 447.0], [35.4, 456.0], [35.5, 457.0], [35.6, 458.0], [35.7, 458.0], [35.8, 470.0], [35.9, 474.0], [36.0, 474.0], [36.1, 475.0], [36.2, 477.0], [36.3, 481.0], [36.4, 483.0], [36.5, 489.0], [36.6, 492.0], [36.7, 493.0], [36.8, 498.0], [36.9, 502.0], [37.0, 502.0], [37.1, 503.0], [37.2, 504.0], [37.3, 508.0], [37.4, 509.0], [37.5, 514.0], [37.6, 515.0], [37.7, 523.0], [37.8, 525.0], [37.9, 527.0], [38.0, 527.0], [38.1, 527.0], [38.2, 529.0], [38.3, 531.0], [38.4, 534.0], [38.5, 535.0], [38.6, 541.0], [38.7, 546.0], [38.8, 546.0], [38.9, 548.0], [39.0, 548.0], [39.1, 549.0], [39.2, 550.0], [39.3, 551.0], [39.4, 551.0], [39.5, 558.0], [39.6, 560.0], [39.7, 565.0], [39.8, 570.0], [39.9, 570.0], [40.0, 570.0], [40.1, 574.0], [40.2, 575.0], [40.3, 584.0], [40.4, 587.0], [40.5, 587.0], [40.6, 593.0], [40.7, 598.0], [40.8, 602.0], [40.9, 606.0], [41.0, 606.0], [41.1, 608.0], [41.2, 610.0], [41.3, 613.0], [41.4, 623.0], [41.5, 626.0], [41.6, 627.0], [41.7, 628.0], [41.8, 628.0], [41.9, 631.0], [42.0, 631.0], [42.1, 631.0], [42.2, 632.0], [42.3, 637.0], [42.4, 645.0], [42.5, 648.0], [42.6, 653.0], [42.7, 656.0], [42.8, 658.0], [42.9, 663.0], [43.0, 663.0], [43.1, 668.0], [43.2, 668.0], [43.3, 674.0], [43.4, 675.0], [43.5, 678.0], [43.6, 680.0], [43.7, 681.0], [43.8, 687.0], [43.9, 688.0], [44.0, 688.0], [44.1, 689.0], [44.2, 689.0], [44.3, 691.0], [44.4, 691.0], [44.5, 692.0], [44.6, 695.0], [44.7, 699.0], [44.8, 701.0], [44.9, 702.0], [45.0, 702.0], [45.1, 704.0], [45.2, 707.0], [45.3, 707.0], [45.4, 709.0], [45.5, 716.0], [45.6, 718.0], [45.7, 718.0], [45.8, 724.0], [45.9, 724.0], [46.0, 724.0], [46.1, 726.0], [46.2, 734.0], [46.3, 735.0], [46.4, 739.0], [46.5, 739.0], [46.6, 740.0], [46.7, 743.0], [46.8, 750.0], [46.9, 753.0], [47.0, 753.0], [47.1, 755.0], [47.2, 757.0], [47.3, 759.0], [47.4, 760.0], [47.5, 761.0], [47.6, 762.0], [47.7, 771.0], [47.8, 777.0], [47.9, 778.0], [48.0, 778.0], [48.1, 783.0], [48.2, 784.0], [48.3, 786.0], [48.4, 789.0], [48.5, 792.0], [48.6, 792.0], [48.7, 795.0], [48.8, 806.0], [48.9, 810.0], [49.0, 810.0], [49.1, 810.0], [49.2, 811.0], [49.3, 822.0], [49.4, 823.0], [49.5, 825.0], [49.6, 832.0], [49.7, 839.0], [49.8, 845.0], [49.9, 849.0], [50.0, 849.0], [50.1, 855.0], [50.2, 856.0], [50.3, 858.0], [50.4, 866.0], [50.5, 867.0], [50.6, 876.0], [50.7, 876.0], [50.8, 878.0], [50.9, 879.0], [51.0, 879.0], [51.1, 881.0], [51.2, 884.0], [51.3, 887.0], [51.4, 891.0], [51.5, 892.0], [51.6, 896.0], [51.7, 898.0], [51.8, 902.0], [51.9, 905.0], [52.0, 905.0], [52.1, 911.0], [52.2, 916.0], [52.3, 926.0], [52.4, 928.0], [52.5, 929.0], [52.6, 930.0], [52.7, 931.0], [52.8, 935.0], [52.9, 939.0], [53.0, 939.0], [53.1, 941.0], [53.2, 943.0], [53.3, 950.0], [53.4, 952.0], [53.5, 953.0], [53.6, 955.0], [53.7, 961.0], [53.8, 961.0], [53.9, 972.0], [54.0, 972.0], [54.1, 973.0], [54.2, 975.0], [54.3, 977.0], [54.4, 978.0], [54.5, 991.0], [54.6, 998.0], [54.7, 999.0], [54.8, 1006.0], [54.9, 1006.0], [55.0, 1006.0], [55.1, 1006.0], [55.2, 1009.0], [55.3, 1009.0], [55.4, 1012.0], [55.5, 1015.0], [55.6, 1025.0], [55.7, 1036.0], [55.8, 1036.0], [55.9, 1042.0], [56.0, 1042.0], [56.1, 1044.0], [56.2, 1045.0], [56.3, 1049.0], [56.4, 1051.0], [56.5, 1057.0], [56.6, 1065.0], [56.7, 1068.0], [56.8, 1072.0], [56.9, 1078.0], [57.0, 1078.0], [57.1, 1088.0], [57.2, 1092.0], [57.3, 1097.0], [57.4, 1102.0], [57.5, 1104.0], [57.6, 1109.0], [57.7, 1110.0], [57.8, 1116.0], [57.9, 1118.0], [58.0, 1118.0], [58.1, 1124.0], [58.2, 1130.0], [58.3, 1131.0], [58.4, 1136.0], [58.5, 1142.0], [58.6, 1143.0], [58.7, 1154.0], [58.8, 1158.0], [58.9, 1163.0], [59.0, 1163.0], [59.1, 1165.0], [59.2, 1165.0], [59.3, 1169.0], [59.4, 1173.0], [59.5, 1179.0], [59.6, 1179.0], [59.7, 1179.0], [59.8, 1183.0], [59.9, 1185.0], [60.0, 1185.0], [60.1, 1188.0], [60.2, 1195.0], [60.3, 1195.0], [60.4, 1196.0], [60.5, 1206.0], [60.6, 1220.0], [60.7, 1230.0], [60.8, 1231.0], [60.9, 1235.0], [61.0, 1235.0], [61.1, 1237.0], [61.2, 1244.0], [61.3, 1244.0], [61.4, 1245.0], [61.5, 1247.0], [61.6, 1254.0], [61.7, 1255.0], [61.8, 1256.0], [61.9, 1257.0], [62.0, 1257.0], [62.1, 1259.0], [62.2, 1259.0], [62.3, 1272.0], [62.4, 1279.0], [62.5, 1281.0], [62.6, 1281.0], [62.7, 1282.0], [62.8, 1286.0], [62.9, 1286.0], [63.0, 1286.0], [63.1, 1290.0], [63.2, 1291.0], [63.3, 1295.0], [63.4, 1298.0], [63.5, 1298.0], [63.6, 1300.0], [63.7, 1319.0], [63.8, 1320.0], [63.9, 1321.0], [64.0, 1321.0], [64.1, 1325.0], [64.2, 1329.0], [64.3, 1331.0], [64.4, 1331.0], [64.5, 1333.0], [64.6, 1334.0], [64.7, 1339.0], [64.8, 1350.0], [64.9, 1355.0], [65.0, 1355.0], [65.1, 1357.0], [65.2, 1360.0], [65.3, 1360.0], [65.4, 1361.0], [65.5, 1366.0], [65.6, 1368.0], [65.7, 1373.0], [65.8, 1376.0], [65.9, 1377.0], [66.0, 1377.0], [66.1, 1378.0], [66.2, 1382.0], [66.3, 1385.0], [66.4, 1390.0], [66.5, 1395.0], [66.6, 1395.0], [66.7, 1397.0], [66.8, 1397.0], [66.9, 1408.0], [67.0, 1408.0], [67.1, 1408.0], [67.2, 1409.0], [67.3, 1419.0], [67.4, 1419.0], [67.5, 1422.0], [67.6, 1423.0], [67.7, 1425.0], [67.8, 1426.0], [67.9, 1437.0], [68.0, 1437.0], [68.1, 1437.0], [68.2, 1438.0], [68.3, 1440.0], [68.4, 1445.0], [68.5, 1446.0], [68.6, 1454.0], [68.7, 1458.0], [68.8, 1459.0], [68.9, 1460.0], [69.0, 1460.0], [69.1, 1464.0], [69.2, 1469.0], [69.3, 1470.0], [69.4, 1471.0], [69.5, 1472.0], [69.6, 1487.0], [69.7, 1487.0], [69.8, 1488.0], [69.9, 1489.0], [70.0, 1489.0], [70.1, 1493.0], [70.2, 1497.0], [70.3, 1497.0], [70.4, 1507.0], [70.5, 1508.0], [70.6, 1509.0], [70.7, 1511.0], [70.8, 1512.0], [70.9, 1513.0], [71.0, 1513.0], [71.1, 1516.0], [71.2, 1527.0], [71.3, 1529.0], [71.4, 1533.0], [71.5, 1533.0], [71.6, 1534.0], [71.7, 1538.0], [71.8, 1541.0], [71.9, 1546.0], [72.0, 1546.0], [72.1, 1547.0], [72.2, 1547.0], [72.3, 1548.0], [72.4, 1552.0], [72.5, 1568.0], [72.6, 1570.0], [72.7, 1576.0], [72.8, 1579.0], [72.9, 1594.0], [73.0, 1594.0], [73.1, 1594.0], [73.2, 1601.0], [73.3, 1602.0], [73.4, 1604.0], [73.5, 1609.0], [73.6, 1611.0], [73.7, 1611.0], [73.8, 1615.0], [73.9, 1615.0], [74.0, 1615.0], [74.1, 1628.0], [74.2, 1630.0], [74.3, 1632.0], [74.4, 1636.0], [74.5, 1637.0], [74.6, 1648.0], [74.7, 1649.0], [74.8, 1655.0], [74.9, 1660.0], [75.0, 1660.0], [75.1, 1662.0], [75.2, 1672.0], [75.3, 1673.0], [75.4, 1678.0], [75.5, 1684.0], [75.6, 1688.0], [75.7, 1700.0], [75.8, 1701.0], [75.9, 1709.0], [76.0, 1709.0], [76.1, 1710.0], [76.2, 1722.0], [76.3, 1724.0], [76.4, 1732.0], [76.5, 1734.0], [76.6, 1736.0], [76.7, 1741.0], [76.8, 1744.0], [76.9, 1745.0], [77.0, 1745.0], [77.1, 1746.0], [77.2, 1750.0], [77.3, 1753.0], [77.4, 1760.0], [77.5, 1761.0], [77.6, 1768.0], [77.7, 1768.0], [77.8, 1769.0], [77.9, 1781.0], [78.0, 1781.0], [78.1, 1783.0], [78.2, 1783.0], [78.3, 1789.0], [78.4, 1790.0], [78.5, 1792.0], [78.6, 1794.0], [78.7, 1794.0], [78.8, 1794.0], [78.9, 1794.0], [79.0, 1794.0], [79.1, 1795.0], [79.2, 1795.0], [79.3, 1808.0], [79.4, 1810.0], [79.5, 1810.0], [79.6, 1816.0], [79.7, 1825.0], [79.8, 1831.0], [79.9, 1831.0], [80.0, 1831.0], [80.1, 1837.0], [80.2, 1843.0], [80.3, 1847.0], [80.4, 1848.0], [80.5, 1854.0], [80.6, 1863.0], [80.7, 1883.0], [80.8, 1890.0], [80.9, 1946.0], [81.0, 1946.0], [81.1, 1947.0], [81.2, 1952.0], [81.3, 1959.0], [81.4, 1960.0], [81.5, 1963.0], [81.6, 1989.0], [81.7, 2005.0], [81.8, 2008.0], [81.9, 2025.0], [82.0, 2025.0], [82.1, 2028.0], [82.2, 2029.0], [82.3, 2031.0], [82.4, 2049.0], [82.5, 2050.0], [82.6, 2070.0], [82.7, 2076.0], [82.8, 2079.0], [82.9, 2083.0], [83.0, 2083.0], [83.1, 2088.0], [83.2, 2095.0], [83.3, 2097.0], [83.4, 2100.0], [83.5, 2101.0], [83.6, 2106.0], [83.7, 2120.0], [83.8, 2128.0], [83.9, 2172.0], [84.0, 2172.0], [84.1, 2177.0], [84.2, 2184.0], [84.3, 2188.0], [84.4, 2188.0], [84.5, 2195.0], [84.6, 2200.0], [84.7, 2223.0], [84.8, 2233.0], [84.9, 2246.0], [85.0, 2246.0], [85.1, 2250.0], [85.2, 2254.0], [85.3, 2257.0], [85.4, 2266.0], [85.5, 2267.0], [85.6, 2282.0], [85.7, 2293.0], [85.8, 2305.0], [85.9, 2318.0], [86.0, 2318.0], [86.1, 2320.0], [86.2, 2349.0], [86.3, 2352.0], [86.4, 2380.0], [86.5, 2381.0], [86.6, 2390.0], [86.7, 2393.0], [86.8, 2415.0], [86.9, 2421.0], [87.0, 2421.0], [87.1, 2444.0], [87.2, 2449.0], [87.3, 2449.0], [87.4, 2463.0], [87.5, 2472.0], [87.6, 2474.0], [87.7, 2484.0], [87.8, 2485.0], [87.9, 2508.0], [88.0, 2508.0], [88.1, 2512.0], [88.2, 2518.0], [88.3, 2519.0], [88.4, 2537.0], [88.5, 2588.0], [88.6, 2595.0], [88.7, 2599.0], [88.8, 2604.0], [88.9, 2631.0], [89.0, 2631.0], [89.1, 2643.0], [89.2, 2666.0], [89.3, 2669.0], [89.4, 2692.0], [89.5, 2697.0], [89.6, 2713.0], [89.7, 2735.0], [89.8, 2737.0], [89.9, 2742.0], [90.0, 2742.0], [90.1, 2742.0], [90.2, 2754.0], [90.3, 2757.0], [90.4, 2758.0], [90.5, 2768.0], [90.6, 2775.0], [90.7, 2780.0], [90.8, 2789.0], [90.9, 2838.0], [91.0, 2838.0], [91.1, 2843.0], [91.2, 2855.0], [91.3, 2872.0], [91.4, 2883.0], [91.5, 2911.0], [91.6, 2916.0], [91.7, 2920.0], [91.8, 2957.0], [91.9, 2966.0], [92.0, 2966.0], [92.1, 2967.0], [92.2, 2990.0], [92.3, 2996.0], [92.4, 3009.0], [92.5, 3010.0], [92.6, 3014.0], [92.7, 3015.0], [92.8, 3034.0], [92.9, 3036.0], [93.0, 3036.0], [93.1, 3041.0], [93.2, 3043.0], [93.3, 3044.0], [93.4, 3054.0], [93.5, 3058.0], [93.6, 3060.0], [93.7, 3063.0], [93.8, 3068.0], [93.9, 3073.0], [94.0, 3073.0], [94.1, 3104.0], [94.2, 3111.0], [94.3, 3111.0], [94.4, 3117.0], [94.5, 3125.0], [94.6, 3136.0], [94.7, 3136.0], [94.8, 3152.0], [94.9, 3163.0], [95.0, 3163.0], [95.1, 3172.0], [95.2, 3173.0], [95.3, 3205.0], [95.4, 3246.0], [95.5, 3252.0], [95.6, 3259.0], [95.7, 3265.0], [95.8, 3269.0], [95.9, 3281.0], [96.0, 3281.0], [96.1, 3297.0], [96.2, 3299.0], [96.3, 3301.0], [96.4, 3301.0], [96.5, 3349.0], [96.6, 3371.0], [96.7, 3377.0], [96.8, 3388.0], [96.9, 3390.0], [97.0, 3390.0], [97.1, 3425.0], [97.2, 3532.0], [97.3, 3610.0], [97.4, 3629.0], [97.5, 3644.0], [97.6, 3656.0], [97.7, 3676.0], [97.8, 3680.0], [97.9, 3689.0], [98.0, 3689.0], [98.1, 3733.0], [98.2, 3774.0], [98.3, 3780.0], [98.4, 3895.0], [98.5, 3907.0], [98.6, 4300.0], [98.7, 4348.0], [98.8, 4632.0], [98.9, 4708.0], [99.0, 4708.0], [99.1, 4710.0], [99.2, 4763.0], [99.3, 4804.0], [99.4, 4814.0], [99.5, 4828.0], [99.6, 4828.0], [99.7, 4844.0], [99.8, 4969.0], [99.9, 5918.0], [100.0, 5918.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 14.0], [0.1, 14.0], [0.2, 15.0], [0.3, 17.0], [0.4, 17.0], [0.5, 30.0], [0.6, 33.0], [0.7, 33.0], [0.8, 33.0], [0.9, 36.0], [1.0, 37.0], [1.1, 37.0], [1.2, 41.0], [1.3, 44.0], [1.4, 45.0], [1.5, 49.0], [1.6, 49.0], [1.7, 50.0], [1.8, 51.0], [1.9, 51.0], [2.0, 51.0], [2.1, 52.0], [2.2, 53.0], [2.3, 53.0], [2.4, 54.0], [2.5, 56.0], [2.6, 56.0], [2.7, 56.0], [2.8, 63.0], [2.9, 64.0], [3.0, 64.0], [3.1, 65.0], [3.2, 65.0], [3.3, 67.0], [3.4, 71.0], [3.5, 73.0], [3.6, 77.0], [3.7, 78.0], [3.8, 79.0], [3.9, 80.0], [4.0, 80.0], [4.1, 80.0], [4.2, 81.0], [4.3, 81.0], [4.4, 81.0], [4.5, 82.0], [4.6, 83.0], [4.7, 83.0], [4.8, 83.0], [4.9, 84.0], [5.0, 84.0], [5.1, 84.0], [5.2, 84.0], [5.3, 84.0], [5.4, 85.0], [5.5, 85.0], [5.6, 87.0], [5.7, 88.0], [5.8, 89.0], [5.9, 91.0], [6.0, 91.0], [6.1, 91.0], [6.2, 92.0], [6.3, 92.0], [6.4, 93.0], [6.5, 93.0], [6.6, 94.0], [6.7, 94.0], [6.8, 95.0], [6.9, 97.0], [7.0, 97.0], [7.1, 97.0], [7.2, 98.0], [7.3, 100.0], [7.4, 102.0], [7.5, 102.0], [7.6, 102.0], [7.7, 103.0], [7.8, 104.0], [7.9, 104.0], [8.0, 104.0], [8.1, 104.0], [8.2, 105.0], [8.3, 105.0], [8.4, 106.0], [8.5, 109.0], [8.6, 110.0], [8.7, 111.0], [8.8, 112.0], [8.9, 112.0], [9.0, 116.0], [9.1, 116.0], [9.2, 116.0], [9.3, 116.0], [9.4, 117.0], [9.5, 118.0], [9.6, 118.0], [9.7, 119.0], [9.8, 119.0], [9.9, 120.0], [10.0, 120.0], [10.1, 120.0], [10.2, 120.0], [10.3, 122.0], [10.4, 122.0], [10.5, 123.0], [10.6, 123.0], [10.7, 123.0], [10.8, 124.0], [10.9, 124.0], [11.0, 125.0], [11.1, 125.0], [11.2, 126.0], [11.3, 126.0], [11.4, 126.0], [11.5, 127.0], [11.6, 127.0], [11.7, 128.0], [11.8, 129.0], [11.9, 129.0], [12.0, 130.0], [12.1, 130.0], [12.2, 131.0], [12.3, 131.0], [12.4, 131.0], [12.5, 132.0], [12.6, 132.0], [12.7, 132.0], [12.8, 132.0], [12.9, 136.0], [13.0, 136.0], [13.1, 136.0], [13.2, 140.0], [13.3, 140.0], [13.4, 141.0], [13.5, 142.0], [13.6, 142.0], [13.7, 144.0], [13.8, 145.0], [13.9, 145.0], [14.0, 149.0], [14.1, 149.0], [14.2, 151.0], [14.3, 151.0], [14.4, 152.0], [14.5, 152.0], [14.6, 152.0], [14.7, 153.0], [14.8, 154.0], [14.9, 154.0], [15.0, 154.0], [15.1, 154.0], [15.2, 154.0], [15.3, 155.0], [15.4, 155.0], [15.5, 155.0], [15.6, 155.0], [15.7, 157.0], [15.8, 158.0], [15.9, 159.0], [16.0, 159.0], [16.1, 159.0], [16.2, 159.0], [16.3, 160.0], [16.4, 162.0], [16.5, 164.0], [16.6, 165.0], [16.7, 165.0], [16.8, 166.0], [16.9, 166.0], [17.0, 166.0], [17.1, 166.0], [17.2, 166.0], [17.3, 167.0], [17.4, 168.0], [17.5, 168.0], [17.6, 170.0], [17.7, 170.0], [17.8, 171.0], [17.9, 172.0], [18.0, 172.0], [18.1, 172.0], [18.2, 172.0], [18.3, 172.0], [18.4, 172.0], [18.5, 173.0], [18.6, 173.0], [18.7, 174.0], [18.8, 177.0], [18.9, 178.0], [19.0, 178.0], [19.1, 178.0], [19.2, 180.0], [19.3, 181.0], [19.4, 181.0], [19.5, 184.0], [19.6, 186.0], [19.7, 187.0], [19.8, 187.0], [19.9, 190.0], [20.0, 191.0], [20.1, 191.0], [20.2, 193.0], [20.3, 193.0], [20.4, 194.0], [20.5, 194.0], [20.6, 195.0], [20.7, 196.0], [20.8, 196.0], [20.9, 196.0], [21.0, 197.0], [21.1, 197.0], [21.2, 197.0], [21.3, 198.0], [21.4, 199.0], [21.5, 202.0], [21.6, 203.0], [21.7, 204.0], [21.8, 205.0], [21.9, 205.0], [22.0, 206.0], [22.1, 206.0], [22.2, 207.0], [22.3, 209.0], [22.4, 209.0], [22.5, 209.0], [22.6, 210.0], [22.7, 210.0], [22.8, 211.0], [22.9, 212.0], [23.0, 213.0], [23.1, 213.0], [23.2, 214.0], [23.3, 214.0], [23.4, 215.0], [23.5, 216.0], [23.6, 216.0], [23.7, 217.0], [23.8, 219.0], [23.9, 221.0], [24.0, 221.0], [24.1, 221.0], [24.2, 222.0], [24.3, 222.0], [24.4, 222.0], [24.5, 224.0], [24.6, 225.0], [24.7, 225.0], [24.8, 226.0], [24.9, 226.0], [25.0, 227.0], [25.1, 227.0], [25.2, 228.0], [25.3, 228.0], [25.4, 231.0], [25.5, 231.0], [25.6, 232.0], [25.7, 233.0], [25.8, 233.0], [25.9, 234.0], [26.0, 234.0], [26.1, 234.0], [26.2, 236.0], [26.3, 237.0], [26.4, 237.0], [26.5, 237.0], [26.6, 239.0], [26.7, 241.0], [26.8, 242.0], [26.9, 242.0], [27.0, 243.0], [27.1, 243.0], [27.2, 244.0], [27.3, 245.0], [27.4, 246.0], [27.5, 247.0], [27.6, 251.0], [27.7, 252.0], [27.8, 255.0], [27.9, 255.0], [28.0, 257.0], [28.1, 257.0], [28.2, 257.0], [28.3, 259.0], [28.4, 259.0], [28.5, 261.0], [28.6, 261.0], [28.7, 263.0], [28.8, 264.0], [28.9, 264.0], [29.0, 267.0], [29.1, 267.0], [29.2, 268.0], [29.3, 270.0], [29.4, 270.0], [29.5, 271.0], [29.6, 272.0], [29.7, 272.0], [29.8, 273.0], [29.9, 274.0], [30.0, 284.0], [30.1, 284.0], [30.2, 292.0], [30.3, 293.0], [30.4, 294.0], [30.5, 297.0], [30.6, 302.0], [30.7, 303.0], [30.8, 304.0], [30.9, 305.0], [31.0, 314.0], [31.1, 314.0], [31.2, 316.0], [31.3, 316.0], [31.4, 321.0], [31.5, 322.0], [31.6, 322.0], [31.7, 325.0], [31.8, 326.0], [31.9, 327.0], [32.0, 329.0], [32.1, 329.0], [32.2, 342.0], [32.3, 347.0], [32.4, 352.0], [32.5, 352.0], [32.6, 353.0], [32.7, 363.0], [32.8, 366.0], [32.9, 368.0], [33.0, 368.0], [33.1, 368.0], [33.2, 369.0], [33.3, 371.0], [33.4, 373.0], [33.5, 379.0], [33.6, 379.0], [33.7, 379.0], [33.8, 381.0], [33.9, 384.0], [34.0, 385.0], [34.1, 385.0], [34.2, 389.0], [34.3, 393.0], [34.4, 400.0], [34.5, 406.0], [34.6, 411.0], [34.7, 414.0], [34.8, 417.0], [34.9, 420.0], [35.0, 425.0], [35.1, 425.0], [35.2, 428.0], [35.3, 431.0], [35.4, 432.0], [35.5, 432.0], [35.6, 433.0], [35.7, 441.0], [35.8, 449.0], [35.9, 455.0], [36.0, 455.0], [36.1, 458.0], [36.2, 460.0], [36.3, 461.0], [36.4, 463.0], [36.5, 465.0], [36.6, 473.0], [36.7, 478.0], [36.8, 481.0], [36.9, 486.0], [37.0, 486.0], [37.1, 490.0], [37.2, 491.0], [37.3, 503.0], [37.4, 503.0], [37.5, 510.0], [37.6, 512.0], [37.7, 514.0], [37.8, 519.0], [37.9, 519.0], [38.0, 519.0], [38.1, 521.0], [38.2, 524.0], [38.3, 531.0], [38.4, 533.0], [38.5, 535.0], [38.6, 535.0], [38.7, 536.0], [38.8, 539.0], [38.9, 539.0], [39.0, 539.0], [39.1, 543.0], [39.2, 547.0], [39.3, 552.0], [39.4, 557.0], [39.5, 561.0], [39.6, 562.0], [39.7, 562.0], [39.8, 564.0], [39.9, 564.0], [40.0, 564.0], [40.1, 566.0], [40.2, 567.0], [40.3, 570.0], [40.4, 570.0], [40.5, 574.0], [40.6, 580.0], [40.7, 580.0], [40.8, 582.0], [40.9, 585.0], [41.0, 585.0], [41.1, 588.0], [41.2, 591.0], [41.3, 592.0], [41.4, 593.0], [41.5, 595.0], [41.6, 596.0], [41.7, 598.0], [41.8, 600.0], [41.9, 613.0], [42.0, 613.0], [42.1, 615.0], [42.2, 615.0], [42.3, 617.0], [42.4, 618.0], [42.5, 620.0], [42.6, 622.0], [42.7, 624.0], [42.8, 625.0], [42.9, 625.0], [43.0, 625.0], [43.1, 626.0], [43.2, 629.0], [43.3, 629.0], [43.4, 636.0], [43.5, 643.0], [43.6, 643.0], [43.7, 645.0], [43.8, 648.0], [43.9, 651.0], [44.0, 651.0], [44.1, 655.0], [44.2, 656.0], [44.3, 656.0], [44.4, 656.0], [44.5, 660.0], [44.6, 671.0], [44.7, 675.0], [44.8, 677.0], [44.9, 680.0], [45.0, 680.0], [45.1, 682.0], [45.2, 684.0], [45.3, 687.0], [45.4, 693.0], [45.5, 695.0], [45.6, 696.0], [45.7, 702.0], [45.8, 705.0], [45.9, 706.0], [46.0, 706.0], [46.1, 708.0], [46.2, 709.0], [46.3, 714.0], [46.4, 722.0], [46.5, 724.0], [46.6, 725.0], [46.7, 725.0], [46.8, 725.0], [46.9, 736.0], [47.0, 736.0], [47.1, 737.0], [47.2, 740.0], [47.3, 742.0], [47.4, 743.0], [47.5, 747.0], [47.6, 750.0], [47.7, 753.0], [47.8, 754.0], [47.9, 759.0], [48.0, 759.0], [48.1, 766.0], [48.2, 775.0], [48.3, 777.0], [48.4, 784.0], [48.5, 792.0], [48.6, 800.0], [48.7, 801.0], [48.8, 829.0], [48.9, 829.0], [49.0, 829.0], [49.1, 835.0], [49.2, 837.0], [49.3, 840.0], [49.4, 842.0], [49.5, 843.0], [49.6, 843.0], [49.7, 848.0], [49.8, 854.0], [49.9, 856.0], [50.0, 856.0], [50.1, 860.0], [50.2, 864.0], [50.3, 874.0], [50.4, 878.0], [50.5, 880.0], [50.6, 885.0], [50.7, 895.0], [50.8, 903.0], [50.9, 904.0], [51.0, 904.0], [51.1, 908.0], [51.2, 930.0], [51.3, 930.0], [51.4, 938.0], [51.5, 949.0], [51.6, 952.0], [51.7, 960.0], [51.8, 962.0], [51.9, 964.0], [52.0, 964.0], [52.1, 979.0], [52.2, 992.0], [52.3, 994.0], [52.4, 1009.0], [52.5, 1013.0], [52.6, 1013.0], [52.7, 1025.0], [52.8, 1026.0], [52.9, 1027.0], [53.0, 1027.0], [53.1, 1033.0], [53.2, 1042.0], [53.3, 1049.0], [53.4, 1049.0], [53.5, 1054.0], [53.6, 1056.0], [53.7, 1058.0], [53.8, 1058.0], [53.9, 1061.0], [54.0, 1061.0], [54.1, 1072.0], [54.2, 1073.0], [54.3, 1082.0], [54.4, 1083.0], [54.5, 1083.0], [54.6, 1084.0], [54.7, 1096.0], [54.8, 1097.0], [54.9, 1101.0], [55.0, 1101.0], [55.1, 1103.0], [55.2, 1105.0], [55.3, 1134.0], [55.4, 1143.0], [55.5, 1145.0], [55.6, 1149.0], [55.7, 1152.0], [55.8, 1159.0], [55.9, 1161.0], [56.0, 1161.0], [56.1, 1162.0], [56.2, 1173.0], [56.3, 1182.0], [56.4, 1213.0], [56.5, 1214.0], [56.6, 1220.0], [56.7, 1222.0], [56.8, 1227.0], [56.9, 1232.0], [57.0, 1232.0], [57.1, 1237.0], [57.2, 1243.0], [57.3, 1245.0], [57.4, 1254.0], [57.5, 1261.0], [57.6, 1288.0], [57.7, 1292.0], [57.8, 1300.0], [57.9, 1311.0], [58.0, 1311.0], [58.1, 1311.0], [58.2, 1312.0], [58.3, 1328.0], [58.4, 1330.0], [58.5, 1331.0], [58.6, 1339.0], [58.7, 1348.0], [58.8, 1351.0], [58.9, 1354.0], [59.0, 1354.0], [59.1, 1356.0], [59.2, 1366.0], [59.3, 1376.0], [59.4, 1380.0], [59.5, 1382.0], [59.6, 1389.0], [59.7, 1405.0], [59.8, 1407.0], [59.9, 1418.0], [60.0, 1418.0], [60.1, 1433.0], [60.2, 1448.0], [60.3, 1454.0], [60.4, 1481.0], [60.5, 1484.0], [60.6, 1496.0], [60.7, 1501.0], [60.8, 1539.0], [60.9, 1553.0], [61.0, 1553.0], [61.1, 1568.0], [61.2, 1570.0], [61.3, 1595.0], [61.4, 1603.0], [61.5, 1604.0], [61.6, 1618.0], [61.7, 1643.0], [61.8, 1645.0], [61.9, 1655.0], [62.0, 1655.0], [62.1, 1658.0], [62.2, 1659.0], [62.3, 1716.0], [62.4, 1729.0], [62.5, 1734.0], [62.6, 1734.0], [62.7, 1736.0], [62.8, 1742.0], [62.9, 1758.0], [63.0, 1758.0], [63.1, 1768.0], [63.2, 1789.0], [63.3, 1791.0], [63.4, 1801.0], [63.5, 1811.0], [63.6, 1821.0], [63.7, 1831.0], [63.8, 1835.0], [63.9, 1841.0], [64.0, 1841.0], [64.1, 1842.0], [64.2, 1845.0], [64.3, 1856.0], [64.4, 1864.0], [64.5, 1870.0], [64.6, 1874.0], [64.7, 1885.0], [64.8, 1888.0], [64.9, 1893.0], [65.0, 1893.0], [65.1, 1893.0], [65.2, 1895.0], [65.3, 1907.0], [65.4, 1913.0], [65.5, 1937.0], [65.6, 1942.0], [65.7, 1944.0], [65.8, 1946.0], [65.9, 1954.0], [66.0, 1954.0], [66.1, 1955.0], [66.2, 1957.0], [66.3, 1963.0], [66.4, 1972.0], [66.5, 1996.0], [66.6, 2006.0], [66.7, 2023.0], [66.8, 2030.0], [66.9, 2034.0], [67.0, 2034.0], [67.1, 2034.0], [67.2, 2046.0], [67.3, 2048.0], [67.4, 2052.0], [67.5, 2058.0], [67.6, 2062.0], [67.7, 2076.0], [67.8, 2076.0], [67.9, 2077.0], [68.0, 2077.0], [68.1, 2132.0], [68.2, 2152.0], [68.3, 2204.0], [68.4, 2208.0], [68.5, 2216.0], [68.6, 2221.0], [68.7, 2227.0], [68.8, 2231.0], [68.9, 2238.0], [69.0, 2238.0], [69.1, 2243.0], [69.2, 2263.0], [69.3, 2288.0], [69.4, 2306.0], [69.5, 2309.0], [69.6, 2329.0], [69.7, 2373.0], [69.8, 2381.0], [69.9, 2403.0], [70.0, 2403.0], [70.1, 2406.0], [70.2, 2412.0], [70.3, 2415.0], [70.4, 2462.0], [70.5, 2463.0], [70.6, 2480.0], [70.7, 2512.0], [70.8, 2513.0], [70.9, 2540.0], [71.0, 2540.0], [71.1, 2550.0], [71.2, 2552.0], [71.3, 2555.0], [71.4, 2573.0], [71.5, 2589.0], [71.6, 2607.0], [71.7, 2618.0], [71.8, 2618.0], [71.9, 2632.0], [72.0, 2632.0], [72.1, 2634.0], [72.2, 2640.0], [72.3, 2645.0], [72.4, 2651.0], [72.5, 2655.0], [72.6, 2683.0], [72.7, 2694.0], [72.8, 2701.0], [72.9, 2771.0], [73.0, 2771.0], [73.1, 2809.0], [73.2, 2836.0], [73.3, 2849.0], [73.4, 2901.0], [73.5, 2961.0], [73.6, 2964.0], [73.7, 2983.0], [73.8, 3025.0], [73.9, 3030.0], [74.0, 3030.0], [74.1, 3052.0], [74.2, 3055.0], [74.3, 3069.0], [74.4, 3069.0], [74.5, 3071.0], [74.6, 3084.0], [74.7, 3112.0], [74.8, 3116.0], [74.9, 3130.0], [75.0, 3130.0], [75.1, 3148.0], [75.2, 3217.0], [75.3, 3368.0], [75.4, 3404.0], [75.5, 3423.0], [75.6, 3437.0], [75.7, 3461.0], [75.8, 3490.0], [75.9, 3515.0], [76.0, 3515.0], [76.1, 3519.0], [76.2, 3549.0], [76.3, 3584.0], [76.4, 3616.0], [76.5, 3621.0], [76.6, 3642.0], [76.7, 3649.0], [76.8, 3651.0], [76.9, 3667.0], [77.0, 3667.0], [77.1, 3672.0], [77.2, 3677.0], [77.3, 3685.0], [77.4, 3686.0], [77.5, 3689.0], [77.6, 3690.0], [77.7, 3700.0], [77.8, 3703.0], [77.9, 3703.0], [78.0, 3703.0], [78.1, 3704.0], [78.2, 3705.0], [78.3, 3708.0], [78.4, 3714.0], [78.5, 3718.0], [78.6, 3720.0], [78.7, 3720.0], [78.8, 3728.0], [78.9, 3732.0], [79.0, 3732.0], [79.1, 3736.0], [79.2, 3739.0], [79.3, 3742.0], [79.4, 3745.0], [79.5, 3745.0], [79.6, 3748.0], [79.7, 3749.0], [79.8, 3750.0], [79.9, 3753.0], [80.0, 3753.0], [80.1, 3755.0], [80.2, 3756.0], [80.3, 3757.0], [80.4, 3766.0], [80.5, 3774.0], [80.6, 3777.0], [80.7, 3778.0], [80.8, 3782.0], [80.9, 3788.0], [81.0, 3788.0], [81.1, 3791.0], [81.2, 3795.0], [81.3, 3797.0], [81.4, 3800.0], [81.5, 3801.0], [81.6, 3801.0], [81.7, 3804.0], [81.8, 3809.0], [81.9, 3810.0], [82.0, 3810.0], [82.1, 3817.0], [82.2, 3820.0], [82.3, 3821.0], [82.4, 3838.0], [82.5, 3841.0], [82.6, 3841.0], [82.7, 3842.0], [82.8, 3858.0], [82.9, 3863.0], [83.0, 3863.0], [83.1, 3864.0], [83.2, 3867.0], [83.3, 3868.0], [83.4, 3876.0], [83.5, 3880.0], [83.6, 3883.0], [83.7, 3884.0], [83.8, 3888.0], [83.9, 3890.0], [84.0, 3890.0], [84.1, 3892.0], [84.2, 3894.0], [84.3, 3894.0], [84.4, 3913.0], [84.5, 3917.0], [84.6, 3920.0], [84.7, 3923.0], [84.8, 3930.0], [84.9, 3934.0], [85.0, 3934.0], [85.1, 3940.0], [85.2, 3942.0], [85.3, 3942.0], [85.4, 3942.0], [85.5, 3946.0], [85.6, 3949.0], [85.7, 3966.0], [85.8, 3976.0], [85.9, 3986.0], [86.0, 3986.0], [86.1, 3989.0], [86.2, 3989.0], [86.3, 3993.0], [86.4, 3994.0], [86.5, 3995.0], [86.6, 3996.0], [86.7, 3996.0], [86.8, 4000.0], [86.9, 4007.0], [87.0, 4007.0], [87.1, 4017.0], [87.2, 4030.0], [87.3, 4033.0], [87.4, 4037.0], [87.5, 4042.0], [87.6, 4047.0], [87.7, 4050.0], [87.8, 4058.0], [87.9, 4078.0], [88.0, 4078.0], [88.1, 4078.0], [88.2, 4081.0], [88.3, 4085.0], [88.4, 4087.0], [88.5, 4089.0], [88.6, 4091.0], [88.7, 4091.0], [88.8, 4093.0], [88.9, 4095.0], [89.0, 4095.0], [89.1, 4097.0], [89.2, 4101.0], [89.3, 4108.0], [89.4, 4111.0], [89.5, 4132.0], [89.6, 4133.0], [89.7, 4134.0], [89.8, 4134.0], [89.9, 4138.0], [90.0, 4138.0], [90.1, 4150.0], [90.2, 4151.0], [90.3, 4153.0], [90.4, 4154.0], [90.5, 4157.0], [90.6, 4159.0], [90.7, 4169.0], [90.8, 4172.0], [90.9, 4174.0], [91.0, 4174.0], [91.1, 4176.0], [91.2, 4181.0], [91.3, 4193.0], [91.4, 4194.0], [91.5, 4197.0], [91.6, 4198.0], [91.7, 4198.0], [91.8, 4198.0], [91.9, 4212.0], [92.0, 4212.0], [92.1, 4219.0], [92.2, 4223.0], [92.3, 4223.0], [92.4, 4223.0], [92.5, 4233.0], [92.6, 4234.0], [92.7, 4236.0], [92.8, 4239.0], [92.9, 4241.0], [93.0, 4241.0], [93.1, 4246.0], [93.2, 4248.0], [93.3, 4261.0], [93.4, 4261.0], [93.5, 4262.0], [93.6, 4268.0], [93.7, 4269.0], [93.8, 4273.0], [93.9, 4274.0], [94.0, 4274.0], [94.1, 4275.0], [94.2, 4282.0], [94.3, 4296.0], [94.4, 4297.0], [94.5, 4297.0], [94.6, 4301.0], [94.7, 4301.0], [94.8, 4303.0], [94.9, 4306.0], [95.0, 4306.0], [95.1, 4309.0], [95.2, 4310.0], [95.3, 4313.0], [95.4, 4317.0], [95.5, 4320.0], [95.6, 4323.0], [95.7, 4328.0], [95.8, 4340.0], [95.9, 4343.0], [96.0, 4343.0], [96.1, 4346.0], [96.2, 4349.0], [96.3, 4352.0], [96.4, 4352.0], [96.5, 4354.0], [96.6, 4355.0], [96.7, 4358.0], [96.8, 4359.0], [96.9, 4363.0], [97.0, 4363.0], [97.1, 4363.0], [97.2, 4367.0], [97.3, 4371.0], [97.4, 4375.0], [97.5, 4380.0], [97.6, 4380.0], [97.7, 4383.0], [97.8, 4384.0], [97.9, 4388.0], [98.0, 4388.0], [98.1, 4397.0], [98.2, 4402.0], [98.3, 4403.0], [98.4, 4407.0], [98.5, 4410.0], [98.6, 4418.0], [98.7, 4425.0], [98.8, 4429.0], [98.9, 4439.0], [99.0, 4439.0], [99.1, 4450.0], [99.2, 4452.0], [99.3, 4452.0], [99.4, 4463.0], [99.5, 4466.0], [99.6, 4491.0], [99.7, 4590.0], [99.8, 4606.0], [99.9, 4661.0], [100.0, 4661.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 37.0], [0.1, 37.0], [0.2, 39.0], [0.3, 48.0], [0.4, 52.0], [0.5, 58.0], [0.6, 69.0], [0.7, 106.0], [0.8, 107.0], [0.9, 116.0], [1.0, 116.0], [1.1, 117.0], [1.2, 123.0], [1.3, 124.0], [1.4, 132.0], [1.5, 132.0], [1.6, 147.0], [1.7, 148.0], [1.8, 153.0], [1.9, 157.0], [2.0, 157.0], [2.1, 160.0], [2.2, 160.0], [2.3, 160.0], [2.4, 160.0], [2.5, 165.0], [2.6, 168.0], [2.7, 177.0], [2.8, 177.0], [2.9, 179.0], [3.0, 179.0], [3.1, 183.0], [3.2, 184.0], [3.3, 184.0], [3.4, 191.0], [3.5, 193.0], [3.6, 197.0], [3.7, 198.0], [3.8, 199.0], [3.9, 203.0], [4.0, 203.0], [4.1, 206.0], [4.2, 209.0], [4.3, 213.0], [4.4, 214.0], [4.5, 217.0], [4.6, 219.0], [4.7, 223.0], [4.8, 223.0], [4.9, 229.0], [5.0, 231.0], [5.1, 231.0], [5.2, 231.0], [5.3, 231.0], [5.4, 232.0], [5.5, 235.0], [5.6, 236.0], [5.7, 236.0], [5.8, 237.0], [5.9, 237.0], [6.0, 237.0], [6.1, 237.0], [6.2, 241.0], [6.3, 242.0], [6.4, 243.0], [6.5, 244.0], [6.6, 245.0], [6.7, 248.0], [6.8, 249.0], [6.9, 249.0], [7.0, 249.0], [7.1, 249.0], [7.2, 250.0], [7.3, 250.0], [7.4, 251.0], [7.5, 251.0], [7.6, 252.0], [7.7, 252.0], [7.8, 255.0], [7.9, 256.0], [8.0, 257.0], [8.1, 257.0], [8.2, 257.0], [8.3, 260.0], [8.4, 263.0], [8.5, 269.0], [8.6, 270.0], [8.7, 274.0], [8.8, 274.0], [8.9, 276.0], [9.0, 277.0], [9.1, 277.0], [9.2, 279.0], [9.3, 281.0], [9.4, 282.0], [9.5, 283.0], [9.6, 284.0], [9.7, 285.0], [9.8, 287.0], [9.9, 287.0], [10.0, 287.0], [10.1, 287.0], [10.2, 290.0], [10.3, 292.0], [10.4, 292.0], [10.5, 293.0], [10.6, 295.0], [10.7, 297.0], [10.8, 297.0], [10.9, 298.0], [11.0, 298.0], [11.1, 298.0], [11.2, 299.0], [11.3, 305.0], [11.4, 306.0], [11.5, 307.0], [11.6, 308.0], [11.7, 311.0], [11.8, 313.0], [11.9, 314.0], [12.0, 320.0], [12.1, 320.0], [12.2, 321.0], [12.3, 321.0], [12.4, 323.0], [12.5, 323.0], [12.6, 324.0], [12.7, 326.0], [12.8, 328.0], [12.9, 329.0], [13.0, 330.0], [13.1, 330.0], [13.2, 331.0], [13.3, 333.0], [13.4, 335.0], [13.5, 336.0], [13.6, 336.0], [13.7, 337.0], [13.8, 340.0], [13.9, 341.0], [14.0, 344.0], [14.1, 344.0], [14.2, 349.0], [14.3, 352.0], [14.4, 354.0], [14.5, 355.0], [14.6, 360.0], [14.7, 366.0], [14.8, 372.0], [14.9, 376.0], [15.0, 380.0], [15.1, 380.0], [15.2, 387.0], [15.3, 392.0], [15.4, 397.0], [15.5, 400.0], [15.6, 404.0], [15.7, 404.0], [15.8, 405.0], [15.9, 407.0], [16.0, 411.0], [16.1, 411.0], [16.2, 415.0], [16.3, 417.0], [16.4, 419.0], [16.5, 422.0], [16.6, 424.0], [16.7, 425.0], [16.8, 430.0], [16.9, 431.0], [17.0, 434.0], [17.1, 434.0], [17.2, 435.0], [17.3, 437.0], [17.4, 442.0], [17.5, 446.0], [17.6, 449.0], [17.7, 461.0], [17.8, 462.0], [17.9, 464.0], [18.0, 473.0], [18.1, 473.0], [18.2, 474.0], [18.3, 475.0], [18.4, 478.0], [18.5, 487.0], [18.6, 488.0], [18.7, 492.0], [18.8, 519.0], [18.9, 521.0], [19.0, 522.0], [19.1, 522.0], [19.2, 529.0], [19.3, 531.0], [19.4, 535.0], [19.5, 538.0], [19.6, 542.0], [19.7, 543.0], [19.8, 544.0], [19.9, 545.0], [20.0, 546.0], [20.1, 546.0], [20.2, 551.0], [20.3, 551.0], [20.4, 555.0], [20.5, 568.0], [20.6, 570.0], [20.7, 578.0], [20.8, 579.0], [20.9, 579.0], [21.0, 581.0], [21.1, 581.0], [21.2, 593.0], [21.3, 597.0], [21.4, 605.0], [21.5, 608.0], [21.6, 615.0], [21.7, 624.0], [21.8, 626.0], [21.9, 636.0], [22.0, 640.0], [22.1, 640.0], [22.2, 650.0], [22.3, 681.0], [22.4, 684.0], [22.5, 689.0], [22.6, 695.0], [22.7, 704.0], [22.8, 716.0], [22.9, 732.0], [23.0, 735.0], [23.1, 735.0], [23.2, 743.0], [23.3, 753.0], [23.4, 757.0], [23.5, 805.0], [23.6, 805.0], [23.7, 808.0], [23.8, 813.0], [23.9, 844.0], [24.0, 848.0], [24.1, 848.0], [24.2, 875.0], [24.3, 881.0], [24.4, 899.0], [24.5, 940.0], [24.6, 946.0], [24.7, 963.0], [24.8, 989.0], [24.9, 1009.0], [25.0, 1023.0], [25.1, 1023.0], [25.2, 1033.0], [25.3, 1093.0], [25.4, 1098.0], [25.5, 1148.0], [25.6, 1239.0], [25.7, 1257.0], [25.8, 1310.0], [25.9, 1395.0], [26.0, 1468.0], [26.1, 1468.0], [26.2, 1499.0], [26.3, 1520.0], [26.4, 1550.0], [26.5, 1591.0], [26.6, 1607.0], [26.7, 1618.0], [26.8, 1647.0], [26.9, 1650.0], [27.0, 1696.0], [27.1, 1696.0], [27.2, 1726.0], [27.3, 1726.0], [27.4, 1752.0], [27.5, 1787.0], [27.6, 1788.0], [27.7, 1794.0], [27.8, 1796.0], [27.9, 1801.0], [28.0, 1807.0], [28.1, 1807.0], [28.2, 1827.0], [28.3, 1847.0], [28.4, 1871.0], [28.5, 1875.0], [28.6, 1883.0], [28.7, 1897.0], [28.8, 1913.0], [28.9, 1926.0], [29.0, 1944.0], [29.1, 1944.0], [29.2, 1949.0], [29.3, 1959.0], [29.4, 1964.0], [29.5, 1966.0], [29.6, 1976.0], [29.7, 1981.0], [29.8, 1990.0], [29.9, 2001.0], [30.0, 2005.0], [30.1, 2005.0], [30.2, 2015.0], [30.3, 2023.0], [30.4, 2026.0], [30.5, 2068.0], [30.6, 2074.0], [30.7, 2081.0], [30.8, 2082.0], [30.9, 2096.0], [31.0, 2099.0], [31.1, 2099.0], [31.2, 2105.0], [31.3, 2112.0], [31.4, 2124.0], [31.5, 2127.0], [31.6, 2127.0], [31.7, 2137.0], [31.8, 2138.0], [31.9, 2148.0], [32.0, 2149.0], [32.1, 2149.0], [32.2, 2151.0], [32.3, 2155.0], [32.4, 2160.0], [32.5, 2160.0], [32.6, 2161.0], [32.7, 2170.0], [32.8, 2175.0], [32.9, 2182.0], [33.0, 2187.0], [33.1, 2187.0], [33.2, 2194.0], [33.3, 2198.0], [33.4, 2199.0], [33.5, 2202.0], [33.6, 2211.0], [33.7, 2211.0], [33.8, 2214.0], [33.9, 2215.0], [34.0, 2218.0], [34.1, 2218.0], [34.2, 2223.0], [34.3, 2235.0], [34.4, 2256.0], [34.5, 2263.0], [34.6, 2264.0], [34.7, 2272.0], [34.8, 2274.0], [34.9, 2280.0], [35.0, 2281.0], [35.1, 2281.0], [35.2, 2296.0], [35.3, 2303.0], [35.4, 2309.0], [35.5, 2317.0], [35.6, 2331.0], [35.7, 2339.0], [35.8, 2340.0], [35.9, 2344.0], [36.0, 2344.0], [36.1, 2347.0], [36.2, 2347.0], [36.3, 2349.0], [36.4, 2353.0], [36.5, 2353.0], [36.6, 2360.0], [36.7, 2363.0], [36.8, 2367.0], [36.9, 2376.0], [37.0, 2376.0], [37.1, 2378.0], [37.2, 2386.0], [37.3, 2391.0], [37.4, 2399.0], [37.5, 2403.0], [37.6, 2406.0], [37.7, 2410.0], [37.8, 2415.0], [37.9, 2418.0], [38.0, 2418.0], [38.1, 2418.0], [38.2, 2420.0], [38.3, 2432.0], [38.4, 2433.0], [38.5, 2434.0], [38.6, 2450.0], [38.7, 2451.0], [38.8, 2451.0], [38.9, 2452.0], [39.0, 2452.0], [39.1, 2454.0], [39.2, 2456.0], [39.3, 2459.0], [39.4, 2488.0], [39.5, 2489.0], [39.6, 2502.0], [39.7, 2513.0], [39.8, 2514.0], [39.9, 2514.0], [40.0, 2514.0], [40.1, 2525.0], [40.2, 2541.0], [40.3, 2541.0], [40.4, 2543.0], [40.5, 2545.0], [40.6, 2552.0], [40.7, 2561.0], [40.8, 2569.0], [40.9, 2587.0], [41.0, 2587.0], [41.1, 2592.0], [41.2, 2597.0], [41.3, 2600.0], [41.4, 2618.0], [41.5, 2621.0], [41.6, 2623.0], [41.7, 2629.0], [41.8, 2631.0], [41.9, 2644.0], [42.0, 2644.0], [42.1, 2646.0], [42.2, 2653.0], [42.3, 2659.0], [42.4, 2672.0], [42.5, 2681.0], [42.6, 2681.0], [42.7, 2682.0], [42.8, 2683.0], [42.9, 2691.0], [43.0, 2691.0], [43.1, 2692.0], [43.2, 2693.0], [43.3, 2700.0], [43.4, 2700.0], [43.5, 2704.0], [43.6, 2704.0], [43.7, 2705.0], [43.8, 2718.0], [43.9, 2724.0], [44.0, 2724.0], [44.1, 2732.0], [44.2, 2733.0], [44.3, 2745.0], [44.4, 2754.0], [44.5, 2765.0], [44.6, 2768.0], [44.7, 2779.0], [44.8, 2782.0], [44.9, 2782.0], [45.0, 2782.0], [45.1, 2784.0], [45.2, 2799.0], [45.3, 2800.0], [45.4, 2801.0], [45.5, 2807.0], [45.6, 2813.0], [45.7, 2850.0], [45.8, 2860.0], [45.9, 2865.0], [46.0, 2865.0], [46.1, 2869.0], [46.2, 2873.0], [46.3, 2874.0], [46.4, 2875.0], [46.5, 2877.0], [46.6, 2886.0], [46.7, 2894.0], [46.8, 2907.0], [46.9, 2908.0], [47.0, 2908.0], [47.1, 2942.0], [47.2, 2947.0], [47.3, 2950.0], [47.4, 2980.0], [47.5, 2987.0], [47.6, 3007.0], [47.7, 3014.0], [47.8, 3031.0], [47.9, 3043.0], [48.0, 3043.0], [48.1, 3047.0], [48.2, 3050.0], [48.3, 3073.0], [48.4, 3087.0], [48.5, 3090.0], [48.6, 3092.0], [48.7, 3112.0], [48.8, 3114.0], [48.9, 3116.0], [49.0, 3116.0], [49.1, 3118.0], [49.2, 3122.0], [49.3, 3124.0], [49.4, 3127.0], [49.5, 3132.0], [49.6, 3157.0], [49.7, 3178.0], [49.8, 3190.0], [49.9, 3194.0], [50.0, 3194.0], [50.1, 3195.0], [50.2, 3198.0], [50.3, 3203.0], [50.4, 3239.0], [50.5, 3239.0], [50.6, 3261.0], [50.7, 3277.0], [50.8, 3284.0], [50.9, 3289.0], [51.0, 3289.0], [51.1, 3295.0], [51.2, 3300.0], [51.3, 3313.0], [51.4, 3315.0], [51.5, 3317.0], [51.6, 3323.0], [51.7, 3327.0], [51.8, 3346.0], [51.9, 3347.0], [52.0, 3347.0], [52.1, 3348.0], [52.2, 3367.0], [52.3, 3373.0], [52.4, 3373.0], [52.5, 3381.0], [52.6, 3381.0], [52.7, 3387.0], [52.8, 3400.0], [52.9, 3417.0], [53.0, 3417.0], [53.1, 3433.0], [53.2, 3433.0], [53.3, 3449.0], [53.4, 3452.0], [53.5, 3461.0], [53.6, 3467.0], [53.7, 3474.0], [53.8, 3478.0], [53.9, 3485.0], [54.0, 3485.0], [54.1, 3497.0], [54.2, 3504.0], [54.3, 3508.0], [54.4, 3519.0], [54.5, 3527.0], [54.6, 3533.0], [54.7, 3541.0], [54.8, 3553.0], [54.9, 3554.0], [55.0, 3554.0], [55.1, 3554.0], [55.2, 3556.0], [55.3, 3556.0], [55.4, 3568.0], [55.5, 3570.0], [55.6, 3572.0], [55.7, 3577.0], [55.8, 3582.0], [55.9, 3585.0], [56.0, 3585.0], [56.1, 3596.0], [56.2, 3597.0], [56.3, 3599.0], [56.4, 3601.0], [56.5, 3602.0], [56.6, 3604.0], [56.7, 3607.0], [56.8, 3615.0], [56.9, 3621.0], [57.0, 3621.0], [57.1, 3624.0], [57.2, 3628.0], [57.3, 3629.0], [57.4, 3634.0], [57.5, 3638.0], [57.6, 3666.0], [57.7, 3668.0], [57.8, 3670.0], [57.9, 3684.0], [58.0, 3684.0], [58.1, 3740.0], [58.2, 3740.0], [58.3, 3741.0], [58.4, 3743.0], [58.5, 3759.0], [58.6, 3771.0], [58.7, 3774.0], [58.8, 3786.0], [58.9, 3786.0], [59.0, 3786.0], [59.1, 3789.0], [59.2, 3789.0], [59.3, 3798.0], [59.4, 3800.0], [59.5, 3807.0], [59.6, 3818.0], [59.7, 3826.0], [59.8, 3826.0], [59.9, 3827.0], [60.0, 3827.0], [60.1, 3829.0], [60.2, 3830.0], [60.3, 3830.0], [60.4, 3832.0], [60.5, 3840.0], [60.6, 3842.0], [60.7, 3844.0], [60.8, 3849.0], [60.9, 3851.0], [61.0, 3851.0], [61.1, 3857.0], [61.2, 3859.0], [61.3, 3862.0], [61.4, 3863.0], [61.5, 3864.0], [61.6, 3874.0], [61.7, 3876.0], [61.8, 3878.0], [61.9, 3882.0], [62.0, 3882.0], [62.1, 3884.0], [62.2, 3889.0], [62.3, 3895.0], [62.4, 3895.0], [62.5, 3897.0], [62.6, 3901.0], [62.7, 3902.0], [62.8, 3916.0], [62.9, 3920.0], [63.0, 3920.0], [63.1, 3924.0], [63.2, 3930.0], [63.3, 3930.0], [63.4, 3938.0], [63.5, 3942.0], [63.6, 3946.0], [63.7, 3951.0], [63.8, 3963.0], [63.9, 3966.0], [64.0, 3966.0], [64.1, 3972.0], [64.2, 3975.0], [64.3, 3986.0], [64.4, 3991.0], [64.5, 4002.0], [64.6, 4004.0], [64.7, 4011.0], [64.8, 4012.0], [64.9, 4014.0], [65.0, 4014.0], [65.1, 4023.0], [65.2, 4029.0], [65.3, 4031.0], [65.4, 4063.0], [65.5, 4075.0], [65.6, 4075.0], [65.7, 4088.0], [65.8, 4090.0], [65.9, 4096.0], [66.0, 4096.0], [66.1, 4097.0], [66.2, 4106.0], [66.3, 4109.0], [66.4, 4110.0], [66.5, 4132.0], [66.6, 4135.0], [66.7, 4148.0], [66.8, 4170.0], [66.9, 4176.0], [67.0, 4176.0], [67.1, 4190.0], [67.2, 4208.0], [67.3, 4215.0], [67.4, 4251.0], [67.5, 4262.0], [67.6, 4273.0], [67.7, 4282.0], [67.8, 4284.0], [67.9, 4284.0], [68.0, 4284.0], [68.1, 4288.0], [68.2, 4292.0], [68.3, 4295.0], [68.4, 4301.0], [68.5, 4306.0], [68.6, 4308.0], [68.7, 4313.0], [68.8, 4323.0], [68.9, 4338.0], [69.0, 4338.0], [69.1, 4342.0], [69.2, 4352.0], [69.3, 4358.0], [69.4, 4375.0], [69.5, 4385.0], [69.6, 4387.0], [69.7, 4387.0], [69.8, 4391.0], [69.9, 4417.0], [70.0, 4417.0], [70.1, 4434.0], [70.2, 4435.0], [70.3, 4437.0], [70.4, 4472.0], [70.5, 4472.0], [70.6, 4490.0], [70.7, 4497.0], [70.8, 4518.0], [70.9, 4524.0], [71.0, 4524.0], [71.1, 4544.0], [71.2, 4547.0], [71.3, 4549.0], [71.4, 4550.0], [71.5, 4566.0], [71.6, 4582.0], [71.7, 4587.0], [71.8, 4607.0], [71.9, 4607.0], [72.0, 4607.0], [72.1, 4614.0], [72.2, 4626.0], [72.3, 4626.0], [72.4, 4641.0], [72.5, 4647.0], [72.6, 4660.0], [72.7, 4679.0], [72.8, 4688.0], [72.9, 4694.0], [73.0, 4694.0], [73.1, 4718.0], [73.2, 4725.0], [73.3, 4736.0], [73.4, 4750.0], [73.5, 4755.0], [73.6, 4760.0], [73.7, 4772.0], [73.8, 4788.0], [73.9, 4790.0], [74.0, 4790.0], [74.1, 4796.0], [74.2, 4799.0], [74.3, 4822.0], [74.4, 4847.0], [74.5, 4887.0], [74.6, 4908.0], [74.7, 4923.0], [74.8, 4989.0], [74.9, 5025.0], [75.0, 5025.0], [75.1, 5036.0], [75.2, 5038.0], [75.3, 5050.0], [75.4, 5053.0], [75.5, 5074.0], [75.6, 5080.0], [75.7, 5087.0], [75.8, 5243.0], [75.9, 5324.0], [76.0, 5324.0], [76.1, 5469.0], [76.2, 5709.0], [76.3, 5807.0], [76.4, 5823.0], [76.5, 5901.0], [76.6, 6100.0], [76.7, 6160.0], [76.8, 6163.0], [76.9, 6174.0], [77.0, 6174.0], [77.1, 6226.0], [77.2, 6281.0], [77.3, 6297.0], [77.4, 6645.0], [77.5, 6756.0], [77.6, 6843.0], [77.7, 6845.0], [77.8, 6848.0], [77.9, 6858.0], [78.0, 6858.0], [78.1, 6885.0], [78.2, 6945.0], [78.3, 6964.0], [78.4, 6972.0], [78.5, 6986.0], [78.6, 7017.0], [78.7, 7066.0], [78.8, 7198.0], [78.9, 7212.0], [79.0, 7212.0], [79.1, 7268.0], [79.2, 7278.0], [79.3, 7458.0], [79.4, 7477.0], [79.5, 7510.0], [79.6, 7528.0], [79.7, 7547.0], [79.8, 7550.0], [79.9, 7623.0], [80.0, 7623.0], [80.1, 7649.0], [80.2, 7663.0], [80.3, 7709.0], [80.4, 7717.0], [80.5, 7724.0], [80.6, 7733.0], [80.7, 7733.0], [80.8, 7739.0], [80.9, 7739.0], [81.0, 7739.0], [81.1, 7741.0], [81.2, 7747.0], [81.3, 7748.0], [81.4, 7749.0], [81.5, 7750.0], [81.6, 7780.0], [81.7, 7780.0], [81.8, 7780.0], [81.9, 7780.0], [82.0, 7780.0], [82.1, 7791.0], [82.2, 7794.0], [82.3, 7794.0], [82.4, 7795.0], [82.5, 7795.0], [82.6, 7796.0], [82.7, 7796.0], [82.8, 7796.0], [82.9, 7797.0], [83.0, 7797.0], [83.1, 7798.0], [83.2, 7798.0], [83.3, 7798.0], [83.4, 7799.0], [83.5, 7799.0], [83.6, 7799.0], [83.7, 7800.0], [83.8, 7802.0], [83.9, 7802.0], [84.0, 7802.0], [84.1, 7803.0], [84.2, 7804.0], [84.3, 7805.0], [84.4, 7806.0], [84.5, 7807.0], [84.6, 7807.0], [84.7, 7807.0], [84.8, 7807.0], [84.9, 7808.0], [85.0, 7808.0], [85.1, 7808.0], [85.2, 7808.0], [85.3, 7809.0], [85.4, 7809.0], [85.5, 7809.0], [85.6, 7810.0], [85.7, 7810.0], [85.8, 7810.0], [85.9, 7810.0], [86.0, 7810.0], [86.1, 7810.0], [86.2, 7812.0], [86.3, 7812.0], [86.4, 7814.0], [86.5, 7814.0], [86.6, 7815.0], [86.7, 7815.0], [86.8, 7815.0], [86.9, 7815.0], [87.0, 7815.0], [87.1, 7816.0], [87.2, 7816.0], [87.3, 7817.0], [87.4, 7817.0], [87.5, 7817.0], [87.6, 7817.0], [87.7, 7817.0], [87.8, 7819.0], [87.9, 7821.0], [88.0, 7821.0], [88.1, 7821.0], [88.2, 7821.0], [88.3, 7821.0], [88.4, 7821.0], [88.5, 7821.0], [88.6, 7822.0], [88.7, 7823.0], [88.8, 7823.0], [88.9, 7824.0], [89.0, 7824.0], [89.1, 7824.0], [89.2, 7824.0], [89.3, 7825.0], [89.4, 7826.0], [89.5, 7826.0], [89.6, 7827.0], [89.7, 7829.0], [89.8, 7829.0], [89.9, 7829.0], [90.0, 7829.0], [90.1, 7829.0], [90.2, 7830.0], [90.3, 7830.0], [90.4, 7831.0], [90.5, 7832.0], [90.6, 7833.0], [90.7, 7833.0], [90.8, 7833.0], [90.9, 7834.0], [91.0, 7834.0], [91.1, 7834.0], [91.2, 7835.0], [91.3, 7835.0], [91.4, 7835.0], [91.5, 7835.0], [91.6, 7836.0], [91.7, 7836.0], [91.8, 7837.0], [91.9, 7838.0], [92.0, 7838.0], [92.1, 7838.0], [92.2, 7839.0], [92.3, 7840.0], [92.4, 7841.0], [92.5, 7842.0], [92.6, 7844.0], [92.7, 7844.0], [92.8, 7845.0], [92.9, 7846.0], [93.0, 7846.0], [93.1, 7846.0], [93.2, 7846.0], [93.3, 7847.0], [93.4, 7847.0], [93.5, 7848.0], [93.6, 7849.0], [93.7, 7849.0], [93.8, 7849.0], [93.9, 7850.0], [94.0, 7850.0], [94.1, 7850.0], [94.2, 7850.0], [94.3, 7851.0], [94.4, 7851.0], [94.5, 7855.0], [94.6, 7858.0], [94.7, 7859.0], [94.8, 7861.0], [94.9, 7863.0], [95.0, 7863.0], [95.1, 7866.0], [95.2, 7867.0], [95.3, 7867.0], [95.4, 7868.0], [95.5, 7875.0], [95.6, 7877.0], [95.7, 7880.0], [95.8, 7881.0], [95.9, 7881.0], [96.0, 7881.0], [96.1, 7883.0], [96.2, 7884.0], [96.3, 7887.0], [96.4, 7888.0], [96.5, 7890.0], [96.6, 8003.0], [96.7, 8006.0], [96.8, 8008.0], [96.9, 8015.0], [97.0, 8015.0], [97.1, 8017.0], [97.2, 8024.0], [97.3, 8024.0], [97.4, 8025.0], [97.5, 8033.0], [97.6, 8036.0], [97.7, 8044.0], [97.8, 8056.0], [97.9, 8061.0], [98.0, 8061.0], [98.1, 8061.0], [98.2, 8065.0], [98.3, 8071.0], [98.4, 8076.0], [98.5, 8089.0], [98.6, 8101.0], [98.7, 8121.0], [98.8, 8137.0], [98.9, 8142.0], [99.0, 8142.0], [99.1, 8168.0], [99.2, 8175.0], [99.3, 8180.0], [99.4, 8183.0], [99.5, 8183.0], [99.6, 8189.0], [99.7, 8191.0], [99.8, 8408.0], [99.9, 8540.0], [100.0, 8540.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 128.0, "series": [{"data": [[0.0, 31.0], [600.0, 4.0], [700.0, 5.0], [800.0, 3.0], [900.0, 12.0], [1000.0, 19.0], [1100.0, 12.0], [1200.0, 20.0], [1300.0, 21.0], [1400.0, 20.0], [1500.0, 7.0], [1600.0, 14.0], [100.0, 33.0], [1700.0, 12.0], [1800.0, 10.0], [1900.0, 2.0], [2000.0, 9.0], [2100.0, 14.0], [2300.0, 10.0], [2200.0, 6.0], [2400.0, 6.0], [2500.0, 2.0], [2600.0, 2.0], [2700.0, 2.0], [200.0, 12.0], [3700.0, 1.0], [300.0, 2.0], [400.0, 5.0], [500.0, 4.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[0.0, 102.0], [600.0, 36.0], [700.0, 36.0], [800.0, 27.0], [900.0, 27.0], [1000.0, 23.0], [1100.0, 28.0], [1200.0, 28.0], [1300.0, 30.0], [1400.0, 31.0], [1500.0, 25.0], [1600.0, 23.0], [100.0, 124.0], [1700.0, 32.0], [1800.0, 15.0], [1900.0, 7.0], [2000.0, 15.0], [2100.0, 11.0], [2300.0, 9.0], [2200.0, 11.0], [2400.0, 10.0], [2500.0, 8.0], [2600.0, 7.0], [2700.0, 12.0], [2800.0, 5.0], [2900.0, 8.0], [3000.0, 15.0], [3100.0, 11.0], [200.0, 42.0], [3300.0, 7.0], [3200.0, 9.0], [3400.0, 1.0], [3500.0, 1.0], [3600.0, 7.0], [3700.0, 3.0], [3800.0, 1.0], [3900.0, 1.0], [4300.0, 2.0], [4600.0, 1.0], [300.0, 33.0], [4800.0, 5.0], [4700.0, 3.0], [4900.0, 1.0], [5900.0, 1.0], [400.0, 31.0], [500.0, 35.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 65.0], [600.0, 35.0], [700.0, 26.0], [800.0, 20.0], [900.0, 14.0], [1000.0, 23.0], [1100.0, 13.0], [1200.0, 13.0], [1300.0, 17.0], [1400.0, 9.0], [1500.0, 6.0], [100.0, 128.0], [1600.0, 8.0], [1700.0, 10.0], [1800.0, 17.0], [1900.0, 12.0], [2000.0, 13.0], [2100.0, 2.0], [2300.0, 5.0], [2200.0, 10.0], [2400.0, 7.0], [2500.0, 8.0], [2600.0, 11.0], [2800.0, 3.0], [2700.0, 2.0], [2900.0, 4.0], [3000.0, 8.0], [3100.0, 4.0], [200.0, 82.0], [3200.0, 1.0], [3300.0, 1.0], [3400.0, 5.0], [3500.0, 4.0], [3700.0, 33.0], [3600.0, 12.0], [3800.0, 27.0], [3900.0, 22.0], [4000.0, 21.0], [4200.0, 24.0], [4100.0, 25.0], [4300.0, 32.0], [4400.0, 14.0], [4600.0, 2.0], [4500.0, 1.0], [300.0, 34.0], [400.0, 26.0], [500.0, 41.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 6.0], [600.0, 12.0], [700.0, 7.0], [800.0, 9.0], [900.0, 4.0], [1000.0, 5.0], [1100.0, 1.0], [1200.0, 2.0], [1300.0, 2.0], [1400.0, 2.0], [1500.0, 3.0], [1600.0, 5.0], [1700.0, 7.0], [1800.0, 8.0], [1900.0, 10.0], [2000.0, 11.0], [2100.0, 21.0], [2300.0, 20.0], [2200.0, 16.0], [2400.0, 19.0], [2500.0, 15.0], [2600.0, 18.0], [2700.0, 18.0], [2800.0, 14.0], [2900.0, 7.0], [3000.0, 10.0], [3100.0, 14.0], [3200.0, 8.0], [3300.0, 15.0], [3400.0, 12.0], [3500.0, 20.0], [3600.0, 15.0], [3700.0, 12.0], [3800.0, 29.0], [3900.0, 17.0], [4000.0, 15.0], [4300.0, 14.0], [4200.0, 11.0], [4100.0, 9.0], [4400.0, 8.0], [4600.0, 11.0], [4500.0, 9.0], [4700.0, 11.0], [4800.0, 3.0], [4900.0, 3.0], [5000.0, 8.0], [5200.0, 1.0], [5300.0, 1.0], [5400.0, 1.0], [5700.0, 1.0], [5800.0, 2.0], [6100.0, 4.0], [5900.0, 1.0], [6200.0, 3.0], [6600.0, 1.0], [6800.0, 5.0], [6900.0, 4.0], [6700.0, 1.0], [7000.0, 2.0], [7100.0, 1.0], [7400.0, 2.0], [7200.0, 3.0], [7600.0, 3.0], [7500.0, 4.0], [7800.0, 116.0], [7700.0, 31.0], [8100.0, 11.0], [8000.0, 18.0], [8400.0, 1.0], [8500.0, 1.0], [100.0, 29.0], [200.0, 66.0], [300.0, 38.0], [400.0, 30.0], [500.0, 23.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 8500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 700.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1381.0, "series": [{"data": [[0.0, 919.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 700.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1381.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 181.43866666666702, "minX": 1.7297574E12, "maxY": 181.43866666666702, "series": [{"data": [[1.7297574E12, 181.43866666666702]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7297574E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 18.0, "minX": 3.0, "maxY": 7732.165413533834, "series": [{"data": [[10.0, 65.5], [12.0, 95.0], [13.0, 140.0], [221.0, 272.0], [230.0, 1510.2941176470586], [228.0, 1503.9622641509436], [227.0, 1468.36641221374], [229.0, 1906.3333333333333], [231.0, 774.25], [235.0, 61.333333333333336], [232.0, 70.0], [234.0, 151.5], [233.0, 2589.0], [15.0, 110.8], [16.0, 112.71428571428571], [17.0, 104.25], [18.0, 109.63636363636363], [19.0, 127.83333333333334], [20.0, 205.22222222222223], [21.0, 148.75], [22.0, 113.375], [23.0, 497.5], [110.0, 488.0], [113.0, 528.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[182.4966666666667, 1160.9766666666676]], "isOverall": false, "label": "HTTP Request-2-Aggregated", "isController": false}, {"data": [[32.0, 726.0], [3.0, 18.0], [4.0, 22.0], [5.0, 37.75], [110.0, 1423.0], [114.0, 492.0], [113.0, 1533.0], [9.0, 63.0], [10.0, 71.33333333333333], [11.0, 70.0], [12.0, 80.5], [13.0, 94.85714285714286], [223.0, 1561.3999999999999], [221.0, 516.5], [230.0, 1287.6341463414633], [228.0, 1217.5633802816906], [227.0, 976.751879699248], [229.0, 1744.5333333333333], [231.0, 1552.6309523809525], [226.0, 1438.2666666666669], [225.0, 1297.1249999999998], [224.0, 1474.142857142857], [235.0, 1634.9677419354844], [232.0, 1070.0833333333333], [234.0, 38.5], [236.0, 690.5504587155965], [237.0, 2661.9587628865993], [233.0, 1977.3846153846155], [15.0, 105.0], [16.0, 155.60000000000005], [17.0, 105.71428571428571], [18.0, 113.40000000000002], [19.0, 122.5555555555555], [20.0, 157.4857142857143], [21.0, 154.6818181818182], [22.0, 130.27777777777777], [23.0, 397.25], [24.0, 2095.0], [27.0, 648.0], [28.0, 1088.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[181.32111111111107, 1123.4666666666674]], "isOverall": false, "label": "HTTP Request-1-Aggregated", "isController": false}, {"data": [[32.0, 79.0], [3.0, 33.0], [4.0, 29.0], [5.0, 51.75], [110.0, 2901.0], [114.0, 2552.0], [113.0, 2836.0], [9.0, 51.5], [10.0, 119.33333333333333], [11.0, 136.0], [12.0, 128.0], [13.0, 141.2857142857143], [223.0, 1389.8000000000002], [221.0, 2531.25], [230.0, 2987.951219512196], [228.0, 2846.971830985916], [227.0, 4044.6466165413535], [229.0, 1455.1333333333334], [231.0, 838.6071428571428], [226.0, 1708.466666666667], [225.0, 1047.625], [224.0, 1097.4285714285713], [235.0, 777.5806451612905], [232.0, 1504.0000000000002], [234.0, 148.5], [236.0, 1458.8073394495416], [237.0, 1097.6701030927836], [233.0, 1197.820512820513], [15.0, 163.74999999999997], [16.0, 142.80000000000004], [17.0, 195.5], [18.0, 188.49999999999997], [19.0, 206.74074074074076], [20.0, 171.31428571428572], [21.0, 189.99999999999997], [22.0, 235.66666666666666], [23.0, 1380.25], [24.0, 3728.0], [27.0, 115.0], [28.0, 2152.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[181.3211111111111, 1604.721111111111]], "isOverall": false, "label": "HTTP Request-0-Aggregated", "isController": false}, {"data": [[32.0, 805.0], [3.0, 52.0], [4.0, 51.333333333333336], [5.0, 90.0], [110.0, 5074.0], [114.0, 3327.0], [113.0, 5038.0], [9.0, 115.0], [10.0, 227.33333333333331], [11.0, 206.0], [12.0, 256.5], [13.0, 265.85714285714283], [223.0, 3399.6], [221.0, 3540.5], [230.0, 6518.09756097561], [228.0, 6189.6056338028175], [227.0, 7732.165413533834], [229.0, 3900.6666666666674], [231.0, 2580.095238095238], [226.0, 3409.666666666667], [225.0, 3053.25], [224.0, 3002.714285714286], [235.0, 2494.387096774194], [234.0, 397.0], [232.0, 2760.4166666666665], [236.0, 2781.2385321100924], [237.0, 3844.453608247424], [233.0, 3514.9487179487187], [15.0, 339.58333333333326], [16.0, 374.4], [17.0, 345.6428571428571], [18.0, 350.1], [19.0, 367.7037037037037], [20.0, 395.5142857142857], [21.0, 436.1818181818182], [22.0, 442.9444444444444], [23.0, 2080.75], [24.0, 5823.0], [27.0, 763.0], [28.0, 4887.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[181.32111111111124, 3577.931111111113]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 237.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 11210.0, "minX": 1.7297574E12, "maxY": 40260.0, "series": [{"data": [[1.7297574E12, 40260.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.7297574E12, 11210.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7297574E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1123.4666666666674, "minX": 1.7297574E12, "maxY": 3577.931111111113, "series": [{"data": [[1.7297574E12, 1160.9766666666676]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[1.7297574E12, 1123.4666666666674]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.7297574E12, 1604.721111111111]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.7297574E12, 3577.931111111113]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7297574E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 857.2766666666671, "minX": 1.7297574E12, "maxY": 1336.396666666668, "series": [{"data": [[1.7297574E12, 857.2766666666671]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[1.7297574E12, 1113.393333333332]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.7297574E12, 1336.396666666668]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.7297574E12, 1336.3966666666668]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7297574E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.7297574E12, "maxY": 314.2311111111109, "series": [{"data": [[1.7297574E12, 0.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[1.7297574E12, 0.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.7297574E12, 314.2311111111109]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.7297574E12, 314.23111111111086]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7297574E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 3.0, "minX": 1.7297574E12, "maxY": 8540.0, "series": [{"data": [[1.7297574E12, 8540.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.7297574E12, 4396.400000000001]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.7297574E12, 8005.969999999999]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.7297574E12, 7798.95]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.7297574E12, 3.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.7297574E12, 1323.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7297574E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 106.5, "minX": 3.0, "maxY": 4007.0, "series": [{"data": [[146.0, 154.0], [162.0, 949.0], [171.0, 1870.0], [45.0, 155.0], [3.0, 3136.0], [199.0, 808.0], [206.0, 2206.5], [209.0, 4007.0], [220.0, 3267.0], [270.0, 2369.5], [65.0, 528.0], [68.0, 1176.0], [74.0, 648.0], [95.0, 1082.0], [92.0, 624.5], [26.0, 582.5], [461.0, 2638.0], [112.0, 163.5], [127.0, 178.0], [125.0, 197.0], [124.0, 106.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 461.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 81.0, "minX": 3.0, "maxY": 3136.0, "series": [{"data": [[146.0, 138.0], [162.0, 893.5], [171.0, 1366.0], [45.0, 126.0], [3.0, 3136.0], [199.0, 687.0], [206.0, 1303.0], [209.0, 2865.0], [220.0, 1876.5], [270.0, 1209.5], [65.0, 400.0], [68.0, 1132.0], [74.0, 515.5], [95.0, 1082.0], [92.0, 595.5], [26.0, 582.5], [461.0, 1979.0], [112.0, 131.5], [127.0, 131.0], [125.0, 153.0], [124.0, 81.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 461.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.7297574E12, "maxY": 50.0, "series": [{"data": [[1.7297574E12, 50.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7297574E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 20.0, "minX": 1.7297574E12, "maxY": 30.0, "series": [{"data": [[1.7297574E12, 30.0]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.7297574E12, 20.0]], "isOverall": false, "label": "302", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7297574E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 5.0, "minX": 1.7297574E12, "maxY": 15.0, "series": [{"data": [[1.7297574E12, 15.0]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.7297574E12, 15.0]], "isOverall": false, "label": "HTTP Request-0-success", "isController": false}, {"data": [[1.7297574E12, 15.0]], "isOverall": false, "label": "HTTP Request-1-success", "isController": false}, {"data": [[1.7297574E12, 5.0]], "isOverall": false, "label": "HTTP Request-2-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7297574E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.7297574E12, "maxY": 50.0, "series": [{"data": [[1.7297574E12, 50.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7297574E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

