/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 27.0, "minX": 0.0, "maxY": 7799.0, "series": [{"data": [[0.0, 65.0], [0.1, 65.0], [0.2, 65.0], [0.3, 65.0], [0.4, 76.0], [0.5, 76.0], [0.6, 76.0], [0.7, 87.0], [0.8, 87.0], [0.9, 87.0], [1.0, 100.0], [1.1, 100.0], [1.2, 100.0], [1.3, 100.0], [1.4, 106.0], [1.5, 106.0], [1.6, 106.0], [1.7, 108.0], [1.8, 108.0], [1.9, 108.0], [2.0, 118.0], [2.1, 118.0], [2.2, 118.0], [2.3, 118.0], [2.4, 163.0], [2.5, 163.0], [2.6, 163.0], [2.7, 286.0], [2.8, 286.0], [2.9, 286.0], [3.0, 307.0], [3.1, 307.0], [3.2, 307.0], [3.3, 307.0], [3.4, 327.0], [3.5, 327.0], [3.6, 327.0], [3.7, 328.0], [3.8, 328.0], [3.9, 328.0], [4.0, 329.0], [4.1, 329.0], [4.2, 329.0], [4.3, 329.0], [4.4, 330.0], [4.5, 330.0], [4.6, 330.0], [4.7, 334.0], [4.8, 334.0], [4.9, 334.0], [5.0, 336.0], [5.1, 336.0], [5.2, 336.0], [5.3, 336.0], [5.4, 337.0], [5.5, 337.0], [5.6, 337.0], [5.7, 344.0], [5.8, 344.0], [5.9, 344.0], [6.0, 351.0], [6.1, 351.0], [6.2, 351.0], [6.3, 351.0], [6.4, 352.0], [6.5, 352.0], [6.6, 352.0], [6.7, 353.0], [6.8, 353.0], [6.9, 353.0], [7.0, 359.0], [7.1, 359.0], [7.2, 359.0], [7.3, 359.0], [7.4, 360.0], [7.5, 360.0], [7.6, 360.0], [7.7, 365.0], [7.8, 365.0], [7.9, 365.0], [8.0, 371.0], [8.1, 371.0], [8.2, 371.0], [8.3, 371.0], [8.4, 400.0], [8.5, 400.0], [8.6, 400.0], [8.7, 426.0], [8.8, 426.0], [8.9, 426.0], [9.0, 427.0], [9.1, 427.0], [9.2, 427.0], [9.3, 427.0], [9.4, 428.0], [9.5, 428.0], [9.6, 428.0], [9.7, 429.0], [9.8, 429.0], [9.9, 429.0], [10.0, 432.0], [10.1, 432.0], [10.2, 432.0], [10.3, 432.0], [10.4, 472.0], [10.5, 472.0], [10.6, 472.0], [10.7, 473.0], [10.8, 473.0], [10.9, 473.0], [11.0, 473.0], [11.1, 488.0], [11.2, 488.0], [11.3, 488.0], [11.4, 489.0], [11.5, 489.0], [11.6, 489.0], [11.7, 490.0], [11.8, 490.0], [11.9, 490.0], [12.0, 490.0], [12.1, 491.0], [12.2, 491.0], [12.3, 491.0], [12.4, 492.0], [12.5, 492.0], [12.6, 492.0], [12.7, 496.0], [12.8, 496.0], [12.9, 496.0], [13.0, 496.0], [13.1, 496.0], [13.2, 496.0], [13.3, 496.0], [13.4, 498.0], [13.5, 498.0], [13.6, 498.0], [13.7, 499.0], [13.8, 499.0], [13.9, 499.0], [14.0, 499.0], [14.1, 500.0], [14.2, 500.0], [14.3, 500.0], [14.4, 500.0], [14.5, 500.0], [14.6, 500.0], [14.7, 500.0], [14.8, 500.0], [14.9, 500.0], [15.0, 500.0], [15.1, 502.0], [15.2, 502.0], [15.3, 502.0], [15.4, 508.0], [15.5, 508.0], [15.6, 508.0], [15.7, 511.0], [15.8, 511.0], [15.9, 511.0], [16.0, 511.0], [16.1, 514.0], [16.2, 514.0], [16.3, 514.0], [16.4, 521.0], [16.5, 521.0], [16.6, 521.0], [16.7, 525.0], [16.8, 525.0], [16.9, 525.0], [17.0, 525.0], [17.1, 551.0], [17.2, 551.0], [17.3, 551.0], [17.4, 552.0], [17.5, 552.0], [17.6, 552.0], [17.7, 559.0], [17.8, 559.0], [17.9, 559.0], [18.0, 585.0], [18.1, 585.0], [18.2, 585.0], [18.3, 585.0], [18.4, 590.0], [18.5, 590.0], [18.6, 590.0], [18.7, 600.0], [18.8, 600.0], [18.9, 600.0], [19.0, 616.0], [19.1, 616.0], [19.2, 616.0], [19.3, 616.0], [19.4, 626.0], [19.5, 626.0], [19.6, 626.0], [19.7, 647.0], [19.8, 647.0], [19.9, 647.0], [20.0, 656.0], [20.1, 656.0], [20.2, 656.0], [20.3, 656.0], [20.4, 658.0], [20.5, 658.0], [20.6, 658.0], [20.7, 658.0], [20.8, 658.0], [20.9, 658.0], [21.0, 660.0], [21.1, 660.0], [21.2, 660.0], [21.3, 660.0], [21.4, 675.0], [21.5, 675.0], [21.6, 675.0], [21.7, 684.0], [21.8, 684.0], [21.9, 684.0], [22.0, 694.0], [22.1, 694.0], [22.2, 694.0], [22.3, 694.0], [22.4, 696.0], [22.5, 696.0], [22.6, 696.0], [22.7, 703.0], [22.8, 703.0], [22.9, 703.0], [23.0, 706.0], [23.1, 706.0], [23.2, 706.0], [23.3, 706.0], [23.4, 708.0], [23.5, 708.0], [23.6, 708.0], [23.7, 710.0], [23.8, 710.0], [23.9, 710.0], [24.0, 711.0], [24.1, 711.0], [24.2, 711.0], [24.3, 711.0], [24.4, 712.0], [24.5, 712.0], [24.6, 712.0], [24.7, 729.0], [24.8, 729.0], [24.9, 729.0], [25.0, 745.0], [25.1, 745.0], [25.2, 745.0], [25.3, 745.0], [25.4, 746.0], [25.5, 746.0], [25.6, 746.0], [25.7, 760.0], [25.8, 760.0], [25.9, 760.0], [26.0, 765.0], [26.1, 765.0], [26.2, 765.0], [26.3, 765.0], [26.4, 778.0], [26.5, 778.0], [26.6, 778.0], [26.7, 787.0], [26.8, 787.0], [26.9, 787.0], [27.0, 790.0], [27.1, 790.0], [27.2, 790.0], [27.3, 790.0], [27.4, 791.0], [27.5, 791.0], [27.6, 791.0], [27.7, 797.0], [27.8, 797.0], [27.9, 797.0], [28.0, 798.0], [28.1, 798.0], [28.2, 798.0], [28.3, 798.0], [28.4, 808.0], [28.5, 808.0], [28.6, 808.0], [28.7, 812.0], [28.8, 812.0], [28.9, 812.0], [29.0, 820.0], [29.1, 820.0], [29.2, 820.0], [29.3, 820.0], [29.4, 829.0], [29.5, 829.0], [29.6, 829.0], [29.7, 832.0], [29.8, 832.0], [29.9, 832.0], [30.0, 834.0], [30.1, 834.0], [30.2, 834.0], [30.3, 834.0], [30.4, 849.0], [30.5, 849.0], [30.6, 849.0], [30.7, 860.0], [30.8, 860.0], [30.9, 860.0], [31.0, 861.0], [31.1, 861.0], [31.2, 861.0], [31.3, 861.0], [31.4, 867.0], [31.5, 867.0], [31.6, 867.0], [31.7, 871.0], [31.8, 871.0], [31.9, 871.0], [32.0, 883.0], [32.1, 883.0], [32.2, 883.0], [32.3, 883.0], [32.4, 907.0], [32.5, 907.0], [32.6, 907.0], [32.7, 912.0], [32.8, 912.0], [32.9, 912.0], [33.0, 915.0], [33.1, 915.0], [33.2, 915.0], [33.3, 915.0], [33.4, 920.0], [33.5, 920.0], [33.6, 920.0], [33.7, 932.0], [33.8, 932.0], [33.9, 932.0], [34.0, 932.0], [34.1, 932.0], [34.2, 932.0], [34.3, 932.0], [34.4, 937.0], [34.5, 937.0], [34.6, 937.0], [34.7, 945.0], [34.8, 945.0], [34.9, 945.0], [35.0, 952.0], [35.1, 952.0], [35.2, 952.0], [35.3, 952.0], [35.4, 956.0], [35.5, 956.0], [35.6, 956.0], [35.7, 961.0], [35.8, 961.0], [35.9, 961.0], [36.0, 962.0], [36.1, 962.0], [36.2, 962.0], [36.3, 962.0], [36.4, 964.0], [36.5, 964.0], [36.6, 964.0], [36.7, 966.0], [36.8, 966.0], [36.9, 966.0], [37.0, 969.0], [37.1, 969.0], [37.2, 969.0], [37.3, 969.0], [37.4, 986.0], [37.5, 986.0], [37.6, 986.0], [37.7, 997.0], [37.8, 997.0], [37.9, 997.0], [38.0, 1003.0], [38.1, 1003.0], [38.2, 1003.0], [38.3, 1003.0], [38.4, 1010.0], [38.5, 1010.0], [38.6, 1010.0], [38.7, 1013.0], [38.8, 1013.0], [38.9, 1013.0], [39.0, 1014.0], [39.1, 1014.0], [39.2, 1014.0], [39.3, 1014.0], [39.4, 1020.0], [39.5, 1020.0], [39.6, 1020.0], [39.7, 1021.0], [39.8, 1021.0], [39.9, 1021.0], [40.0, 1022.0], [40.1, 1022.0], [40.2, 1022.0], [40.3, 1022.0], [40.4, 1028.0], [40.5, 1028.0], [40.6, 1028.0], [40.7, 1051.0], [40.8, 1051.0], [40.9, 1051.0], [41.0, 1051.0], [41.1, 1056.0], [41.2, 1056.0], [41.3, 1056.0], [41.4, 1057.0], [41.5, 1057.0], [41.6, 1057.0], [41.7, 1075.0], [41.8, 1075.0], [41.9, 1075.0], [42.0, 1075.0], [42.1, 1076.0], [42.2, 1076.0], [42.3, 1076.0], [42.4, 1079.0], [42.5, 1079.0], [42.6, 1079.0], [42.7, 1079.0], [42.8, 1079.0], [42.9, 1079.0], [43.0, 1079.0], [43.1, 1084.0], [43.2, 1084.0], [43.3, 1084.0], [43.4, 1086.0], [43.5, 1086.0], [43.6, 1086.0], [43.7, 1097.0], [43.8, 1097.0], [43.9, 1097.0], [44.0, 1097.0], [44.1, 1115.0], [44.2, 1115.0], [44.3, 1115.0], [44.4, 1130.0], [44.5, 1130.0], [44.6, 1130.0], [44.7, 1132.0], [44.8, 1132.0], [44.9, 1132.0], [45.0, 1132.0], [45.1, 1142.0], [45.2, 1142.0], [45.3, 1142.0], [45.4, 1148.0], [45.5, 1148.0], [45.6, 1148.0], [45.7, 1148.0], [45.8, 1148.0], [45.9, 1148.0], [46.0, 1148.0], [46.1, 1149.0], [46.2, 1149.0], [46.3, 1149.0], [46.4, 1160.0], [46.5, 1160.0], [46.6, 1160.0], [46.7, 1160.0], [46.8, 1160.0], [46.9, 1160.0], [47.0, 1160.0], [47.1, 1160.0], [47.2, 1160.0], [47.3, 1160.0], [47.4, 1163.0], [47.5, 1163.0], [47.6, 1163.0], [47.7, 1164.0], [47.8, 1164.0], [47.9, 1164.0], [48.0, 1164.0], [48.1, 1164.0], [48.2, 1164.0], [48.3, 1164.0], [48.4, 1165.0], [48.5, 1165.0], [48.6, 1165.0], [48.7, 1169.0], [48.8, 1169.0], [48.9, 1169.0], [49.0, 1169.0], [49.1, 1177.0], [49.2, 1177.0], [49.3, 1177.0], [49.4, 1178.0], [49.5, 1178.0], [49.6, 1178.0], [49.7, 1180.0], [49.8, 1180.0], [49.9, 1180.0], [50.0, 1180.0], [50.1, 1183.0], [50.2, 1183.0], [50.3, 1183.0], [50.4, 1185.0], [50.5, 1185.0], [50.6, 1185.0], [50.7, 1188.0], [50.8, 1188.0], [50.9, 1188.0], [51.0, 1188.0], [51.1, 1192.0], [51.2, 1192.0], [51.3, 1192.0], [51.4, 1193.0], [51.5, 1193.0], [51.6, 1193.0], [51.7, 1196.0], [51.8, 1196.0], [51.9, 1196.0], [52.0, 1196.0], [52.1, 1199.0], [52.2, 1199.0], [52.3, 1199.0], [52.4, 1202.0], [52.5, 1202.0], [52.6, 1202.0], [52.7, 1207.0], [52.8, 1207.0], [52.9, 1207.0], [53.0, 1207.0], [53.1, 1210.0], [53.2, 1210.0], [53.3, 1210.0], [53.4, 1218.0], [53.5, 1218.0], [53.6, 1218.0], [53.7, 1219.0], [53.8, 1219.0], [53.9, 1219.0], [54.0, 1219.0], [54.1, 1221.0], [54.2, 1221.0], [54.3, 1221.0], [54.4, 1224.0], [54.5, 1224.0], [54.6, 1224.0], [54.7, 1232.0], [54.8, 1232.0], [54.9, 1232.0], [55.0, 1232.0], [55.1, 1247.0], [55.2, 1247.0], [55.3, 1247.0], [55.4, 1248.0], [55.5, 1248.0], [55.6, 1248.0], [55.7, 1250.0], [55.8, 1250.0], [55.9, 1250.0], [56.0, 1250.0], [56.1, 1256.0], [56.2, 1256.0], [56.3, 1256.0], [56.4, 1259.0], [56.5, 1259.0], [56.6, 1259.0], [56.7, 1265.0], [56.8, 1265.0], [56.9, 1265.0], [57.0, 1265.0], [57.1, 1272.0], [57.2, 1272.0], [57.3, 1272.0], [57.4, 1283.0], [57.5, 1283.0], [57.6, 1283.0], [57.7, 1296.0], [57.8, 1296.0], [57.9, 1296.0], [58.0, 1296.0], [58.1, 1296.0], [58.2, 1296.0], [58.3, 1296.0], [58.4, 1306.0], [58.5, 1306.0], [58.6, 1306.0], [58.7, 1310.0], [58.8, 1310.0], [58.9, 1310.0], [59.0, 1310.0], [59.1, 1315.0], [59.2, 1315.0], [59.3, 1315.0], [59.4, 1316.0], [59.5, 1316.0], [59.6, 1316.0], [59.7, 1316.0], [59.8, 1316.0], [59.9, 1316.0], [60.0, 1316.0], [60.1, 1317.0], [60.2, 1317.0], [60.3, 1317.0], [60.4, 1317.0], [60.5, 1317.0], [60.6, 1317.0], [60.7, 1319.0], [60.8, 1319.0], [60.9, 1319.0], [61.0, 1319.0], [61.1, 1322.0], [61.2, 1322.0], [61.3, 1322.0], [61.4, 1325.0], [61.5, 1325.0], [61.6, 1325.0], [61.7, 1325.0], [61.8, 1325.0], [61.9, 1325.0], [62.0, 1325.0], [62.1, 1338.0], [62.2, 1338.0], [62.3, 1338.0], [62.4, 1339.0], [62.5, 1339.0], [62.6, 1339.0], [62.7, 1340.0], [62.8, 1340.0], [62.9, 1340.0], [63.0, 1340.0], [63.1, 1349.0], [63.2, 1349.0], [63.3, 1349.0], [63.4, 1356.0], [63.5, 1356.0], [63.6, 1356.0], [63.7, 1364.0], [63.8, 1364.0], [63.9, 1364.0], [64.0, 1364.0], [64.1, 1365.0], [64.2, 1365.0], [64.3, 1365.0], [64.4, 1376.0], [64.5, 1376.0], [64.6, 1376.0], [64.7, 1376.0], [64.8, 1376.0], [64.9, 1376.0], [65.0, 1376.0], [65.1, 1376.0], [65.2, 1376.0], [65.3, 1376.0], [65.4, 1382.0], [65.5, 1382.0], [65.6, 1382.0], [65.7, 1385.0], [65.8, 1385.0], [65.9, 1385.0], [66.0, 1385.0], [66.1, 1389.0], [66.2, 1389.0], [66.3, 1389.0], [66.4, 1394.0], [66.5, 1394.0], [66.6, 1394.0], [66.7, 1407.0], [66.8, 1407.0], [66.9, 1407.0], [67.0, 1407.0], [67.1, 1412.0], [67.2, 1412.0], [67.3, 1412.0], [67.4, 1419.0], [67.5, 1419.0], [67.6, 1419.0], [67.7, 1420.0], [67.8, 1420.0], [67.9, 1420.0], [68.0, 1420.0], [68.1, 1420.0], [68.2, 1420.0], [68.3, 1420.0], [68.4, 1422.0], [68.5, 1422.0], [68.6, 1422.0], [68.7, 1438.0], [68.8, 1438.0], [68.9, 1438.0], [69.0, 1438.0], [69.1, 1443.0], [69.2, 1443.0], [69.3, 1443.0], [69.4, 1460.0], [69.5, 1460.0], [69.6, 1460.0], [69.7, 1474.0], [69.8, 1474.0], [69.9, 1474.0], [70.0, 1474.0], [70.1, 1479.0], [70.2, 1479.0], [70.3, 1479.0], [70.4, 1479.0], [70.5, 1479.0], [70.6, 1479.0], [70.7, 1483.0], [70.8, 1483.0], [70.9, 1483.0], [71.0, 1483.0], [71.1, 1487.0], [71.2, 1487.0], [71.3, 1487.0], [71.4, 1491.0], [71.5, 1491.0], [71.6, 1491.0], [71.7, 1493.0], [71.8, 1493.0], [71.9, 1493.0], [72.0, 1493.0], [72.1, 1501.0], [72.2, 1501.0], [72.3, 1501.0], [72.4, 1502.0], [72.5, 1502.0], [72.6, 1502.0], [72.7, 1505.0], [72.8, 1505.0], [72.9, 1505.0], [73.0, 1505.0], [73.1, 1519.0], [73.2, 1519.0], [73.3, 1519.0], [73.4, 1521.0], [73.5, 1521.0], [73.6, 1521.0], [73.7, 1524.0], [73.8, 1524.0], [73.9, 1524.0], [74.0, 1524.0], [74.1, 1525.0], [74.2, 1525.0], [74.3, 1525.0], [74.4, 1527.0], [74.5, 1527.0], [74.6, 1527.0], [74.7, 1532.0], [74.8, 1532.0], [74.9, 1532.0], [75.0, 1540.0], [75.1, 1540.0], [75.2, 1540.0], [75.3, 1540.0], [75.4, 1549.0], [75.5, 1549.0], [75.6, 1549.0], [75.7, 1549.0], [75.8, 1549.0], [75.9, 1549.0], [76.0, 1552.0], [76.1, 1552.0], [76.2, 1552.0], [76.3, 1552.0], [76.4, 1556.0], [76.5, 1556.0], [76.6, 1556.0], [76.7, 1572.0], [76.8, 1572.0], [76.9, 1572.0], [77.0, 1577.0], [77.1, 1577.0], [77.2, 1577.0], [77.3, 1577.0], [77.4, 1592.0], [77.5, 1592.0], [77.6, 1592.0], [77.7, 1598.0], [77.8, 1598.0], [77.9, 1598.0], [78.0, 1616.0], [78.1, 1616.0], [78.2, 1616.0], [78.3, 1616.0], [78.4, 1620.0], [78.5, 1620.0], [78.6, 1620.0], [78.7, 1626.0], [78.8, 1626.0], [78.9, 1626.0], [79.0, 1640.0], [79.1, 1640.0], [79.2, 1640.0], [79.3, 1640.0], [79.4, 1643.0], [79.5, 1643.0], [79.6, 1643.0], [79.7, 1646.0], [79.8, 1646.0], [79.9, 1646.0], [80.0, 1648.0], [80.1, 1648.0], [80.2, 1648.0], [80.3, 1648.0], [80.4, 1653.0], [80.5, 1653.0], [80.6, 1653.0], [80.7, 1674.0], [80.8, 1674.0], [80.9, 1674.0], [81.0, 1675.0], [81.1, 1675.0], [81.2, 1675.0], [81.3, 1675.0], [81.4, 1683.0], [81.5, 1683.0], [81.6, 1683.0], [81.7, 1684.0], [81.8, 1684.0], [81.9, 1684.0], [82.0, 1704.0], [82.1, 1704.0], [82.2, 1704.0], [82.3, 1704.0], [82.4, 1707.0], [82.5, 1707.0], [82.6, 1707.0], [82.7, 1710.0], [82.8, 1710.0], [82.9, 1710.0], [83.0, 1716.0], [83.1, 1716.0], [83.2, 1716.0], [83.3, 1716.0], [83.4, 1734.0], [83.5, 1734.0], [83.6, 1734.0], [83.7, 1744.0], [83.8, 1744.0], [83.9, 1744.0], [84.0, 1748.0], [84.1, 1748.0], [84.2, 1748.0], [84.3, 1748.0], [84.4, 1793.0], [84.5, 1793.0], [84.6, 1793.0], [84.7, 1793.0], [84.8, 1793.0], [84.9, 1793.0], [85.0, 1793.0], [85.1, 1793.0], [85.2, 1793.0], [85.3, 1793.0], [85.4, 1799.0], [85.5, 1799.0], [85.6, 1799.0], [85.7, 1840.0], [85.8, 1840.0], [85.9, 1840.0], [86.0, 1852.0], [86.1, 1852.0], [86.2, 1852.0], [86.3, 1852.0], [86.4, 1857.0], [86.5, 1857.0], [86.6, 1857.0], [86.7, 1858.0], [86.8, 1858.0], [86.9, 1858.0], [87.0, 1862.0], [87.1, 1862.0], [87.2, 1862.0], [87.3, 1862.0], [87.4, 1870.0], [87.5, 1870.0], [87.6, 1870.0], [87.7, 1899.0], [87.8, 1899.0], [87.9, 1899.0], [88.0, 1900.0], [88.1, 1900.0], [88.2, 1900.0], [88.3, 1900.0], [88.4, 1905.0], [88.5, 1905.0], [88.6, 1905.0], [88.7, 1911.0], [88.8, 1911.0], [88.9, 1911.0], [89.0, 1921.0], [89.1, 1921.0], [89.2, 1921.0], [89.3, 1921.0], [89.4, 1932.0], [89.5, 1932.0], [89.6, 1932.0], [89.7, 1955.0], [89.8, 1955.0], [89.9, 1955.0], [90.0, 1956.0], [90.1, 1956.0], [90.2, 1956.0], [90.3, 1956.0], [90.4, 1959.0], [90.5, 1959.0], [90.6, 1959.0], [90.7, 1981.0], [90.8, 1981.0], [90.9, 1981.0], [91.0, 1995.0], [91.1, 1995.0], [91.2, 1995.0], [91.3, 1995.0], [91.4, 1995.0], [91.5, 1995.0], [91.6, 1995.0], [91.7, 2014.0], [91.8, 2014.0], [91.9, 2014.0], [92.0, 2021.0], [92.1, 2021.0], [92.2, 2021.0], [92.3, 2021.0], [92.4, 2065.0], [92.5, 2065.0], [92.6, 2065.0], [92.7, 2074.0], [92.8, 2074.0], [92.9, 2074.0], [93.0, 2075.0], [93.1, 2075.0], [93.2, 2075.0], [93.3, 2075.0], [93.4, 2082.0], [93.5, 2082.0], [93.6, 2082.0], [93.7, 2086.0], [93.8, 2086.0], [93.9, 2086.0], [94.0, 2100.0], [94.1, 2100.0], [94.2, 2100.0], [94.3, 2100.0], [94.4, 2104.0], [94.5, 2104.0], [94.6, 2104.0], [94.7, 2130.0], [94.8, 2130.0], [94.9, 2130.0], [95.0, 2134.0], [95.1, 2134.0], [95.2, 2134.0], [95.3, 2134.0], [95.4, 2163.0], [95.5, 2163.0], [95.6, 2163.0], [95.7, 2211.0], [95.8, 2211.0], [95.9, 2211.0], [96.0, 2218.0], [96.1, 2218.0], [96.2, 2218.0], [96.3, 2218.0], [96.4, 2221.0], [96.5, 2221.0], [96.6, 2221.0], [96.7, 2280.0], [96.8, 2280.0], [96.9, 2280.0], [97.0, 2291.0], [97.1, 2291.0], [97.2, 2291.0], [97.3, 2291.0], [97.4, 2332.0], [97.5, 2332.0], [97.6, 2332.0], [97.7, 2332.0], [97.8, 2332.0], [97.9, 2332.0], [98.0, 2342.0], [98.1, 2342.0], [98.2, 2342.0], [98.3, 2342.0], [98.4, 2366.0], [98.5, 2366.0], [98.6, 2366.0], [98.7, 2374.0], [98.8, 2374.0], [98.9, 2374.0], [99.0, 2582.0], [99.1, 2582.0], [99.2, 2582.0], [99.3, 2582.0], [99.4, 2591.0], [99.5, 2591.0], [99.6, 2591.0], [99.7, 3095.0], [99.8, 3095.0], [99.9, 3095.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[0.0, 56.0], [0.1, 56.0], [0.2, 61.0], [0.3, 61.0], [0.4, 68.0], [0.5, 81.0], [0.6, 85.0], [0.7, 104.0], [0.8, 117.0], [0.9, 119.0], [1.0, 119.0], [1.1, 122.0], [1.2, 126.0], [1.3, 126.0], [1.4, 175.0], [1.5, 227.0], [1.6, 230.0], [1.7, 236.0], [1.8, 237.0], [1.9, 245.0], [2.0, 245.0], [2.1, 250.0], [2.2, 251.0], [2.3, 266.0], [2.4, 270.0], [2.5, 277.0], [2.6, 291.0], [2.7, 307.0], [2.8, 309.0], [2.9, 329.0], [3.0, 329.0], [3.1, 331.0], [3.2, 351.0], [3.3, 355.0], [3.4, 363.0], [3.5, 364.0], [3.6, 365.0], [3.7, 367.0], [3.8, 369.0], [3.9, 370.0], [4.0, 370.0], [4.1, 371.0], [4.2, 391.0], [4.3, 401.0], [4.4, 402.0], [4.5, 403.0], [4.6, 406.0], [4.7, 407.0], [4.8, 408.0], [4.9, 409.0], [5.0, 410.0], [5.1, 410.0], [5.2, 412.0], [5.3, 415.0], [5.4, 421.0], [5.5, 426.0], [5.6, 430.0], [5.7, 436.0], [5.8, 439.0], [5.9, 442.0], [6.0, 448.0], [6.1, 448.0], [6.2, 449.0], [6.3, 450.0], [6.4, 451.0], [6.5, 454.0], [6.6, 454.0], [6.7, 456.0], [6.8, 457.0], [6.9, 459.0], [7.0, 460.0], [7.1, 460.0], [7.2, 467.0], [7.3, 469.0], [7.4, 470.0], [7.5, 476.0], [7.6, 481.0], [7.7, 486.0], [7.8, 488.0], [7.9, 489.0], [8.0, 491.0], [8.1, 491.0], [8.2, 498.0], [8.3, 500.0], [8.4, 506.0], [8.5, 512.0], [8.6, 524.0], [8.7, 533.0], [8.8, 534.0], [8.9, 538.0], [9.0, 540.0], [9.1, 540.0], [9.2, 543.0], [9.3, 550.0], [9.4, 552.0], [9.5, 555.0], [9.6, 556.0], [9.7, 571.0], [9.8, 572.0], [9.9, 573.0], [10.0, 581.0], [10.1, 581.0], [10.2, 582.0], [10.3, 584.0], [10.4, 589.0], [10.5, 599.0], [10.6, 600.0], [10.7, 601.0], [10.8, 602.0], [10.9, 604.0], [11.0, 613.0], [11.1, 613.0], [11.2, 615.0], [11.3, 615.0], [11.4, 616.0], [11.5, 622.0], [11.6, 623.0], [11.7, 627.0], [11.8, 631.0], [11.9, 632.0], [12.0, 635.0], [12.1, 635.0], [12.2, 635.0], [12.3, 636.0], [12.4, 637.0], [12.5, 641.0], [12.6, 643.0], [12.7, 644.0], [12.8, 645.0], [12.9, 649.0], [13.0, 650.0], [13.1, 650.0], [13.2, 651.0], [13.3, 653.0], [13.4, 656.0], [13.5, 657.0], [13.6, 658.0], [13.7, 659.0], [13.8, 660.0], [13.9, 660.0], [14.0, 661.0], [14.1, 661.0], [14.2, 663.0], [14.3, 665.0], [14.4, 666.0], [14.5, 669.0], [14.6, 671.0], [14.7, 672.0], [14.8, 674.0], [14.9, 674.0], [15.0, 675.0], [15.1, 675.0], [15.2, 679.0], [15.3, 681.0], [15.4, 682.0], [15.5, 683.0], [15.6, 687.0], [15.7, 688.0], [15.8, 689.0], [15.9, 691.0], [16.0, 692.0], [16.1, 692.0], [16.2, 693.0], [16.3, 695.0], [16.4, 695.0], [16.5, 696.0], [16.6, 700.0], [16.7, 701.0], [16.8, 702.0], [16.9, 702.0], [17.0, 704.0], [17.1, 704.0], [17.2, 708.0], [17.3, 715.0], [17.4, 720.0], [17.5, 723.0], [17.6, 724.0], [17.7, 726.0], [17.8, 730.0], [17.9, 734.0], [18.0, 735.0], [18.1, 735.0], [18.2, 739.0], [18.3, 740.0], [18.4, 742.0], [18.5, 743.0], [18.6, 751.0], [18.7, 755.0], [18.8, 764.0], [18.9, 768.0], [19.0, 769.0], [19.1, 769.0], [19.2, 769.0], [19.3, 770.0], [19.4, 772.0], [19.5, 772.0], [19.6, 778.0], [19.7, 779.0], [19.8, 780.0], [19.9, 785.0], [20.0, 788.0], [20.1, 788.0], [20.2, 789.0], [20.3, 791.0], [20.4, 792.0], [20.5, 796.0], [20.6, 799.0], [20.7, 799.0], [20.8, 801.0], [20.9, 805.0], [21.0, 805.0], [21.1, 805.0], [21.2, 811.0], [21.3, 812.0], [21.4, 812.0], [21.5, 814.0], [21.6, 814.0], [21.7, 816.0], [21.8, 816.0], [21.9, 817.0], [22.0, 821.0], [22.1, 821.0], [22.2, 821.0], [22.3, 828.0], [22.4, 830.0], [22.5, 830.0], [22.6, 833.0], [22.7, 834.0], [22.8, 835.0], [22.9, 841.0], [23.0, 842.0], [23.1, 842.0], [23.2, 843.0], [23.3, 843.0], [23.4, 845.0], [23.5, 845.0], [23.6, 858.0], [23.7, 858.0], [23.8, 864.0], [23.9, 867.0], [24.0, 870.0], [24.1, 870.0], [24.2, 870.0], [24.3, 870.0], [24.4, 871.0], [24.5, 873.0], [24.6, 875.0], [24.7, 880.0], [24.8, 882.0], [24.9, 883.0], [25.0, 885.0], [25.1, 885.0], [25.2, 886.0], [25.3, 887.0], [25.4, 887.0], [25.5, 888.0], [25.6, 892.0], [25.7, 899.0], [25.8, 900.0], [25.9, 902.0], [26.0, 906.0], [26.1, 906.0], [26.2, 911.0], [26.3, 913.0], [26.4, 916.0], [26.5, 924.0], [26.6, 928.0], [26.7, 929.0], [26.8, 930.0], [26.9, 932.0], [27.0, 932.0], [27.1, 932.0], [27.2, 934.0], [27.3, 935.0], [27.4, 936.0], [27.5, 936.0], [27.6, 939.0], [27.7, 943.0], [27.8, 945.0], [27.9, 947.0], [28.0, 947.0], [28.1, 947.0], [28.2, 948.0], [28.3, 949.0], [28.4, 951.0], [28.5, 951.0], [28.6, 955.0], [28.7, 956.0], [28.8, 956.0], [28.9, 961.0], [29.0, 962.0], [29.1, 962.0], [29.2, 963.0], [29.3, 964.0], [29.4, 967.0], [29.5, 972.0], [29.6, 976.0], [29.7, 979.0], [29.8, 981.0], [29.9, 983.0], [30.0, 984.0], [30.1, 984.0], [30.2, 984.0], [30.3, 985.0], [30.4, 989.0], [30.5, 990.0], [30.6, 991.0], [30.7, 993.0], [30.8, 996.0], [30.9, 999.0], [31.0, 1000.0], [31.1, 1000.0], [31.2, 1004.0], [31.3, 1007.0], [31.4, 1009.0], [31.5, 1019.0], [31.6, 1019.0], [31.7, 1020.0], [31.8, 1021.0], [31.9, 1023.0], [32.0, 1024.0], [32.1, 1024.0], [32.2, 1026.0], [32.3, 1030.0], [32.4, 1034.0], [32.5, 1035.0], [32.6, 1046.0], [32.7, 1048.0], [32.8, 1050.0], [32.9, 1050.0], [33.0, 1051.0], [33.1, 1051.0], [33.2, 1054.0], [33.3, 1055.0], [33.4, 1056.0], [33.5, 1056.0], [33.6, 1058.0], [33.7, 1059.0], [33.8, 1059.0], [33.9, 1063.0], [34.0, 1063.0], [34.1, 1063.0], [34.2, 1064.0], [34.3, 1069.0], [34.4, 1070.0], [34.5, 1071.0], [34.6, 1071.0], [34.7, 1076.0], [34.8, 1077.0], [34.9, 1077.0], [35.0, 1079.0], [35.1, 1079.0], [35.2, 1081.0], [35.3, 1083.0], [35.4, 1084.0], [35.5, 1085.0], [35.6, 1093.0], [35.7, 1094.0], [35.8, 1095.0], [35.9, 1095.0], [36.0, 1095.0], [36.1, 1095.0], [36.2, 1095.0], [36.3, 1101.0], [36.4, 1102.0], [36.5, 1104.0], [36.6, 1105.0], [36.7, 1106.0], [36.8, 1111.0], [36.9, 1121.0], [37.0, 1124.0], [37.1, 1124.0], [37.2, 1127.0], [37.3, 1128.0], [37.4, 1129.0], [37.5, 1131.0], [37.6, 1133.0], [37.7, 1136.0], [37.8, 1139.0], [37.9, 1140.0], [38.0, 1140.0], [38.1, 1141.0], [38.2, 1145.0], [38.3, 1148.0], [38.4, 1155.0], [38.5, 1158.0], [38.6, 1160.0], [38.7, 1162.0], [38.8, 1162.0], [38.9, 1166.0], [39.0, 1166.0], [39.1, 1169.0], [39.2, 1170.0], [39.3, 1170.0], [39.4, 1172.0], [39.5, 1173.0], [39.6, 1173.0], [39.7, 1179.0], [39.8, 1179.0], [39.9, 1182.0], [40.0, 1182.0], [40.1, 1187.0], [40.2, 1187.0], [40.3, 1187.0], [40.4, 1189.0], [40.5, 1191.0], [40.6, 1193.0], [40.7, 1196.0], [40.8, 1197.0], [40.9, 1198.0], [41.0, 1198.0], [41.1, 1200.0], [41.2, 1200.0], [41.3, 1201.0], [41.4, 1201.0], [41.5, 1202.0], [41.6, 1203.0], [41.7, 1205.0], [41.8, 1205.0], [41.9, 1214.0], [42.0, 1214.0], [42.1, 1214.0], [42.2, 1215.0], [42.3, 1216.0], [42.4, 1216.0], [42.5, 1221.0], [42.6, 1221.0], [42.7, 1223.0], [42.8, 1224.0], [42.9, 1226.0], [43.0, 1226.0], [43.1, 1226.0], [43.2, 1228.0], [43.3, 1232.0], [43.4, 1232.0], [43.5, 1234.0], [43.6, 1234.0], [43.7, 1237.0], [43.8, 1238.0], [43.9, 1238.0], [44.0, 1238.0], [44.1, 1239.0], [44.2, 1240.0], [44.3, 1242.0], [44.4, 1245.0], [44.5, 1245.0], [44.6, 1245.0], [44.7, 1247.0], [44.8, 1251.0], [44.9, 1251.0], [45.0, 1251.0], [45.1, 1254.0], [45.2, 1255.0], [45.3, 1255.0], [45.4, 1256.0], [45.5, 1257.0], [45.6, 1260.0], [45.7, 1261.0], [45.8, 1263.0], [45.9, 1266.0], [46.0, 1266.0], [46.1, 1267.0], [46.2, 1270.0], [46.3, 1278.0], [46.4, 1283.0], [46.5, 1284.0], [46.6, 1286.0], [46.7, 1287.0], [46.8, 1287.0], [46.9, 1290.0], [47.0, 1290.0], [47.1, 1290.0], [47.2, 1291.0], [47.3, 1292.0], [47.4, 1297.0], [47.5, 1299.0], [47.6, 1299.0], [47.7, 1300.0], [47.8, 1301.0], [47.9, 1302.0], [48.0, 1302.0], [48.1, 1302.0], [48.2, 1302.0], [48.3, 1304.0], [48.4, 1306.0], [48.5, 1307.0], [48.6, 1311.0], [48.7, 1314.0], [48.8, 1315.0], [48.9, 1316.0], [49.0, 1316.0], [49.1, 1319.0], [49.2, 1320.0], [49.3, 1320.0], [49.4, 1323.0], [49.5, 1324.0], [49.6, 1324.0], [49.7, 1327.0], [49.8, 1328.0], [49.9, 1329.0], [50.0, 1329.0], [50.1, 1330.0], [50.2, 1331.0], [50.3, 1336.0], [50.4, 1336.0], [50.5, 1336.0], [50.6, 1337.0], [50.7, 1337.0], [50.8, 1345.0], [50.9, 1346.0], [51.0, 1346.0], [51.1, 1352.0], [51.2, 1354.0], [51.3, 1354.0], [51.4, 1356.0], [51.5, 1358.0], [51.6, 1360.0], [51.7, 1361.0], [51.8, 1364.0], [51.9, 1365.0], [52.0, 1365.0], [52.1, 1376.0], [52.2, 1376.0], [52.3, 1379.0], [52.4, 1396.0], [52.5, 1398.0], [52.6, 1399.0], [52.7, 1401.0], [52.8, 1405.0], [52.9, 1407.0], [53.0, 1407.0], [53.1, 1410.0], [53.2, 1410.0], [53.3, 1410.0], [53.4, 1411.0], [53.5, 1416.0], [53.6, 1423.0], [53.7, 1425.0], [53.8, 1426.0], [53.9, 1426.0], [54.0, 1426.0], [54.1, 1429.0], [54.2, 1431.0], [54.3, 1432.0], [54.4, 1438.0], [54.5, 1439.0], [54.6, 1439.0], [54.7, 1439.0], [54.8, 1443.0], [54.9, 1443.0], [55.0, 1443.0], [55.1, 1444.0], [55.2, 1447.0], [55.3, 1448.0], [55.4, 1449.0], [55.5, 1450.0], [55.6, 1451.0], [55.7, 1452.0], [55.8, 1453.0], [55.9, 1453.0], [56.0, 1453.0], [56.1, 1453.0], [56.2, 1460.0], [56.3, 1465.0], [56.4, 1467.0], [56.5, 1468.0], [56.6, 1470.0], [56.7, 1475.0], [56.8, 1479.0], [56.9, 1479.0], [57.0, 1479.0], [57.1, 1479.0], [57.2, 1481.0], [57.3, 1482.0], [57.4, 1483.0], [57.5, 1484.0], [57.6, 1484.0], [57.7, 1487.0], [57.8, 1492.0], [57.9, 1494.0], [58.0, 1494.0], [58.1, 1496.0], [58.2, 1498.0], [58.3, 1500.0], [58.4, 1500.0], [58.5, 1500.0], [58.6, 1502.0], [58.7, 1506.0], [58.8, 1510.0], [58.9, 1512.0], [59.0, 1512.0], [59.1, 1514.0], [59.2, 1516.0], [59.3, 1517.0], [59.4, 1520.0], [59.5, 1533.0], [59.6, 1537.0], [59.7, 1538.0], [59.8, 1540.0], [59.9, 1547.0], [60.0, 1547.0], [60.1, 1548.0], [60.2, 1548.0], [60.3, 1549.0], [60.4, 1554.0], [60.5, 1554.0], [60.6, 1554.0], [60.7, 1562.0], [60.8, 1563.0], [60.9, 1565.0], [61.0, 1565.0], [61.1, 1569.0], [61.2, 1573.0], [61.3, 1573.0], [61.4, 1575.0], [61.5, 1577.0], [61.6, 1580.0], [61.7, 1581.0], [61.8, 1584.0], [61.9, 1585.0], [62.0, 1585.0], [62.1, 1592.0], [62.2, 1593.0], [62.3, 1598.0], [62.4, 1598.0], [62.5, 1599.0], [62.6, 1600.0], [62.7, 1604.0], [62.8, 1606.0], [62.9, 1607.0], [63.0, 1607.0], [63.1, 1607.0], [63.2, 1607.0], [63.3, 1608.0], [63.4, 1608.0], [63.5, 1611.0], [63.6, 1614.0], [63.7, 1617.0], [63.8, 1618.0], [63.9, 1621.0], [64.0, 1621.0], [64.1, 1623.0], [64.2, 1623.0], [64.3, 1624.0], [64.4, 1626.0], [64.5, 1635.0], [64.6, 1635.0], [64.7, 1637.0], [64.8, 1637.0], [64.9, 1638.0], [65.0, 1638.0], [65.1, 1640.0], [65.2, 1644.0], [65.3, 1645.0], [65.4, 1649.0], [65.5, 1650.0], [65.6, 1651.0], [65.7, 1654.0], [65.8, 1659.0], [65.9, 1664.0], [66.0, 1664.0], [66.1, 1664.0], [66.2, 1664.0], [66.3, 1665.0], [66.4, 1666.0], [66.5, 1667.0], [66.6, 1671.0], [66.7, 1678.0], [66.8, 1678.0], [66.9, 1687.0], [67.0, 1687.0], [67.1, 1687.0], [67.2, 1700.0], [67.3, 1701.0], [67.4, 1705.0], [67.5, 1705.0], [67.6, 1709.0], [67.7, 1718.0], [67.8, 1719.0], [67.9, 1721.0], [68.0, 1721.0], [68.1, 1725.0], [68.2, 1739.0], [68.3, 1758.0], [68.4, 1759.0], [68.5, 1764.0], [68.6, 1764.0], [68.7, 1775.0], [68.8, 1788.0], [68.9, 1791.0], [69.0, 1791.0], [69.1, 1802.0], [69.2, 1804.0], [69.3, 1814.0], [69.4, 1822.0], [69.5, 1828.0], [69.6, 1835.0], [69.7, 1840.0], [69.8, 1846.0], [69.9, 1848.0], [70.0, 1848.0], [70.1, 1858.0], [70.2, 1864.0], [70.3, 1867.0], [70.4, 1871.0], [70.5, 1874.0], [70.6, 1882.0], [70.7, 1883.0], [70.8, 1883.0], [70.9, 1896.0], [71.0, 1896.0], [71.1, 1922.0], [71.2, 1928.0], [71.3, 1929.0], [71.4, 1930.0], [71.5, 1931.0], [71.6, 1934.0], [71.7, 1935.0], [71.8, 1936.0], [71.9, 1939.0], [72.0, 1939.0], [72.1, 1940.0], [72.2, 1942.0], [72.3, 1946.0], [72.4, 1947.0], [72.5, 1947.0], [72.6, 1948.0], [72.7, 1951.0], [72.8, 1952.0], [72.9, 1952.0], [73.0, 1952.0], [73.1, 1954.0], [73.2, 1965.0], [73.3, 1968.0], [73.4, 1968.0], [73.5, 1969.0], [73.6, 1975.0], [73.7, 1975.0], [73.8, 1987.0], [73.9, 1987.0], [74.0, 1987.0], [74.1, 1987.0], [74.2, 1988.0], [74.3, 1996.0], [74.4, 1997.0], [74.5, 2001.0], [74.6, 2002.0], [74.7, 2003.0], [74.8, 2007.0], [74.9, 2010.0], [75.0, 2010.0], [75.1, 2018.0], [75.2, 2018.0], [75.3, 2020.0], [75.4, 2021.0], [75.5, 2021.0], [75.6, 2024.0], [75.7, 2028.0], [75.8, 2029.0], [75.9, 2031.0], [76.0, 2031.0], [76.1, 2036.0], [76.2, 2044.0], [76.3, 2044.0], [76.4, 2048.0], [76.5, 2048.0], [76.6, 2048.0], [76.7, 2049.0], [76.8, 2051.0], [76.9, 2053.0], [77.0, 2053.0], [77.1, 2055.0], [77.2, 2055.0], [77.3, 2056.0], [77.4, 2059.0], [77.5, 2061.0], [77.6, 2065.0], [77.7, 2069.0], [77.8, 2071.0], [77.9, 2071.0], [78.0, 2071.0], [78.1, 2071.0], [78.2, 2073.0], [78.3, 2074.0], [78.4, 2076.0], [78.5, 2080.0], [78.6, 2089.0], [78.7, 2089.0], [78.8, 2109.0], [78.9, 2109.0], [79.0, 2109.0], [79.1, 2109.0], [79.2, 2113.0], [79.3, 2116.0], [79.4, 2117.0], [79.5, 2120.0], [79.6, 2121.0], [79.7, 2123.0], [79.8, 2124.0], [79.9, 2134.0], [80.0, 2134.0], [80.1, 2134.0], [80.2, 2136.0], [80.3, 2140.0], [80.4, 2145.0], [80.5, 2154.0], [80.6, 2154.0], [80.7, 2159.0], [80.8, 2163.0], [80.9, 2167.0], [81.0, 2167.0], [81.1, 2168.0], [81.2, 2176.0], [81.3, 2176.0], [81.4, 2178.0], [81.5, 2181.0], [81.6, 2182.0], [81.7, 2183.0], [81.8, 2187.0], [81.9, 2194.0], [82.0, 2194.0], [82.1, 2202.0], [82.2, 2203.0], [82.3, 2205.0], [82.4, 2209.0], [82.5, 2217.0], [82.6, 2218.0], [82.7, 2221.0], [82.8, 2222.0], [82.9, 2225.0], [83.0, 2225.0], [83.1, 2231.0], [83.2, 2235.0], [83.3, 2237.0], [83.4, 2241.0], [83.5, 2241.0], [83.6, 2247.0], [83.7, 2250.0], [83.8, 2264.0], [83.9, 2264.0], [84.0, 2264.0], [84.1, 2265.0], [84.2, 2266.0], [84.3, 2276.0], [84.4, 2278.0], [84.5, 2282.0], [84.6, 2295.0], [84.7, 2296.0], [84.8, 2299.0], [84.9, 2308.0], [85.0, 2308.0], [85.1, 2314.0], [85.2, 2319.0], [85.3, 2330.0], [85.4, 2341.0], [85.5, 2344.0], [85.6, 2345.0], [85.7, 2346.0], [85.8, 2348.0], [85.9, 2352.0], [86.0, 2352.0], [86.1, 2355.0], [86.2, 2357.0], [86.3, 2364.0], [86.4, 2367.0], [86.5, 2368.0], [86.6, 2384.0], [86.7, 2389.0], [86.8, 2398.0], [86.9, 2400.0], [87.0, 2400.0], [87.1, 2403.0], [87.2, 2404.0], [87.3, 2404.0], [87.4, 2409.0], [87.5, 2410.0], [87.6, 2415.0], [87.7, 2419.0], [87.8, 2420.0], [87.9, 2426.0], [88.0, 2426.0], [88.1, 2427.0], [88.2, 2438.0], [88.3, 2455.0], [88.4, 2468.0], [88.5, 2470.0], [88.6, 2473.0], [88.7, 2477.0], [88.8, 2480.0], [88.9, 2484.0], [89.0, 2484.0], [89.1, 2484.0], [89.2, 2488.0], [89.3, 2490.0], [89.4, 2492.0], [89.5, 2495.0], [89.6, 2497.0], [89.7, 2520.0], [89.8, 2532.0], [89.9, 2535.0], [90.0, 2535.0], [90.1, 2543.0], [90.2, 2544.0], [90.3, 2544.0], [90.4, 2549.0], [90.5, 2559.0], [90.6, 2562.0], [90.7, 2562.0], [90.8, 2569.0], [90.9, 2584.0], [91.0, 2584.0], [91.1, 2594.0], [91.2, 2604.0], [91.3, 2610.0], [91.4, 2610.0], [91.5, 2612.0], [91.6, 2615.0], [91.7, 2625.0], [91.8, 2627.0], [91.9, 2636.0], [92.0, 2636.0], [92.1, 2661.0], [92.2, 2676.0], [92.3, 2692.0], [92.4, 2697.0], [92.5, 2728.0], [92.6, 2744.0], [92.7, 2757.0], [92.8, 2757.0], [92.9, 2768.0], [93.0, 2768.0], [93.1, 2775.0], [93.2, 2775.0], [93.3, 2784.0], [93.4, 2798.0], [93.5, 2803.0], [93.6, 2806.0], [93.7, 2809.0], [93.8, 2811.0], [93.9, 2828.0], [94.0, 2828.0], [94.1, 2832.0], [94.2, 2863.0], [94.3, 2876.0], [94.4, 2881.0], [94.5, 2888.0], [94.6, 2895.0], [94.7, 2895.0], [94.8, 2896.0], [94.9, 2903.0], [95.0, 2903.0], [95.1, 2906.0], [95.2, 2912.0], [95.3, 2916.0], [95.4, 2919.0], [95.5, 2934.0], [95.6, 2935.0], [95.7, 2944.0], [95.8, 2981.0], [95.9, 2996.0], [96.0, 2996.0], [96.1, 2997.0], [96.2, 3006.0], [96.3, 3008.0], [96.4, 3011.0], [96.5, 3029.0], [96.6, 3036.0], [96.7, 3044.0], [96.8, 3052.0], [96.9, 3066.0], [97.0, 3066.0], [97.1, 3068.0], [97.2, 3097.0], [97.3, 3099.0], [97.4, 3109.0], [97.5, 3127.0], [97.6, 3132.0], [97.7, 3146.0], [97.8, 3149.0], [97.9, 3164.0], [98.0, 3164.0], [98.1, 3173.0], [98.2, 3193.0], [98.3, 3198.0], [98.4, 3213.0], [98.5, 3229.0], [98.6, 3237.0], [98.7, 3260.0], [98.8, 3264.0], [98.9, 3270.0], [99.0, 3270.0], [99.1, 3272.0], [99.2, 3324.0], [99.3, 3364.0], [99.4, 3373.0], [99.5, 3385.0], [99.6, 3405.0], [99.7, 3433.0], [99.8, 3511.0], [99.9, 3626.0], [100.0, 3626.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 27.0], [0.1, 27.0], [0.2, 47.0], [0.3, 51.0], [0.4, 52.0], [0.5, 55.0], [0.6, 74.0], [0.7, 75.0], [0.8, 76.0], [0.9, 79.0], [1.0, 79.0], [1.1, 86.0], [1.2, 86.0], [1.3, 90.0], [1.4, 93.0], [1.5, 94.0], [1.6, 108.0], [1.7, 111.0], [1.8, 116.0], [1.9, 117.0], [2.0, 117.0], [2.1, 121.0], [2.2, 122.0], [2.3, 133.0], [2.4, 136.0], [2.5, 143.0], [2.6, 152.0], [2.7, 158.0], [2.8, 160.0], [2.9, 169.0], [3.0, 169.0], [3.1, 188.0], [3.2, 191.0], [3.3, 194.0], [3.4, 195.0], [3.5, 200.0], [3.6, 201.0], [3.7, 214.0], [3.8, 216.0], [3.9, 217.0], [4.0, 217.0], [4.1, 218.0], [4.2, 223.0], [4.3, 223.0], [4.4, 227.0], [4.5, 229.0], [4.6, 231.0], [4.7, 231.0], [4.8, 237.0], [4.9, 241.0], [5.0, 247.0], [5.1, 247.0], [5.2, 248.0], [5.3, 265.0], [5.4, 275.0], [5.5, 275.0], [5.6, 278.0], [5.7, 278.0], [5.8, 281.0], [5.9, 283.0], [6.0, 284.0], [6.1, 284.0], [6.2, 284.0], [6.3, 288.0], [6.4, 288.0], [6.5, 289.0], [6.6, 295.0], [6.7, 302.0], [6.8, 302.0], [6.9, 310.0], [7.0, 317.0], [7.1, 317.0], [7.2, 319.0], [7.3, 320.0], [7.4, 321.0], [7.5, 324.0], [7.6, 325.0], [7.7, 325.0], [7.8, 326.0], [7.9, 333.0], [8.0, 334.0], [8.1, 334.0], [8.2, 336.0], [8.3, 337.0], [8.4, 338.0], [8.5, 339.0], [8.6, 339.0], [8.7, 344.0], [8.8, 344.0], [8.9, 345.0], [9.0, 345.0], [9.1, 345.0], [9.2, 346.0], [9.3, 350.0], [9.4, 353.0], [9.5, 355.0], [9.6, 356.0], [9.7, 356.0], [9.8, 359.0], [9.9, 360.0], [10.0, 367.0], [10.1, 367.0], [10.2, 375.0], [10.3, 375.0], [10.4, 381.0], [10.5, 384.0], [10.6, 385.0], [10.7, 385.0], [10.8, 389.0], [10.9, 401.0], [11.0, 401.0], [11.1, 401.0], [11.2, 403.0], [11.3, 404.0], [11.4, 405.0], [11.5, 405.0], [11.6, 407.0], [11.7, 411.0], [11.8, 412.0], [11.9, 420.0], [12.0, 424.0], [12.1, 424.0], [12.2, 427.0], [12.3, 427.0], [12.4, 428.0], [12.5, 436.0], [12.6, 439.0], [12.7, 440.0], [12.8, 443.0], [12.9, 449.0], [13.0, 451.0], [13.1, 451.0], [13.2, 453.0], [13.3, 453.0], [13.4, 454.0], [13.5, 454.0], [13.6, 455.0], [13.7, 455.0], [13.8, 459.0], [13.9, 461.0], [14.0, 461.0], [14.1, 461.0], [14.2, 461.0], [14.3, 463.0], [14.4, 464.0], [14.5, 464.0], [14.6, 467.0], [14.7, 468.0], [14.8, 469.0], [14.9, 471.0], [15.0, 472.0], [15.1, 472.0], [15.2, 472.0], [15.3, 477.0], [15.4, 485.0], [15.5, 485.0], [15.6, 486.0], [15.7, 486.0], [15.8, 487.0], [15.9, 487.0], [16.0, 491.0], [16.1, 491.0], [16.2, 493.0], [16.3, 493.0], [16.4, 494.0], [16.5, 495.0], [16.6, 495.0], [16.7, 495.0], [16.8, 496.0], [16.9, 497.0], [17.0, 498.0], [17.1, 498.0], [17.2, 498.0], [17.3, 499.0], [17.4, 499.0], [17.5, 503.0], [17.6, 504.0], [17.7, 504.0], [17.8, 505.0], [17.9, 506.0], [18.0, 506.0], [18.1, 506.0], [18.2, 507.0], [18.3, 507.0], [18.4, 509.0], [18.5, 509.0], [18.6, 509.0], [18.7, 510.0], [18.8, 511.0], [18.9, 511.0], [19.0, 512.0], [19.1, 512.0], [19.2, 513.0], [19.3, 513.0], [19.4, 515.0], [19.5, 517.0], [19.6, 517.0], [19.7, 520.0], [19.8, 520.0], [19.9, 525.0], [20.0, 525.0], [20.1, 525.0], [20.2, 525.0], [20.3, 526.0], [20.4, 526.0], [20.5, 526.0], [20.6, 527.0], [20.7, 527.0], [20.8, 528.0], [20.9, 532.0], [21.0, 535.0], [21.1, 535.0], [21.2, 536.0], [21.3, 536.0], [21.4, 537.0], [21.5, 540.0], [21.6, 545.0], [21.7, 550.0], [21.8, 551.0], [21.9, 552.0], [22.0, 553.0], [22.1, 553.0], [22.2, 556.0], [22.3, 556.0], [22.4, 557.0], [22.5, 560.0], [22.6, 560.0], [22.7, 560.0], [22.8, 561.0], [22.9, 561.0], [23.0, 562.0], [23.1, 562.0], [23.2, 563.0], [23.3, 564.0], [23.4, 565.0], [23.5, 565.0], [23.6, 567.0], [23.7, 567.0], [23.8, 569.0], [23.9, 569.0], [24.0, 571.0], [24.1, 571.0], [24.2, 571.0], [24.3, 572.0], [24.4, 572.0], [24.5, 573.0], [24.6, 573.0], [24.7, 575.0], [24.8, 575.0], [24.9, 576.0], [25.0, 577.0], [25.1, 577.0], [25.2, 577.0], [25.3, 584.0], [25.4, 584.0], [25.5, 588.0], [25.6, 588.0], [25.7, 589.0], [25.8, 590.0], [25.9, 590.0], [26.0, 591.0], [26.1, 591.0], [26.2, 592.0], [26.3, 593.0], [26.4, 593.0], [26.5, 594.0], [26.6, 595.0], [26.7, 595.0], [26.8, 595.0], [26.9, 597.0], [27.0, 597.0], [27.1, 597.0], [27.2, 598.0], [27.3, 600.0], [27.4, 600.0], [27.5, 600.0], [27.6, 603.0], [27.7, 603.0], [27.8, 605.0], [27.9, 606.0], [28.0, 609.0], [28.1, 609.0], [28.2, 610.0], [28.3, 611.0], [28.4, 611.0], [28.5, 611.0], [28.6, 611.0], [28.7, 615.0], [28.8, 615.0], [28.9, 618.0], [29.0, 618.0], [29.1, 618.0], [29.2, 618.0], [29.3, 620.0], [29.4, 620.0], [29.5, 624.0], [29.6, 624.0], [29.7, 625.0], [29.8, 626.0], [29.9, 626.0], [30.0, 626.0], [30.1, 626.0], [30.2, 627.0], [30.3, 627.0], [30.4, 628.0], [30.5, 628.0], [30.6, 629.0], [30.7, 630.0], [30.8, 634.0], [30.9, 636.0], [31.0, 636.0], [31.1, 636.0], [31.2, 637.0], [31.3, 637.0], [31.4, 637.0], [31.5, 641.0], [31.6, 642.0], [31.7, 643.0], [31.8, 643.0], [31.9, 644.0], [32.0, 646.0], [32.1, 646.0], [32.2, 647.0], [32.3, 647.0], [32.4, 649.0], [32.5, 652.0], [32.6, 652.0], [32.7, 652.0], [32.8, 653.0], [32.9, 653.0], [33.0, 655.0], [33.1, 655.0], [33.2, 656.0], [33.3, 656.0], [33.4, 657.0], [33.5, 659.0], [33.6, 659.0], [33.7, 660.0], [33.8, 663.0], [33.9, 665.0], [34.0, 671.0], [34.1, 671.0], [34.2, 672.0], [34.3, 674.0], [34.4, 676.0], [34.5, 677.0], [34.6, 677.0], [34.7, 678.0], [34.8, 678.0], [34.9, 678.0], [35.0, 679.0], [35.1, 679.0], [35.2, 682.0], [35.3, 683.0], [35.4, 689.0], [35.5, 691.0], [35.6, 692.0], [35.7, 692.0], [35.8, 693.0], [35.9, 695.0], [36.0, 696.0], [36.1, 696.0], [36.2, 696.0], [36.3, 697.0], [36.4, 701.0], [36.5, 702.0], [36.6, 703.0], [36.7, 704.0], [36.8, 705.0], [36.9, 705.0], [37.0, 708.0], [37.1, 708.0], [37.2, 708.0], [37.3, 710.0], [37.4, 710.0], [37.5, 711.0], [37.6, 712.0], [37.7, 715.0], [37.8, 715.0], [37.9, 715.0], [38.0, 716.0], [38.1, 716.0], [38.2, 720.0], [38.3, 725.0], [38.4, 732.0], [38.5, 737.0], [38.6, 739.0], [38.7, 745.0], [38.8, 746.0], [38.9, 746.0], [39.0, 746.0], [39.1, 747.0], [39.2, 747.0], [39.3, 748.0], [39.4, 749.0], [39.5, 750.0], [39.6, 752.0], [39.7, 752.0], [39.8, 753.0], [39.9, 753.0], [40.0, 753.0], [40.1, 761.0], [40.2, 761.0], [40.3, 767.0], [40.4, 772.0], [40.5, 774.0], [40.6, 776.0], [40.7, 776.0], [40.8, 776.0], [40.9, 777.0], [41.0, 777.0], [41.1, 778.0], [41.2, 783.0], [41.3, 783.0], [41.4, 783.0], [41.5, 792.0], [41.6, 793.0], [41.7, 800.0], [41.8, 801.0], [41.9, 808.0], [42.0, 808.0], [42.1, 810.0], [42.2, 820.0], [42.3, 822.0], [42.4, 822.0], [42.5, 823.0], [42.6, 823.0], [42.7, 824.0], [42.8, 827.0], [42.9, 827.0], [43.0, 827.0], [43.1, 831.0], [43.2, 832.0], [43.3, 833.0], [43.4, 835.0], [43.5, 837.0], [43.6, 840.0], [43.7, 841.0], [43.8, 845.0], [43.9, 846.0], [44.0, 846.0], [44.1, 851.0], [44.2, 851.0], [44.3, 853.0], [44.4, 854.0], [44.5, 857.0], [44.6, 861.0], [44.7, 866.0], [44.8, 873.0], [44.9, 873.0], [45.0, 873.0], [45.1, 873.0], [45.2, 875.0], [45.3, 886.0], [45.4, 891.0], [45.5, 895.0], [45.6, 896.0], [45.7, 897.0], [45.8, 897.0], [45.9, 898.0], [46.0, 898.0], [46.1, 898.0], [46.2, 904.0], [46.3, 911.0], [46.4, 923.0], [46.5, 925.0], [46.6, 926.0], [46.7, 929.0], [46.8, 929.0], [46.9, 936.0], [47.0, 936.0], [47.1, 945.0], [47.2, 947.0], [47.3, 951.0], [47.4, 959.0], [47.5, 959.0], [47.6, 960.0], [47.7, 964.0], [47.8, 964.0], [47.9, 967.0], [48.0, 967.0], [48.1, 972.0], [48.2, 976.0], [48.3, 977.0], [48.4, 978.0], [48.5, 983.0], [48.6, 983.0], [48.7, 996.0], [48.8, 1017.0], [48.9, 1017.0], [49.0, 1017.0], [49.1, 1019.0], [49.2, 1021.0], [49.3, 1021.0], [49.4, 1025.0], [49.5, 1031.0], [49.6, 1035.0], [49.7, 1037.0], [49.8, 1042.0], [49.9, 1047.0], [50.0, 1047.0], [50.1, 1056.0], [50.2, 1062.0], [50.3, 1067.0], [50.4, 1069.0], [50.5, 1074.0], [50.6, 1074.0], [50.7, 1083.0], [50.8, 1084.0], [50.9, 1086.0], [51.0, 1086.0], [51.1, 1101.0], [51.2, 1104.0], [51.3, 1108.0], [51.4, 1112.0], [51.5, 1123.0], [51.6, 1128.0], [51.7, 1129.0], [51.8, 1130.0], [51.9, 1136.0], [52.0, 1136.0], [52.1, 1137.0], [52.2, 1142.0], [52.3, 1143.0], [52.4, 1157.0], [52.5, 1161.0], [52.6, 1168.0], [52.7, 1176.0], [52.8, 1179.0], [52.9, 1183.0], [53.0, 1183.0], [53.1, 1186.0], [53.2, 1204.0], [53.3, 1215.0], [53.4, 1217.0], [53.5, 1217.0], [53.6, 1224.0], [53.7, 1243.0], [53.8, 1243.0], [53.9, 1260.0], [54.0, 1260.0], [54.1, 1268.0], [54.2, 1275.0], [54.3, 1277.0], [54.4, 1289.0], [54.5, 1291.0], [54.6, 1309.0], [54.7, 1320.0], [54.8, 1322.0], [54.9, 1333.0], [55.0, 1333.0], [55.1, 1346.0], [55.2, 1359.0], [55.3, 1370.0], [55.4, 1372.0], [55.5, 1374.0], [55.6, 1384.0], [55.7, 1384.0], [55.8, 1396.0], [55.9, 1404.0], [56.0, 1404.0], [56.1, 1405.0], [56.2, 1411.0], [56.3, 1414.0], [56.4, 1418.0], [56.5, 1423.0], [56.6, 1436.0], [56.7, 1446.0], [56.8, 1452.0], [56.9, 1456.0], [57.0, 1456.0], [57.1, 1465.0], [57.2, 1468.0], [57.3, 1471.0], [57.4, 1492.0], [57.5, 1494.0], [57.6, 1499.0], [57.7, 1506.0], [57.8, 1509.0], [57.9, 1519.0], [58.0, 1519.0], [58.1, 1524.0], [58.2, 1528.0], [58.3, 1531.0], [58.4, 1535.0], [58.5, 1546.0], [58.6, 1569.0], [58.7, 1569.0], [58.8, 1571.0], [58.9, 1572.0], [59.0, 1572.0], [59.1, 1572.0], [59.2, 1572.0], [59.3, 1599.0], [59.4, 1631.0], [59.5, 1650.0], [59.6, 1652.0], [59.7, 1655.0], [59.8, 1660.0], [59.9, 1668.0], [60.0, 1668.0], [60.1, 1680.0], [60.2, 1733.0], [60.3, 1736.0], [60.4, 1739.0], [60.5, 1742.0], [60.6, 1770.0], [60.7, 1784.0], [60.8, 1787.0], [60.9, 1793.0], [61.0, 1793.0], [61.1, 1808.0], [61.2, 1824.0], [61.3, 1826.0], [61.4, 1832.0], [61.5, 1843.0], [61.6, 1847.0], [61.7, 1852.0], [61.8, 1877.0], [61.9, 1886.0], [62.0, 1886.0], [62.1, 1893.0], [62.2, 1894.0], [62.3, 1894.0], [62.4, 1906.0], [62.5, 1908.0], [62.6, 1914.0], [62.7, 1915.0], [62.8, 1918.0], [62.9, 1923.0], [63.0, 1923.0], [63.1, 1925.0], [63.2, 1926.0], [63.3, 1928.0], [63.4, 1940.0], [63.5, 1943.0], [63.6, 1945.0], [63.7, 1957.0], [63.8, 1978.0], [63.9, 1984.0], [64.0, 1984.0], [64.1, 1987.0], [64.2, 1992.0], [64.3, 1995.0], [64.4, 2002.0], [64.5, 2004.0], [64.6, 2005.0], [64.7, 2011.0], [64.8, 2038.0], [64.9, 2055.0], [65.0, 2055.0], [65.1, 2071.0], [65.2, 2079.0], [65.3, 2079.0], [65.4, 2092.0], [65.5, 2102.0], [65.6, 2131.0], [65.7, 2146.0], [65.8, 2147.0], [65.9, 2156.0], [66.0, 2156.0], [66.1, 2169.0], [66.2, 2176.0], [66.3, 2191.0], [66.4, 2203.0], [66.5, 2205.0], [66.6, 2229.0], [66.7, 2239.0], [66.8, 2244.0], [66.9, 2351.0], [67.0, 2351.0], [67.1, 2361.0], [67.2, 2383.0], [67.3, 2389.0], [67.4, 2424.0], [67.5, 2439.0], [67.6, 2449.0], [67.7, 2477.0], [67.8, 2520.0], [67.9, 2533.0], [68.0, 2533.0], [68.1, 2548.0], [68.2, 2596.0], [68.3, 2627.0], [68.4, 2632.0], [68.5, 2632.0], [68.6, 2654.0], [68.7, 2655.0], [68.8, 2660.0], [68.9, 2703.0], [69.0, 2703.0], [69.1, 2713.0], [69.2, 2713.0], [69.3, 2731.0], [69.4, 2752.0], [69.5, 2772.0], [69.6, 2865.0], [69.7, 2884.0], [69.8, 2927.0], [69.9, 2998.0], [70.0, 2998.0], [70.1, 3001.0], [70.2, 3036.0], [70.3, 3039.0], [70.4, 3063.0], [70.5, 3070.0], [70.6, 3079.0], [70.7, 3086.0], [70.8, 3088.0], [70.9, 3090.0], [71.0, 3090.0], [71.1, 3096.0], [71.2, 3107.0], [71.3, 3130.0], [71.4, 3162.0], [71.5, 3184.0], [71.6, 3187.0], [71.7, 3193.0], [71.8, 3193.0], [71.9, 3195.0], [72.0, 3195.0], [72.1, 3222.0], [72.2, 3224.0], [72.3, 3225.0], [72.4, 3231.0], [72.5, 3243.0], [72.6, 3255.0], [72.7, 3258.0], [72.8, 3270.0], [72.9, 3271.0], [73.0, 3271.0], [73.1, 3281.0], [73.2, 3324.0], [73.3, 3324.0], [73.4, 3329.0], [73.5, 3332.0], [73.6, 3339.0], [73.7, 3351.0], [73.8, 3380.0], [73.9, 3392.0], [74.0, 3392.0], [74.1, 3394.0], [74.2, 3419.0], [74.3, 3464.0], [74.4, 3520.0], [74.5, 3527.0], [74.6, 3560.0], [74.7, 3562.0], [74.8, 3565.0], [74.9, 3589.0], [75.0, 3589.0], [75.1, 3592.0], [75.2, 3594.0], [75.3, 3601.0], [75.4, 3620.0], [75.5, 3623.0], [75.6, 3652.0], [75.7, 3736.0], [75.8, 3742.0], [75.9, 3748.0], [76.0, 3748.0], [76.1, 3757.0], [76.2, 3766.0], [76.3, 3768.0], [76.4, 3769.0], [76.5, 3771.0], [76.6, 3771.0], [76.7, 3771.0], [76.8, 3772.0], [76.9, 3774.0], [77.0, 3774.0], [77.1, 3774.0], [77.2, 3774.0], [77.3, 3774.0], [77.4, 3774.0], [77.5, 3775.0], [77.6, 3775.0], [77.7, 3775.0], [77.8, 3775.0], [77.9, 3775.0], [78.0, 3775.0], [78.1, 3777.0], [78.2, 3778.0], [78.3, 3778.0], [78.4, 3778.0], [78.5, 3779.0], [78.6, 3779.0], [78.7, 3779.0], [78.8, 3780.0], [78.9, 3780.0], [79.0, 3780.0], [79.1, 3781.0], [79.2, 3781.0], [79.3, 3781.0], [79.4, 3782.0], [79.5, 3782.0], [79.6, 3782.0], [79.7, 3782.0], [79.8, 3782.0], [79.9, 3782.0], [80.0, 3782.0], [80.1, 3783.0], [80.2, 3783.0], [80.3, 3784.0], [80.4, 3785.0], [80.5, 3785.0], [80.6, 3786.0], [80.7, 3786.0], [80.8, 3786.0], [80.9, 3787.0], [81.0, 3787.0], [81.1, 3787.0], [81.2, 3788.0], [81.3, 3788.0], [81.4, 3789.0], [81.5, 3789.0], [81.6, 3789.0], [81.7, 3790.0], [81.8, 3791.0], [81.9, 3792.0], [82.0, 3792.0], [82.1, 3792.0], [82.2, 3792.0], [82.3, 3793.0], [82.4, 3794.0], [82.5, 3794.0], [82.6, 3795.0], [82.7, 3795.0], [82.8, 3796.0], [82.9, 3796.0], [83.0, 3796.0], [83.1, 3796.0], [83.2, 3796.0], [83.3, 3797.0], [83.4, 3797.0], [83.5, 3797.0], [83.6, 3798.0], [83.7, 3798.0], [83.8, 3798.0], [83.9, 3798.0], [84.0, 3798.0], [84.1, 3799.0], [84.2, 3799.0], [84.3, 3799.0], [84.4, 3800.0], [84.5, 3800.0], [84.6, 3800.0], [84.7, 3801.0], [84.8, 3801.0], [84.9, 3801.0], [85.0, 3801.0], [85.1, 3802.0], [85.2, 3802.0], [85.3, 3802.0], [85.4, 3802.0], [85.5, 3802.0], [85.6, 3802.0], [85.7, 3803.0], [85.8, 3803.0], [85.9, 3804.0], [86.0, 3804.0], [86.1, 3804.0], [86.2, 3804.0], [86.3, 3804.0], [86.4, 3804.0], [86.5, 3805.0], [86.6, 3805.0], [86.7, 3805.0], [86.8, 3807.0], [86.9, 3807.0], [87.0, 3807.0], [87.1, 3807.0], [87.2, 3807.0], [87.3, 3808.0], [87.4, 3808.0], [87.5, 3808.0], [87.6, 3808.0], [87.7, 3808.0], [87.8, 3808.0], [87.9, 3809.0], [88.0, 3809.0], [88.1, 3809.0], [88.2, 3809.0], [88.3, 3809.0], [88.4, 3809.0], [88.5, 3810.0], [88.6, 3810.0], [88.7, 3810.0], [88.8, 3810.0], [88.9, 3810.0], [89.0, 3810.0], [89.1, 3811.0], [89.2, 3811.0], [89.3, 3811.0], [89.4, 3812.0], [89.5, 3813.0], [89.6, 3813.0], [89.7, 3813.0], [89.8, 3813.0], [89.9, 3813.0], [90.0, 3813.0], [90.1, 3813.0], [90.2, 3813.0], [90.3, 3814.0], [90.4, 3814.0], [90.5, 3814.0], [90.6, 3815.0], [90.7, 3815.0], [90.8, 3816.0], [90.9, 3816.0], [91.0, 3816.0], [91.1, 3816.0], [91.2, 3816.0], [91.3, 3817.0], [91.4, 3817.0], [91.5, 3818.0], [91.6, 3818.0], [91.7, 3818.0], [91.8, 3819.0], [91.9, 3819.0], [92.0, 3819.0], [92.1, 3819.0], [92.2, 3819.0], [92.3, 3820.0], [92.4, 3820.0], [92.5, 3820.0], [92.6, 3820.0], [92.7, 3820.0], [92.8, 3820.0], [92.9, 3821.0], [93.0, 3821.0], [93.1, 3821.0], [93.2, 3821.0], [93.3, 3822.0], [93.4, 3822.0], [93.5, 3823.0], [93.6, 3823.0], [93.7, 3824.0], [93.8, 3824.0], [93.9, 3824.0], [94.0, 3824.0], [94.1, 3825.0], [94.2, 3826.0], [94.3, 3826.0], [94.4, 3826.0], [94.5, 3826.0], [94.6, 3826.0], [94.7, 3826.0], [94.8, 3826.0], [94.9, 3827.0], [95.0, 3827.0], [95.1, 3827.0], [95.2, 3827.0], [95.3, 3828.0], [95.4, 3828.0], [95.5, 3828.0], [95.6, 3828.0], [95.7, 3829.0], [95.8, 3829.0], [95.9, 3829.0], [96.0, 3829.0], [96.1, 3830.0], [96.2, 3831.0], [96.3, 3831.0], [96.4, 3831.0], [96.5, 3832.0], [96.6, 3832.0], [96.7, 3832.0], [96.8, 3832.0], [96.9, 3832.0], [97.0, 3832.0], [97.1, 3833.0], [97.2, 3833.0], [97.3, 3833.0], [97.4, 3834.0], [97.5, 3834.0], [97.6, 3835.0], [97.7, 3838.0], [97.8, 3838.0], [97.9, 3838.0], [98.0, 3838.0], [98.1, 3838.0], [98.2, 3839.0], [98.3, 3840.0], [98.4, 3840.0], [98.5, 3848.0], [98.6, 3852.0], [98.7, 3853.0], [98.8, 3853.0], [98.9, 3855.0], [99.0, 3855.0], [99.1, 3857.0], [99.2, 3866.0], [99.3, 3871.0], [99.4, 3877.0], [99.5, 3912.0], [99.6, 3957.0], [99.7, 3983.0], [99.8, 4817.0], [99.9, 7117.0], [100.0, 7117.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 160.0], [0.1, 160.0], [0.2, 303.0], [0.3, 353.0], [0.4, 397.0], [0.5, 597.0], [0.6, 630.0], [0.7, 972.0], [0.8, 976.0], [0.9, 987.0], [1.0, 987.0], [1.1, 993.0], [1.2, 995.0], [1.3, 1001.0], [1.4, 1001.0], [1.5, 1008.0], [1.6, 1020.0], [1.7, 1026.0], [1.8, 1026.0], [1.9, 1027.0], [2.0, 1027.0], [2.1, 1029.0], [2.2, 1033.0], [2.3, 1036.0], [2.4, 1048.0], [2.5, 1049.0], [2.6, 1050.0], [2.7, 1053.0], [2.8, 1060.0], [2.9, 1065.0], [3.0, 1065.0], [3.1, 1081.0], [3.2, 1163.0], [3.3, 1170.0], [3.4, 1174.0], [3.5, 1177.0], [3.6, 1180.0], [3.7, 1182.0], [3.8, 1183.0], [3.9, 1187.0], [4.0, 1187.0], [4.1, 1188.0], [4.2, 1201.0], [4.3, 1203.0], [4.4, 1208.0], [4.5, 1209.0], [4.6, 1210.0], [4.7, 1215.0], [4.8, 1233.0], [4.9, 1236.0], [5.0, 1239.0], [5.1, 1239.0], [5.2, 1246.0], [5.3, 1254.0], [5.4, 1255.0], [5.5, 1255.0], [5.6, 1256.0], [5.7, 1256.0], [5.8, 1270.0], [5.9, 1274.0], [6.0, 1287.0], [6.1, 1287.0], [6.2, 1288.0], [6.3, 1291.0], [6.4, 1304.0], [6.5, 1310.0], [6.6, 1312.0], [6.7, 1316.0], [6.8, 1327.0], [6.9, 1345.0], [7.0, 1349.0], [7.1, 1349.0], [7.2, 1354.0], [7.3, 1369.0], [7.4, 1378.0], [7.5, 1384.0], [7.6, 1394.0], [7.7, 1397.0], [7.8, 1397.0], [7.9, 1399.0], [8.0, 1416.0], [8.1, 1416.0], [8.2, 1417.0], [8.3, 1418.0], [8.4, 1433.0], [8.5, 1474.0], [8.6, 1476.0], [8.7, 1496.0], [8.8, 1497.0], [8.9, 1499.0], [9.0, 1504.0], [9.1, 1504.0], [9.2, 1511.0], [9.3, 1527.0], [9.4, 1529.0], [9.5, 1534.0], [9.6, 1535.0], [9.7, 1536.0], [9.8, 1544.0], [9.9, 1555.0], [10.0, 1572.0], [10.1, 1572.0], [10.2, 1574.0], [10.3, 1601.0], [10.4, 1607.0], [10.5, 1611.0], [10.6, 1617.0], [10.7, 1620.0], [10.8, 1622.0], [10.9, 1626.0], [11.0, 1628.0], [11.1, 1628.0], [11.2, 1631.0], [11.3, 1631.0], [11.4, 1633.0], [11.5, 1639.0], [11.6, 1645.0], [11.7, 1645.0], [11.8, 1645.0], [11.9, 1650.0], [12.0, 1657.0], [12.1, 1657.0], [12.2, 1667.0], [12.3, 1679.0], [12.4, 1684.0], [12.5, 1686.0], [12.6, 1695.0], [12.7, 1705.0], [12.8, 1709.0], [12.9, 1719.0], [13.0, 1720.0], [13.1, 1720.0], [13.2, 1722.0], [13.3, 1725.0], [13.4, 1735.0], [13.5, 1739.0], [13.6, 1744.0], [13.7, 1746.0], [13.8, 1748.0], [13.9, 1752.0], [14.0, 1766.0], [14.1, 1766.0], [14.2, 1773.0], [14.3, 1779.0], [14.4, 1791.0], [14.5, 1792.0], [14.6, 1794.0], [14.7, 1795.0], [14.8, 1797.0], [14.9, 1799.0], [15.0, 1805.0], [15.1, 1805.0], [15.2, 1809.0], [15.3, 1810.0], [15.4, 1812.0], [15.5, 1814.0], [15.6, 1815.0], [15.7, 1826.0], [15.8, 1834.0], [15.9, 1835.0], [16.0, 1837.0], [16.1, 1837.0], [16.2, 1840.0], [16.3, 1849.0], [16.4, 1854.0], [16.5, 1856.0], [16.6, 1859.0], [16.7, 1860.0], [16.8, 1860.0], [16.9, 1860.0], [17.0, 1864.0], [17.1, 1864.0], [17.2, 1867.0], [17.3, 1876.0], [17.4, 1881.0], [17.5, 1885.0], [17.6, 1909.0], [17.7, 1921.0], [17.8, 1922.0], [17.9, 1926.0], [18.0, 1945.0], [18.1, 1945.0], [18.2, 1947.0], [18.3, 1949.0], [18.4, 1953.0], [18.5, 1957.0], [18.6, 1970.0], [18.7, 1977.0], [18.8, 1978.0], [18.9, 1985.0], [19.0, 1990.0], [19.1, 1990.0], [19.2, 1998.0], [19.3, 2000.0], [19.4, 2004.0], [19.5, 2009.0], [19.6, 2019.0], [19.7, 2024.0], [19.8, 2032.0], [19.9, 2033.0], [20.0, 2047.0], [20.1, 2047.0], [20.2, 2048.0], [20.3, 2062.0], [20.4, 2065.0], [20.5, 2070.0], [20.6, 2075.0], [20.7, 2077.0], [20.8, 2081.0], [20.9, 2082.0], [21.0, 2092.0], [21.1, 2092.0], [21.2, 2094.0], [21.3, 2099.0], [21.4, 2100.0], [21.5, 2103.0], [21.6, 2106.0], [21.7, 2110.0], [21.8, 2110.0], [21.9, 2110.0], [22.0, 2113.0], [22.1, 2113.0], [22.2, 2115.0], [22.3, 2126.0], [22.4, 2126.0], [22.5, 2127.0], [22.6, 2133.0], [22.7, 2138.0], [22.8, 2140.0], [22.9, 2152.0], [23.0, 2153.0], [23.1, 2153.0], [23.2, 2163.0], [23.3, 2165.0], [23.4, 2167.0], [23.5, 2167.0], [23.6, 2168.0], [23.7, 2186.0], [23.8, 2189.0], [23.9, 2195.0], [24.0, 2196.0], [24.1, 2196.0], [24.2, 2199.0], [24.3, 2203.0], [24.4, 2214.0], [24.5, 2214.0], [24.6, 2215.0], [24.7, 2215.0], [24.8, 2223.0], [24.9, 2225.0], [25.0, 2231.0], [25.1, 2231.0], [25.2, 2234.0], [25.3, 2236.0], [25.4, 2237.0], [25.5, 2238.0], [25.6, 2241.0], [25.7, 2242.0], [25.8, 2245.0], [25.9, 2245.0], [26.0, 2245.0], [26.1, 2245.0], [26.2, 2251.0], [26.3, 2254.0], [26.4, 2256.0], [26.5, 2256.0], [26.6, 2258.0], [26.7, 2264.0], [26.8, 2264.0], [26.9, 2264.0], [27.0, 2266.0], [27.1, 2266.0], [27.2, 2281.0], [27.3, 2288.0], [27.4, 2291.0], [27.5, 2292.0], [27.6, 2297.0], [27.7, 2297.0], [27.8, 2309.0], [27.9, 2309.0], [28.0, 2313.0], [28.1, 2313.0], [28.2, 2319.0], [28.3, 2324.0], [28.4, 2327.0], [28.5, 2328.0], [28.6, 2330.0], [28.7, 2335.0], [28.8, 2347.0], [28.9, 2350.0], [29.0, 2355.0], [29.1, 2355.0], [29.2, 2365.0], [29.3, 2367.0], [29.4, 2368.0], [29.5, 2368.0], [29.6, 2368.0], [29.7, 2369.0], [29.8, 2374.0], [29.9, 2377.0], [30.0, 2377.0], [30.1, 2377.0], [30.2, 2377.0], [30.3, 2378.0], [30.4, 2379.0], [30.5, 2393.0], [30.6, 2396.0], [30.7, 2399.0], [30.8, 2400.0], [30.9, 2404.0], [31.0, 2425.0], [31.1, 2425.0], [31.2, 2430.0], [31.3, 2431.0], [31.4, 2434.0], [31.5, 2435.0], [31.6, 2442.0], [31.7, 2444.0], [31.8, 2453.0], [31.9, 2459.0], [32.0, 2459.0], [32.1, 2459.0], [32.2, 2460.0], [32.3, 2462.0], [32.4, 2462.0], [32.5, 2465.0], [32.6, 2474.0], [32.7, 2476.0], [32.8, 2479.0], [32.9, 2485.0], [33.0, 2492.0], [33.1, 2492.0], [33.2, 2502.0], [33.3, 2503.0], [33.4, 2517.0], [33.5, 2520.0], [33.6, 2525.0], [33.7, 2538.0], [33.8, 2541.0], [33.9, 2546.0], [34.0, 2557.0], [34.1, 2557.0], [34.2, 2566.0], [34.3, 2567.0], [34.4, 2573.0], [34.5, 2573.0], [34.6, 2575.0], [34.7, 2577.0], [34.8, 2585.0], [34.9, 2587.0], [35.0, 2592.0], [35.1, 2592.0], [35.2, 2593.0], [35.3, 2600.0], [35.4, 2600.0], [35.5, 2601.0], [35.6, 2604.0], [35.7, 2611.0], [35.8, 2613.0], [35.9, 2614.0], [36.0, 2617.0], [36.1, 2617.0], [36.2, 2625.0], [36.3, 2633.0], [36.4, 2640.0], [36.5, 2645.0], [36.6, 2647.0], [36.7, 2650.0], [36.8, 2667.0], [36.9, 2668.0], [37.0, 2668.0], [37.1, 2672.0], [37.2, 2674.0], [37.3, 2679.0], [37.4, 2683.0], [37.5, 2684.0], [37.6, 2684.0], [37.7, 2690.0], [37.8, 2701.0], [37.9, 2706.0], [38.0, 2706.0], [38.1, 2707.0], [38.2, 2709.0], [38.3, 2715.0], [38.4, 2719.0], [38.5, 2719.0], [38.6, 2724.0], [38.7, 2732.0], [38.8, 2733.0], [38.9, 2741.0], [39.0, 2741.0], [39.1, 2747.0], [39.2, 2756.0], [39.3, 2757.0], [39.4, 2763.0], [39.5, 2769.0], [39.6, 2770.0], [39.7, 2771.0], [39.8, 2776.0], [39.9, 2787.0], [40.0, 2787.0], [40.1, 2789.0], [40.2, 2790.0], [40.3, 2793.0], [40.4, 2798.0], [40.5, 2805.0], [40.6, 2805.0], [40.7, 2807.0], [40.8, 2807.0], [40.9, 2808.0], [41.0, 2808.0], [41.1, 2808.0], [41.2, 2809.0], [41.3, 2817.0], [41.4, 2820.0], [41.5, 2822.0], [41.6, 2825.0], [41.7, 2829.0], [41.8, 2843.0], [41.9, 2849.0], [42.0, 2849.0], [42.1, 2858.0], [42.2, 2858.0], [42.3, 2860.0], [42.4, 2871.0], [42.5, 2877.0], [42.6, 2879.0], [42.7, 2882.0], [42.8, 2883.0], [42.9, 2885.0], [43.0, 2885.0], [43.1, 2886.0], [43.2, 2886.0], [43.3, 2887.0], [43.4, 2893.0], [43.5, 2894.0], [43.6, 2895.0], [43.7, 2899.0], [43.8, 2899.0], [43.9, 2900.0], [44.0, 2900.0], [44.1, 2902.0], [44.2, 2909.0], [44.3, 2913.0], [44.4, 2914.0], [44.5, 2916.0], [44.6, 2919.0], [44.7, 2923.0], [44.8, 2924.0], [44.9, 2926.0], [45.0, 2926.0], [45.1, 2928.0], [45.2, 2932.0], [45.3, 2934.0], [45.4, 2934.0], [45.5, 2935.0], [45.6, 2936.0], [45.7, 2937.0], [45.8, 2943.0], [45.9, 2946.0], [46.0, 2946.0], [46.1, 2947.0], [46.2, 2954.0], [46.3, 2958.0], [46.4, 2959.0], [46.5, 2963.0], [46.6, 2983.0], [46.7, 2991.0], [46.8, 2993.0], [46.9, 3001.0], [47.0, 3001.0], [47.1, 3005.0], [47.2, 3006.0], [47.3, 3009.0], [47.4, 3009.0], [47.5, 3009.0], [47.6, 3016.0], [47.7, 3017.0], [47.8, 3026.0], [47.9, 3029.0], [48.0, 3029.0], [48.1, 3044.0], [48.2, 3048.0], [48.3, 3048.0], [48.4, 3049.0], [48.5, 3051.0], [48.6, 3054.0], [48.7, 3056.0], [48.8, 3056.0], [48.9, 3058.0], [49.0, 3058.0], [49.1, 3059.0], [49.2, 3063.0], [49.3, 3063.0], [49.4, 3064.0], [49.5, 3067.0], [49.6, 3076.0], [49.7, 3078.0], [49.8, 3090.0], [49.9, 3093.0], [50.0, 3093.0], [50.1, 3103.0], [50.2, 3105.0], [50.3, 3106.0], [50.4, 3107.0], [50.5, 3108.0], [50.6, 3116.0], [50.7, 3117.0], [50.8, 3123.0], [50.9, 3126.0], [51.0, 3126.0], [51.1, 3129.0], [51.2, 3146.0], [51.3, 3151.0], [51.4, 3168.0], [51.5, 3171.0], [51.6, 3172.0], [51.7, 3178.0], [51.8, 3179.0], [51.9, 3180.0], [52.0, 3180.0], [52.1, 3181.0], [52.2, 3182.0], [52.3, 3183.0], [52.4, 3192.0], [52.5, 3194.0], [52.6, 3196.0], [52.7, 3210.0], [52.8, 3217.0], [52.9, 3218.0], [53.0, 3218.0], [53.1, 3228.0], [53.2, 3249.0], [53.3, 3257.0], [53.4, 3266.0], [53.5, 3267.0], [53.6, 3275.0], [53.7, 3279.0], [53.8, 3289.0], [53.9, 3292.0], [54.0, 3292.0], [54.1, 3306.0], [54.2, 3315.0], [54.3, 3316.0], [54.4, 3321.0], [54.5, 3327.0], [54.6, 3334.0], [54.7, 3337.0], [54.8, 3342.0], [54.9, 3345.0], [55.0, 3345.0], [55.1, 3346.0], [55.2, 3347.0], [55.3, 3351.0], [55.4, 3351.0], [55.5, 3353.0], [55.6, 3362.0], [55.7, 3363.0], [55.8, 3373.0], [55.9, 3396.0], [56.0, 3396.0], [56.1, 3400.0], [56.2, 3410.0], [56.3, 3418.0], [56.4, 3423.0], [56.5, 3425.0], [56.6, 3435.0], [56.7, 3438.0], [56.8, 3456.0], [56.9, 3456.0], [57.0, 3456.0], [57.1, 3457.0], [57.2, 3503.0], [57.3, 3511.0], [57.4, 3515.0], [57.5, 3549.0], [57.6, 3560.0], [57.7, 3569.0], [57.8, 3570.0], [57.9, 3578.0], [58.0, 3578.0], [58.1, 3584.0], [58.2, 3585.0], [58.3, 3593.0], [58.4, 3594.0], [58.5, 3604.0], [58.6, 3606.0], [58.7, 3610.0], [58.8, 3613.0], [58.9, 3621.0], [59.0, 3621.0], [59.1, 3628.0], [59.2, 3636.0], [59.3, 3649.0], [59.4, 3656.0], [59.5, 3657.0], [59.6, 3659.0], [59.7, 3660.0], [59.8, 3663.0], [59.9, 3663.0], [60.0, 3663.0], [60.1, 3681.0], [60.2, 3688.0], [60.3, 3702.0], [60.4, 3704.0], [60.5, 3705.0], [60.6, 3711.0], [60.7, 3716.0], [60.8, 3718.0], [60.9, 3719.0], [61.0, 3719.0], [61.1, 3721.0], [61.2, 3722.0], [61.3, 3733.0], [61.4, 3756.0], [61.5, 3759.0], [61.6, 3760.0], [61.7, 3782.0], [61.8, 3784.0], [61.9, 3787.0], [62.0, 3787.0], [62.1, 3796.0], [62.2, 3803.0], [62.3, 3825.0], [62.4, 3835.0], [62.5, 3852.0], [62.6, 3860.0], [62.7, 3866.0], [62.8, 3871.0], [62.9, 3873.0], [63.0, 3873.0], [63.1, 3877.0], [63.2, 3878.0], [63.3, 3893.0], [63.4, 3895.0], [63.5, 3900.0], [63.6, 3930.0], [63.7, 3937.0], [63.8, 3939.0], [63.9, 3944.0], [64.0, 3944.0], [64.1, 3945.0], [64.2, 3948.0], [64.3, 3959.0], [64.4, 3961.0], [64.5, 3980.0], [64.6, 3986.0], [64.7, 3989.0], [64.8, 3998.0], [64.9, 4012.0], [65.0, 4012.0], [65.1, 4013.0], [65.2, 4031.0], [65.3, 4036.0], [65.4, 4039.0], [65.5, 4041.0], [65.6, 4042.0], [65.7, 4052.0], [65.8, 4054.0], [65.9, 4062.0], [66.0, 4062.0], [66.1, 4077.0], [66.2, 4105.0], [66.3, 4106.0], [66.4, 4106.0], [66.5, 4113.0], [66.6, 4166.0], [66.7, 4168.0], [66.8, 4169.0], [66.9, 4180.0], [67.0, 4180.0], [67.1, 4181.0], [67.2, 4182.0], [67.3, 4212.0], [67.4, 4229.0], [67.5, 4260.0], [67.6, 4262.0], [67.7, 4272.0], [67.8, 4283.0], [67.9, 4288.0], [68.0, 4288.0], [68.1, 4331.0], [68.2, 4343.0], [68.3, 4418.0], [68.4, 4537.0], [68.5, 4582.0], [68.6, 4693.0], [68.7, 4707.0], [68.8, 4755.0], [68.9, 4755.0], [69.0, 4755.0], [69.1, 4875.0], [69.2, 4878.0], [69.3, 5010.0], [69.4, 5114.0], [69.5, 5135.0], [69.6, 5164.0], [69.7, 5192.0], [69.8, 5276.0], [69.9, 5320.0], [70.0, 5320.0], [70.1, 5413.0], [70.2, 5641.0], [70.3, 5650.0], [70.4, 5726.0], [70.5, 5732.0], [70.6, 5772.0], [70.7, 5773.0], [70.8, 5877.0], [70.9, 5936.0], [71.0, 5936.0], [71.1, 6089.0], [71.2, 6092.0], [71.3, 6103.0], [71.4, 6153.0], [71.5, 6155.0], [71.6, 6258.0], [71.7, 6277.0], [71.8, 6288.0], [71.9, 6309.0], [72.0, 6309.0], [72.1, 6318.0], [72.2, 6353.0], [72.3, 6366.0], [72.4, 6386.0], [72.5, 6387.0], [72.6, 6388.0], [72.7, 6391.0], [72.8, 6391.0], [72.9, 6400.0], [73.0, 6400.0], [73.1, 6409.0], [73.2, 6422.0], [73.3, 6437.0], [73.4, 6441.0], [73.5, 6446.0], [73.6, 6447.0], [73.7, 6450.0], [73.8, 6457.0], [73.9, 6458.0], [74.0, 6458.0], [74.1, 6460.0], [74.2, 6467.0], [74.3, 6469.0], [74.4, 6470.0], [74.5, 6475.0], [74.6, 6486.0], [74.7, 6544.0], [74.8, 6552.0], [74.9, 6554.0], [75.0, 6554.0], [75.1, 6557.0], [75.2, 6559.0], [75.3, 6561.0], [75.4, 6566.0], [75.5, 6572.0], [75.6, 6590.0], [75.7, 6598.0], [75.8, 6610.0], [75.9, 6623.0], [76.0, 6623.0], [76.1, 6640.0], [76.2, 6646.0], [76.3, 6649.0], [76.4, 6651.0], [76.5, 6657.0], [76.6, 6658.0], [76.7, 6659.0], [76.8, 6663.0], [76.9, 6669.0], [77.0, 6669.0], [77.1, 6674.0], [77.2, 6680.0], [77.3, 6690.0], [77.4, 6692.0], [77.5, 6702.0], [77.6, 6717.0], [77.7, 6719.0], [77.8, 6727.0], [77.9, 6735.0], [78.0, 6735.0], [78.1, 6736.0], [78.2, 6739.0], [78.3, 6748.0], [78.4, 6748.0], [78.5, 6751.0], [78.6, 6753.0], [78.7, 6756.0], [78.8, 6756.0], [78.9, 6758.0], [79.0, 6758.0], [79.1, 6763.0], [79.2, 6770.0], [79.3, 6775.0], [79.4, 6782.0], [79.5, 6788.0], [79.6, 6789.0], [79.7, 6792.0], [79.8, 6796.0], [79.9, 6798.0], [80.0, 6798.0], [80.1, 6799.0], [80.2, 6800.0], [80.3, 6806.0], [80.4, 6806.0], [80.5, 6809.0], [80.6, 6810.0], [80.7, 6815.0], [80.8, 6816.0], [80.9, 6818.0], [81.0, 6818.0], [81.1, 6822.0], [81.2, 6824.0], [81.3, 6835.0], [81.4, 6840.0], [81.5, 6845.0], [81.6, 6845.0], [81.7, 6846.0], [81.8, 6846.0], [81.9, 6850.0], [82.0, 6850.0], [82.1, 6851.0], [82.2, 6852.0], [82.3, 6861.0], [82.4, 6862.0], [82.5, 6865.0], [82.6, 6871.0], [82.7, 6875.0], [82.8, 6876.0], [82.9, 6878.0], [83.0, 6878.0], [83.1, 6886.0], [83.2, 6888.0], [83.3, 6894.0], [83.4, 6920.0], [83.5, 6928.0], [83.6, 6946.0], [83.7, 6964.0], [83.8, 6969.0], [83.9, 6979.0], [84.0, 6979.0], [84.1, 7023.0], [84.2, 7043.0], [84.3, 7059.0], [84.4, 7068.0], [84.5, 7072.0], [84.6, 7073.0], [84.7, 7084.0], [84.8, 7100.0], [84.9, 7101.0], [85.0, 7101.0], [85.1, 7113.0], [85.2, 7117.0], [85.3, 7120.0], [85.4, 7131.0], [85.5, 7135.0], [85.6, 7152.0], [85.7, 7152.0], [85.8, 7163.0], [85.9, 7165.0], [86.0, 7165.0], [86.1, 7170.0], [86.2, 7171.0], [86.3, 7184.0], [86.4, 7186.0], [86.5, 7186.0], [86.6, 7191.0], [86.7, 7196.0], [86.8, 7202.0], [86.9, 7202.0], [87.0, 7202.0], [87.1, 7214.0], [87.2, 7237.0], [87.3, 7240.0], [87.4, 7241.0], [87.5, 7254.0], [87.6, 7265.0], [87.7, 7266.0], [87.8, 7266.0], [87.9, 7271.0], [88.0, 7271.0], [88.1, 7276.0], [88.2, 7277.0], [88.3, 7280.0], [88.4, 7281.0], [88.5, 7291.0], [88.6, 7293.0], [88.7, 7293.0], [88.8, 7295.0], [88.9, 7305.0], [89.0, 7305.0], [89.1, 7308.0], [89.2, 7308.0], [89.3, 7310.0], [89.4, 7320.0], [89.5, 7321.0], [89.6, 7327.0], [89.7, 7329.0], [89.8, 7331.0], [89.9, 7332.0], [90.0, 7332.0], [90.1, 7333.0], [90.2, 7337.0], [90.3, 7345.0], [90.4, 7357.0], [90.5, 7359.0], [90.6, 7364.0], [90.7, 7366.0], [90.8, 7369.0], [90.9, 7370.0], [91.0, 7370.0], [91.1, 7371.0], [91.2, 7375.0], [91.3, 7383.0], [91.4, 7384.0], [91.5, 7392.0], [91.6, 7394.0], [91.7, 7395.0], [91.8, 7398.0], [91.9, 7406.0], [92.0, 7406.0], [92.1, 7410.0], [92.2, 7417.0], [92.3, 7426.0], [92.4, 7427.0], [92.5, 7435.0], [92.6, 7441.0], [92.7, 7446.0], [92.8, 7446.0], [92.9, 7446.0], [93.0, 7446.0], [93.1, 7457.0], [93.2, 7460.0], [93.3, 7469.0], [93.4, 7471.0], [93.5, 7474.0], [93.6, 7475.0], [93.7, 7478.0], [93.8, 7480.0], [93.9, 7482.0], [94.0, 7482.0], [94.1, 7486.0], [94.2, 7487.0], [94.3, 7487.0], [94.4, 7493.0], [94.5, 7509.0], [94.6, 7512.0], [94.7, 7512.0], [94.8, 7513.0], [94.9, 7514.0], [95.0, 7514.0], [95.1, 7518.0], [95.2, 7519.0], [95.3, 7527.0], [95.4, 7531.0], [95.5, 7554.0], [95.6, 7569.0], [95.7, 7572.0], [95.8, 7574.0], [95.9, 7578.0], [96.0, 7578.0], [96.1, 7583.0], [96.2, 7584.0], [96.3, 7595.0], [96.4, 7602.0], [96.5, 7603.0], [96.6, 7605.0], [96.7, 7615.0], [96.8, 7619.0], [96.9, 7639.0], [97.0, 7639.0], [97.1, 7643.0], [97.2, 7644.0], [97.3, 7644.0], [97.4, 7645.0], [97.5, 7645.0], [97.6, 7648.0], [97.7, 7650.0], [97.8, 7654.0], [97.9, 7659.0], [98.0, 7659.0], [98.1, 7659.0], [98.2, 7659.0], [98.3, 7660.0], [98.4, 7667.0], [98.5, 7671.0], [98.6, 7683.0], [98.7, 7692.0], [98.8, 7702.0], [98.9, 7703.0], [99.0, 7703.0], [99.1, 7705.0], [99.2, 7708.0], [99.3, 7711.0], [99.4, 7718.0], [99.5, 7745.0], [99.6, 7746.0], [99.7, 7749.0], [99.8, 7752.0], [99.9, 7799.0], [100.0, 7799.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 136.0, "series": [{"data": [[0.0, 3.0], [600.0, 12.0], [700.0, 17.0], [800.0, 12.0], [900.0, 17.0], [1000.0, 18.0], [1100.0, 25.0], [1200.0, 18.0], [1300.0, 25.0], [1400.0, 16.0], [1500.0, 18.0], [100.0, 5.0], [1600.0, 12.0], [1700.0, 11.0], [1800.0, 7.0], [1900.0, 11.0], [2000.0, 7.0], [2100.0, 5.0], [2300.0, 5.0], [2200.0, 5.0], [2500.0, 2.0], [3000.0, 1.0], [200.0, 1.0], [300.0, 16.0], [400.0, 17.0], [500.0, 14.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[0.0, 6.0], [600.0, 54.0], [700.0, 38.0], [800.0, 45.0], [900.0, 47.0], [1000.0, 47.0], [1100.0, 43.0], [1200.0, 60.0], [1300.0, 45.0], [1400.0, 50.0], [1500.0, 39.0], [1600.0, 41.0], [100.0, 7.0], [1700.0, 17.0], [1800.0, 18.0], [1900.0, 31.0], [2000.0, 39.0], [2100.0, 29.0], [2200.0, 26.0], [2300.0, 18.0], [2400.0, 25.0], [2500.0, 13.0], [2600.0, 12.0], [2700.0, 9.0], [2800.0, 13.0], [2900.0, 11.0], [3000.0, 11.0], [3100.0, 9.0], [3200.0, 7.0], [3300.0, 4.0], [200.0, 11.0], [3400.0, 2.0], [3500.0, 1.0], [3600.0, 1.0], [300.0, 14.0], [400.0, 36.0], [500.0, 21.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 14.0], [600.0, 82.0], [700.0, 48.0], [800.0, 40.0], [900.0, 24.0], [1000.0, 20.0], [1100.0, 19.0], [1200.0, 13.0], [1300.0, 12.0], [1400.0, 16.0], [1500.0, 15.0], [100.0, 17.0], [1600.0, 7.0], [1700.0, 8.0], [1800.0, 12.0], [1900.0, 18.0], [2000.0, 10.0], [2100.0, 8.0], [2200.0, 5.0], [2300.0, 4.0], [2400.0, 4.0], [2500.0, 4.0], [2600.0, 6.0], [2700.0, 6.0], [2800.0, 2.0], [2900.0, 2.0], [3000.0, 10.0], [3100.0, 8.0], [3200.0, 10.0], [3300.0, 9.0], [200.0, 29.0], [3400.0, 2.0], [3500.0, 8.0], [3600.0, 4.0], [3700.0, 78.0], [3800.0, 136.0], [3900.0, 3.0], [4800.0, 1.0], [300.0, 38.0], [400.0, 59.0], [7100.0, 1.0], [500.0, 88.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[600.0, 1.0], [900.0, 5.0], [1000.0, 17.0], [1100.0, 9.0], [1200.0, 20.0], [1300.0, 15.0], [1400.0, 9.0], [1500.0, 11.0], [1600.0, 22.0], [1700.0, 21.0], [1800.0, 23.0], [1900.0, 15.0], [2000.0, 19.0], [2100.0, 26.0], [2200.0, 32.0], [2300.0, 27.0], [2400.0, 21.0], [2500.0, 19.0], [2600.0, 23.0], [2700.0, 24.0], [2800.0, 31.0], [2900.0, 27.0], [3000.0, 28.0], [3100.0, 24.0], [3300.0, 18.0], [3200.0, 12.0], [3400.0, 10.0], [3500.0, 12.0], [3700.0, 17.0], [3600.0, 16.0], [3800.0, 12.0], [3900.0, 13.0], [4000.0, 11.0], [4100.0, 10.0], [4200.0, 7.0], [4300.0, 2.0], [4600.0, 1.0], [4400.0, 1.0], [4500.0, 2.0], [4700.0, 3.0], [4800.0, 2.0], [5000.0, 1.0], [5100.0, 4.0], [5300.0, 1.0], [5200.0, 1.0], [5600.0, 2.0], [5400.0, 1.0], [5800.0, 1.0], [5700.0, 4.0], [6100.0, 3.0], [5900.0, 1.0], [6000.0, 2.0], [6300.0, 9.0], [6200.0, 3.0], [6600.0, 15.0], [6400.0, 16.0], [6500.0, 10.0], [6700.0, 24.0], [6900.0, 6.0], [6800.0, 29.0], [7100.0, 18.0], [7000.0, 7.0], [7300.0, 27.0], [7400.0, 23.0], [7200.0, 19.0], [7600.0, 22.0], [7500.0, 17.0], [7700.0, 11.0], [100.0, 1.0], [300.0, 3.0], [500.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 7700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 281.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1657.0, "series": [{"data": [[0.0, 281.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1062.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1657.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 296.92933333333247, "minX": 1.7298387E12, "maxY": 296.92933333333247, "series": [{"data": [[1.7298387E12, 296.92933333333247]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7298387E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 61.0, "minX": 12.0, "maxY": 6937.714285714285, "series": [{"data": [[294.0, 1176.8779342723005], [297.0, 1199.078125], [300.0, 1161.0625], [295.0, 1081.2857142857144]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[294.98333333333335, 1178.5400000000016]], "isOverall": false, "label": "HTTP Request-2-Aggregated", "isController": false}, {"data": [[257.0, 61.0], [69.0, 245.0], [294.0, 1365.0000000000002], [297.0, 1481.4042553191493], [300.0, 1516.2430555555557], [295.0, 1567.857142857143], [12.0, 307.0], [234.0, 236.0], [232.0, 250.0], [242.0, 264.0], [246.0, 168.66666666666666]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[297.14555555555563, 1462.7344444444434]], "isOverall": false, "label": "HTTP Request-1-Aggregated", "isController": false}, {"data": [[257.0, 2424.0], [69.0, 385.0], [294.0, 3568.2863849765245], [297.0, 2901.5425531914902], [300.0, 895.4982638888882], [295.0, 3212.714285714286], [12.0, 90.0], [234.0, 1161.0], [232.0, 1468.0], [242.0, 211.0], [246.0, 436.33333333333337]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[297.1455555555557, 1753.7166666666649]], "isOverall": false, "label": "HTTP Request-0-Aggregated", "isController": false}, {"data": [[257.0, 2776.0], [69.0, 630.0], [294.0, 6762.647887323945], [297.0, 5749.31914893617], [300.0, 2600.336805555555], [295.0, 6937.714285714285], [12.0, 397.0], [234.0, 1397.0], [232.0, 1719.0], [242.0, 475.0], [246.0, 605.6666666666667]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[297.14555555555586, 3929.9155555555603]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 300.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 11210.0, "minX": 1.7298387E12, "maxY": 40260.0, "series": [{"data": [[1.7298387E12, 40260.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.7298387E12, 11210.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7298387E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1178.5400000000016, "minX": 1.7298387E12, "maxY": 3929.9155555555603, "series": [{"data": [[1.7298387E12, 1178.5400000000016]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[1.7298387E12, 1462.7344444444434]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.7298387E12, 1753.7166666666649]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.7298387E12, 3929.9155555555603]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7298387E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1118.9200000000005, "minX": 1.7298387E12, "maxY": 1568.5066666666685, "series": [{"data": [[1.7298387E12, 1118.9200000000005]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[1.7298387E12, 1449.6077777777796]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.7298387E12, 1568.5066666666685]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.7298387E12, 1568.506666666666]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7298387E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.7298387E12, "maxY": 394.6688888888895, "series": [{"data": [[1.7298387E12, 0.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[1.7298387E12, 0.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.7298387E12, 394.6688888888895]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.7298387E12, 394.66888888888934]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7298387E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 27.0, "minX": 1.7298387E12, "maxY": 7799.0, "series": [{"data": [[1.7298387E12, 7799.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.7298387E12, 4178.9000000000015]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.7298387E12, 7614.899999999998]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.7298387E12, 6927.5999999999985]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.7298387E12, 27.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.7298387E12, 1684.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7298387E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 352.0, "minX": 4.0, "maxY": 3797.0, "series": [{"data": [[32.0, 657.5], [170.0, 1131.0], [11.0, 726.0], [211.0, 705.0], [263.0, 2254.0], [4.0, 352.0], [287.0, 3797.0], [298.0, 1604.0], [314.0, 1984.0], [331.0, 1794.0], [344.0, 2054.0], [396.0, 2391.5], [107.0, 702.0], [113.0, 590.0], [119.0, 1572.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 396.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 276.0, "minX": 4.0, "maxY": 3103.0, "series": [{"data": [[32.0, 620.0], [170.0, 1131.0], [11.0, 726.0], [211.0, 629.0], [263.0, 929.0], [4.0, 276.0], [287.0, 3103.0], [298.0, 680.0], [314.0, 1893.0], [331.0, 1161.0], [344.0, 1284.0], [396.0, 2102.0], [107.0, 702.0], [113.0, 575.0], [119.0, 1436.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 396.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.7298387E12, "maxY": 50.0, "series": [{"data": [[1.7298387E12, 50.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7298387E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 20.0, "minX": 1.7298387E12, "maxY": 30.0, "series": [{"data": [[1.7298387E12, 30.0]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.7298387E12, 20.0]], "isOverall": false, "label": "302", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7298387E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 5.0, "minX": 1.7298387E12, "maxY": 15.0, "series": [{"data": [[1.7298387E12, 15.0]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.7298387E12, 15.0]], "isOverall": false, "label": "HTTP Request-0-success", "isController": false}, {"data": [[1.7298387E12, 15.0]], "isOverall": false, "label": "HTTP Request-1-success", "isController": false}, {"data": [[1.7298387E12, 5.0]], "isOverall": false, "label": "HTTP Request-2-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7298387E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.7298387E12, "maxY": 50.0, "series": [{"data": [[1.7298387E12, 50.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7298387E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

