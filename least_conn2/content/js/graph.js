/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 7.0, "minX": 0.0, "maxY": 5918.0, "series": [{"data": [[0.0, 14.0], [0.1, 14.0], [0.2, 14.0], [0.3, 14.0], [0.4, 20.0], [0.5, 20.0], [0.6, 20.0], [0.7, 25.0], [0.8, 25.0], [0.9, 25.0], [1.0, 26.0], [1.1, 26.0], [1.2, 26.0], [1.3, 26.0], [1.4, 28.0], [1.5, 28.0], [1.6, 28.0], [1.7, 29.0], [1.8, 29.0], [1.9, 29.0], [2.0, 33.0], [2.1, 33.0], [2.2, 33.0], [2.3, 33.0], [2.4, 39.0], [2.5, 39.0], [2.6, 39.0], [2.7, 40.0], [2.8, 40.0], [2.9, 40.0], [3.0, 41.0], [3.1, 41.0], [3.2, 41.0], [3.3, 41.0], [3.4, 44.0], [3.5, 44.0], [3.6, 44.0], [3.7, 44.0], [3.8, 44.0], [3.9, 44.0], [4.0, 46.0], [4.1, 46.0], [4.2, 46.0], [4.3, 46.0], [4.4, 47.0], [4.5, 47.0], [4.6, 47.0], [4.7, 47.0], [4.8, 47.0], [4.9, 47.0], [5.0, 50.0], [5.1, 50.0], [5.2, 50.0], [5.3, 50.0], [5.4, 51.0], [5.5, 51.0], [5.6, 51.0], [5.7, 53.0], [5.8, 53.0], [5.9, 53.0], [6.0, 55.0], [6.1, 55.0], [6.2, 55.0], [6.3, 55.0], [6.4, 57.0], [6.5, 57.0], [6.6, 57.0], [6.7, 57.0], [6.8, 57.0], [6.9, 57.0], [7.0, 59.0], [7.1, 59.0], [7.2, 59.0], [7.3, 59.0], [7.4, 64.0], [7.5, 64.0], [7.6, 64.0], [7.7, 65.0], [7.8, 65.0], [7.9, 65.0], [8.0, 65.0], [8.1, 65.0], [8.2, 65.0], [8.3, 65.0], [8.4, 66.0], [8.5, 66.0], [8.6, 66.0], [8.7, 68.0], [8.8, 68.0], [8.9, 68.0], [9.0, 72.0], [9.1, 72.0], [9.2, 72.0], [9.3, 72.0], [9.4, 72.0], [9.5, 72.0], [9.6, 72.0], [9.7, 73.0], [9.8, 73.0], [9.9, 73.0], [10.0, 73.0], [10.1, 73.0], [10.2, 73.0], [10.3, 73.0], [10.4, 77.0], [10.5, 77.0], [10.6, 77.0], [10.7, 78.0], [10.8, 78.0], [10.9, 78.0], [11.0, 83.0], [11.1, 83.0], [11.2, 83.0], [11.3, 83.0], [11.4, 83.0], [11.5, 83.0], [11.6, 83.0], [11.7, 84.0], [11.8, 84.0], [11.9, 84.0], [12.0, 84.0], [12.1, 84.0], [12.2, 84.0], [12.3, 84.0], [12.4, 86.0], [12.5, 86.0], [12.6, 86.0], [12.7, 88.0], [12.8, 88.0], [12.9, 88.0], [13.0, 89.0], [13.1, 89.0], [13.2, 89.0], [13.3, 89.0], [13.4, 90.0], [13.5, 90.0], [13.6, 90.0], [13.7, 91.0], [13.8, 91.0], [13.9, 91.0], [14.0, 91.0], [14.1, 91.0], [14.2, 91.0], [14.3, 91.0], [14.4, 91.0], [14.5, 91.0], [14.6, 91.0], [14.7, 91.0], [14.8, 91.0], [14.9, 91.0], [15.0, 91.0], [15.1, 92.0], [15.2, 92.0], [15.3, 92.0], [15.4, 92.0], [15.5, 92.0], [15.6, 92.0], [15.7, 94.0], [15.8, 94.0], [15.9, 94.0], [16.0, 94.0], [16.1, 94.0], [16.2, 94.0], [16.3, 94.0], [16.4, 95.0], [16.5, 95.0], [16.6, 95.0], [16.7, 95.0], [16.8, 95.0], [16.9, 95.0], [17.0, 95.0], [17.1, 96.0], [17.2, 96.0], [17.3, 96.0], [17.4, 97.0], [17.5, 97.0], [17.6, 97.0], [17.7, 100.0], [17.8, 100.0], [17.9, 100.0], [18.0, 101.0], [18.1, 101.0], [18.2, 101.0], [18.3, 101.0], [18.4, 102.0], [18.5, 102.0], [18.6, 102.0], [18.7, 105.0], [18.8, 105.0], [18.9, 105.0], [19.0, 107.0], [19.1, 107.0], [19.2, 107.0], [19.3, 107.0], [19.4, 109.0], [19.5, 109.0], [19.6, 109.0], [19.7, 109.0], [19.8, 109.0], [19.9, 109.0], [20.0, 111.0], [20.1, 111.0], [20.2, 111.0], [20.3, 111.0], [20.4, 111.0], [20.5, 111.0], [20.6, 111.0], [20.7, 113.0], [20.8, 113.0], [20.9, 113.0], [21.0, 113.0], [21.1, 113.0], [21.2, 113.0], [21.3, 113.0], [21.4, 116.0], [21.5, 116.0], [21.6, 116.0], [21.7, 116.0], [21.8, 116.0], [21.9, 116.0], [22.0, 122.0], [22.1, 122.0], [22.2, 122.0], [22.3, 122.0], [22.4, 123.0], [22.5, 123.0], [22.6, 123.0], [22.7, 123.0], [22.8, 123.0], [22.9, 123.0], [23.0, 134.0], [23.1, 134.0], [23.2, 134.0], [23.3, 134.0], [23.4, 135.0], [23.5, 135.0], [23.6, 135.0], [23.7, 137.0], [23.8, 137.0], [23.9, 137.0], [24.0, 149.0], [24.1, 149.0], [24.2, 149.0], [24.3, 149.0], [24.4, 154.0], [24.5, 154.0], [24.6, 154.0], [24.7, 173.0], [24.8, 173.0], [24.9, 173.0], [25.0, 174.0], [25.1, 174.0], [25.2, 174.0], [25.3, 174.0], [25.4, 180.0], [25.5, 180.0], [25.6, 180.0], [25.7, 181.0], [25.8, 181.0], [25.9, 181.0], [26.0, 204.0], [26.1, 204.0], [26.2, 204.0], [26.3, 204.0], [26.4, 207.0], [26.5, 207.0], [26.6, 207.0], [26.7, 207.0], [26.8, 207.0], [26.9, 207.0], [27.0, 216.0], [27.1, 216.0], [27.2, 216.0], [27.3, 216.0], [27.4, 222.0], [27.5, 222.0], [27.6, 222.0], [27.7, 228.0], [27.8, 228.0], [27.9, 228.0], [28.0, 269.0], [28.1, 269.0], [28.2, 269.0], [28.3, 269.0], [28.4, 278.0], [28.5, 278.0], [28.6, 278.0], [28.7, 279.0], [28.8, 279.0], [28.9, 279.0], [29.0, 298.0], [29.1, 298.0], [29.2, 298.0], [29.3, 298.0], [29.4, 310.0], [29.5, 310.0], [29.6, 310.0], [29.7, 334.0], [29.8, 334.0], [29.9, 334.0], [30.0, 339.0], [30.1, 339.0], [30.2, 339.0], [30.3, 339.0], [30.4, 348.0], [30.5, 348.0], [30.6, 348.0], [30.7, 369.0], [30.8, 369.0], [30.9, 369.0], [31.0, 370.0], [31.1, 370.0], [31.2, 370.0], [31.3, 370.0], [31.4, 373.0], [31.5, 373.0], [31.6, 373.0], [31.7, 389.0], [31.8, 389.0], [31.9, 389.0], [32.0, 411.0], [32.1, 411.0], [32.2, 411.0], [32.3, 411.0], [32.4, 412.0], [32.5, 412.0], [32.6, 412.0], [32.7, 427.0], [32.8, 427.0], [32.9, 427.0], [33.0, 429.0], [33.1, 429.0], [33.2, 429.0], [33.3, 429.0], [33.4, 436.0], [33.5, 436.0], [33.6, 436.0], [33.7, 443.0], [33.8, 443.0], [33.9, 443.0], [34.0, 446.0], [34.1, 446.0], [34.2, 446.0], [34.3, 446.0], [34.4, 448.0], [34.5, 448.0], [34.6, 448.0], [34.7, 451.0], [34.8, 451.0], [34.9, 451.0], [35.0, 455.0], [35.1, 455.0], [35.2, 455.0], [35.3, 455.0], [35.4, 457.0], [35.5, 457.0], [35.6, 457.0], [35.7, 459.0], [35.8, 459.0], [35.9, 459.0], [36.0, 464.0], [36.1, 464.0], [36.2, 464.0], [36.3, 464.0], [36.4, 469.0], [36.5, 469.0], [36.6, 469.0], [36.7, 472.0], [36.8, 472.0], [36.9, 472.0], [37.0, 472.0], [37.1, 474.0], [37.2, 474.0], [37.3, 474.0], [37.4, 511.0], [37.5, 511.0], [37.6, 511.0], [37.7, 521.0], [37.8, 521.0], [37.9, 521.0], [38.0, 521.0], [38.1, 535.0], [38.2, 535.0], [38.3, 535.0], [38.4, 549.0], [38.5, 549.0], [38.6, 549.0], [38.7, 553.0], [38.8, 553.0], [38.9, 553.0], [39.0, 553.0], [39.1, 565.0], [39.2, 565.0], [39.3, 565.0], [39.4, 573.0], [39.5, 573.0], [39.6, 573.0], [39.7, 576.0], [39.8, 576.0], [39.9, 576.0], [40.0, 576.0], [40.1, 585.0], [40.2, 585.0], [40.3, 585.0], [40.4, 590.0], [40.5, 590.0], [40.6, 590.0], [40.7, 592.0], [40.8, 592.0], [40.9, 592.0], [41.0, 592.0], [41.1, 600.0], [41.2, 600.0], [41.3, 600.0], [41.4, 605.0], [41.5, 605.0], [41.6, 605.0], [41.7, 615.0], [41.8, 615.0], [41.9, 615.0], [42.0, 615.0], [42.1, 619.0], [42.2, 619.0], [42.3, 619.0], [42.4, 623.0], [42.5, 623.0], [42.6, 623.0], [42.7, 624.0], [42.8, 624.0], [42.9, 624.0], [43.0, 624.0], [43.1, 625.0], [43.2, 625.0], [43.3, 625.0], [43.4, 639.0], [43.5, 639.0], [43.6, 639.0], [43.7, 641.0], [43.8, 641.0], [43.9, 641.0], [44.0, 641.0], [44.1, 644.0], [44.2, 644.0], [44.3, 644.0], [44.4, 647.0], [44.5, 647.0], [44.6, 647.0], [44.7, 647.0], [44.8, 647.0], [44.9, 647.0], [45.0, 647.0], [45.1, 662.0], [45.2, 662.0], [45.3, 662.0], [45.4, 662.0], [45.5, 662.0], [45.6, 662.0], [45.7, 667.0], [45.8, 667.0], [45.9, 667.0], [46.0, 667.0], [46.1, 667.0], [46.2, 667.0], [46.3, 667.0], [46.4, 668.0], [46.5, 668.0], [46.6, 668.0], [46.7, 676.0], [46.8, 676.0], [46.9, 676.0], [47.0, 676.0], [47.1, 692.0], [47.2, 692.0], [47.3, 692.0], [47.4, 694.0], [47.5, 694.0], [47.6, 694.0], [47.7, 696.0], [47.8, 696.0], [47.9, 696.0], [48.0, 696.0], [48.1, 708.0], [48.2, 708.0], [48.3, 708.0], [48.4, 720.0], [48.5, 720.0], [48.6, 720.0], [48.7, 722.0], [48.8, 722.0], [48.9, 722.0], [49.0, 722.0], [49.1, 723.0], [49.2, 723.0], [49.3, 723.0], [49.4, 731.0], [49.5, 731.0], [49.6, 731.0], [49.7, 734.0], [49.8, 734.0], [49.9, 734.0], [50.0, 734.0], [50.1, 739.0], [50.2, 739.0], [50.3, 739.0], [50.4, 747.0], [50.5, 747.0], [50.6, 747.0], [50.7, 754.0], [50.8, 754.0], [50.9, 754.0], [51.0, 754.0], [51.1, 760.0], [51.2, 760.0], [51.3, 760.0], [51.4, 761.0], [51.5, 761.0], [51.6, 761.0], [51.7, 762.0], [51.8, 762.0], [51.9, 762.0], [52.0, 762.0], [52.1, 764.0], [52.2, 764.0], [52.3, 764.0], [52.4, 765.0], [52.5, 765.0], [52.6, 765.0], [52.7, 770.0], [52.8, 770.0], [52.9, 770.0], [53.0, 770.0], [53.1, 778.0], [53.2, 778.0], [53.3, 778.0], [53.4, 780.0], [53.5, 780.0], [53.6, 780.0], [53.7, 787.0], [53.8, 787.0], [53.9, 787.0], [54.0, 787.0], [54.1, 793.0], [54.2, 793.0], [54.3, 793.0], [54.4, 799.0], [54.5, 799.0], [54.6, 799.0], [54.7, 801.0], [54.8, 801.0], [54.9, 801.0], [55.0, 801.0], [55.1, 802.0], [55.2, 802.0], [55.3, 802.0], [55.4, 804.0], [55.5, 804.0], [55.6, 804.0], [55.7, 806.0], [55.8, 806.0], [55.9, 806.0], [56.0, 806.0], [56.1, 813.0], [56.2, 813.0], [56.3, 813.0], [56.4, 814.0], [56.5, 814.0], [56.6, 814.0], [56.7, 817.0], [56.8, 817.0], [56.9, 817.0], [57.0, 817.0], [57.1, 818.0], [57.2, 818.0], [57.3, 818.0], [57.4, 841.0], [57.5, 841.0], [57.6, 841.0], [57.7, 841.0], [57.8, 841.0], [57.9, 841.0], [58.0, 841.0], [58.1, 854.0], [58.2, 854.0], [58.3, 854.0], [58.4, 859.0], [58.5, 859.0], [58.6, 859.0], [58.7, 862.0], [58.8, 862.0], [58.9, 862.0], [59.0, 862.0], [59.1, 871.0], [59.2, 871.0], [59.3, 871.0], [59.4, 884.0], [59.5, 884.0], [59.6, 884.0], [59.7, 886.0], [59.8, 886.0], [59.9, 886.0], [60.0, 886.0], [60.1, 887.0], [60.2, 887.0], [60.3, 887.0], [60.4, 890.0], [60.5, 890.0], [60.6, 890.0], [60.7, 891.0], [60.8, 891.0], [60.9, 891.0], [61.0, 891.0], [61.1, 912.0], [61.2, 912.0], [61.3, 912.0], [61.4, 928.0], [61.5, 928.0], [61.6, 928.0], [61.7, 932.0], [61.8, 932.0], [61.9, 932.0], [62.0, 932.0], [62.1, 940.0], [62.2, 940.0], [62.3, 940.0], [62.4, 946.0], [62.5, 946.0], [62.6, 946.0], [62.7, 947.0], [62.8, 947.0], [62.9, 947.0], [63.0, 947.0], [63.1, 947.0], [63.2, 947.0], [63.3, 947.0], [63.4, 953.0], [63.5, 953.0], [63.6, 953.0], [63.7, 953.0], [63.8, 953.0], [63.9, 953.0], [64.0, 953.0], [64.1, 966.0], [64.2, 966.0], [64.3, 966.0], [64.4, 966.0], [64.5, 966.0], [64.6, 966.0], [64.7, 971.0], [64.8, 971.0], [64.9, 971.0], [65.0, 971.0], [65.1, 984.0], [65.2, 984.0], [65.3, 984.0], [65.4, 1004.0], [65.5, 1004.0], [65.6, 1004.0], [65.7, 1009.0], [65.8, 1009.0], [65.9, 1009.0], [66.0, 1009.0], [66.1, 1014.0], [66.2, 1014.0], [66.3, 1014.0], [66.4, 1014.0], [66.5, 1014.0], [66.6, 1014.0], [66.7, 1014.0], [66.8, 1014.0], [66.9, 1014.0], [67.0, 1014.0], [67.1, 1019.0], [67.2, 1019.0], [67.3, 1019.0], [67.4, 1024.0], [67.5, 1024.0], [67.6, 1024.0], [67.7, 1025.0], [67.8, 1025.0], [67.9, 1025.0], [68.0, 1025.0], [68.1, 1025.0], [68.2, 1025.0], [68.3, 1025.0], [68.4, 1029.0], [68.5, 1029.0], [68.6, 1029.0], [68.7, 1034.0], [68.8, 1034.0], [68.9, 1034.0], [69.0, 1034.0], [69.1, 1036.0], [69.2, 1036.0], [69.3, 1036.0], [69.4, 1037.0], [69.5, 1037.0], [69.6, 1037.0], [69.7, 1040.0], [69.8, 1040.0], [69.9, 1040.0], [70.0, 1040.0], [70.1, 1045.0], [70.2, 1045.0], [70.3, 1045.0], [70.4, 1058.0], [70.5, 1058.0], [70.6, 1058.0], [70.7, 1059.0], [70.8, 1059.0], [70.9, 1059.0], [71.0, 1059.0], [71.1, 1070.0], [71.2, 1070.0], [71.3, 1070.0], [71.4, 1073.0], [71.5, 1073.0], [71.6, 1073.0], [71.7, 1074.0], [71.8, 1074.0], [71.9, 1074.0], [72.0, 1074.0], [72.1, 1084.0], [72.2, 1084.0], [72.3, 1084.0], [72.4, 1104.0], [72.5, 1104.0], [72.6, 1104.0], [72.7, 1105.0], [72.8, 1105.0], [72.9, 1105.0], [73.0, 1105.0], [73.1, 1111.0], [73.2, 1111.0], [73.3, 1111.0], [73.4, 1115.0], [73.5, 1115.0], [73.6, 1115.0], [73.7, 1119.0], [73.8, 1119.0], [73.9, 1119.0], [74.0, 1119.0], [74.1, 1119.0], [74.2, 1119.0], [74.3, 1119.0], [74.4, 1122.0], [74.5, 1122.0], [74.6, 1122.0], [74.7, 1138.0], [74.8, 1138.0], [74.9, 1138.0], [75.0, 1138.0], [75.1, 1144.0], [75.2, 1144.0], [75.3, 1144.0], [75.4, 1149.0], [75.5, 1149.0], [75.6, 1149.0], [75.7, 1149.0], [75.8, 1149.0], [75.9, 1149.0], [76.0, 1149.0], [76.1, 1166.0], [76.2, 1166.0], [76.3, 1166.0], [76.4, 1171.0], [76.5, 1171.0], [76.6, 1171.0], [76.7, 1175.0], [76.8, 1175.0], [76.9, 1175.0], [77.0, 1175.0], [77.1, 1178.0], [77.2, 1178.0], [77.3, 1178.0], [77.4, 1185.0], [77.5, 1185.0], [77.6, 1185.0], [77.7, 1206.0], [77.8, 1206.0], [77.9, 1206.0], [78.0, 1206.0], [78.1, 1208.0], [78.2, 1208.0], [78.3, 1208.0], [78.4, 1209.0], [78.5, 1209.0], [78.6, 1209.0], [78.7, 1221.0], [78.8, 1221.0], [78.9, 1221.0], [79.0, 1221.0], [79.1, 1224.0], [79.2, 1224.0], [79.3, 1224.0], [79.4, 1224.0], [79.5, 1224.0], [79.6, 1224.0], [79.7, 1225.0], [79.8, 1225.0], [79.9, 1225.0], [80.0, 1225.0], [80.1, 1227.0], [80.2, 1227.0], [80.3, 1227.0], [80.4, 1234.0], [80.5, 1234.0], [80.6, 1234.0], [80.7, 1236.0], [80.8, 1236.0], [80.9, 1236.0], [81.0, 1242.0], [81.1, 1242.0], [81.2, 1242.0], [81.3, 1242.0], [81.4, 1248.0], [81.5, 1248.0], [81.6, 1248.0], [81.7, 1258.0], [81.8, 1258.0], [81.9, 1258.0], [82.0, 1259.0], [82.1, 1259.0], [82.2, 1259.0], [82.3, 1259.0], [82.4, 1262.0], [82.5, 1262.0], [82.6, 1262.0], [82.7, 1270.0], [82.8, 1270.0], [82.9, 1270.0], [83.0, 1271.0], [83.1, 1271.0], [83.2, 1271.0], [83.3, 1271.0], [83.4, 1272.0], [83.5, 1272.0], [83.6, 1272.0], [83.7, 1281.0], [83.8, 1281.0], [83.9, 1281.0], [84.0, 1293.0], [84.1, 1293.0], [84.2, 1293.0], [84.3, 1293.0], [84.4, 1299.0], [84.5, 1299.0], [84.6, 1299.0], [84.7, 1299.0], [84.8, 1299.0], [84.9, 1299.0], [85.0, 1300.0], [85.1, 1300.0], [85.2, 1300.0], [85.3, 1300.0], [85.4, 1303.0], [85.5, 1303.0], [85.6, 1303.0], [85.7, 1311.0], [85.8, 1311.0], [85.9, 1311.0], [86.0, 1319.0], [86.1, 1319.0], [86.2, 1319.0], [86.3, 1319.0], [86.4, 1319.0], [86.5, 1319.0], [86.6, 1319.0], [86.7, 1323.0], [86.8, 1323.0], [86.9, 1323.0], [87.0, 1325.0], [87.1, 1325.0], [87.2, 1325.0], [87.3, 1325.0], [87.4, 1328.0], [87.5, 1328.0], [87.6, 1328.0], [87.7, 1330.0], [87.8, 1330.0], [87.9, 1330.0], [88.0, 1335.0], [88.1, 1335.0], [88.2, 1335.0], [88.3, 1335.0], [88.4, 1336.0], [88.5, 1336.0], [88.6, 1336.0], [88.7, 1338.0], [88.8, 1338.0], [88.9, 1338.0], [89.0, 1350.0], [89.1, 1350.0], [89.2, 1350.0], [89.3, 1350.0], [89.4, 1351.0], [89.5, 1351.0], [89.6, 1351.0], [89.7, 1351.0], [89.8, 1351.0], [89.9, 1351.0], [90.0, 1358.0], [90.1, 1358.0], [90.2, 1358.0], [90.3, 1358.0], [90.4, 1361.0], [90.5, 1361.0], [90.6, 1361.0], [90.7, 1363.0], [90.8, 1363.0], [90.9, 1363.0], [91.0, 1377.0], [91.1, 1377.0], [91.2, 1377.0], [91.3, 1377.0], [91.4, 1380.0], [91.5, 1380.0], [91.6, 1380.0], [91.7, 1400.0], [91.8, 1400.0], [91.9, 1400.0], [92.0, 1404.0], [92.1, 1404.0], [92.2, 1404.0], [92.3, 1404.0], [92.4, 1409.0], [92.5, 1409.0], [92.6, 1409.0], [92.7, 1417.0], [92.8, 1417.0], [92.9, 1417.0], [93.0, 1422.0], [93.1, 1422.0], [93.2, 1422.0], [93.3, 1422.0], [93.4, 1425.0], [93.5, 1425.0], [93.6, 1425.0], [93.7, 1431.0], [93.8, 1431.0], [93.9, 1431.0], [94.0, 1433.0], [94.1, 1433.0], [94.2, 1433.0], [94.3, 1433.0], [94.4, 1439.0], [94.5, 1439.0], [94.6, 1439.0], [94.7, 1443.0], [94.8, 1443.0], [94.9, 1443.0], [95.0, 1457.0], [95.1, 1457.0], [95.2, 1457.0], [95.3, 1457.0], [95.4, 1492.0], [95.5, 1492.0], [95.6, 1492.0], [95.7, 1513.0], [95.8, 1513.0], [95.9, 1513.0], [96.0, 1526.0], [96.1, 1526.0], [96.2, 1526.0], [96.3, 1526.0], [96.4, 1530.0], [96.5, 1530.0], [96.6, 1530.0], [96.7, 1540.0], [96.8, 1540.0], [96.9, 1540.0], [97.0, 1540.0], [97.1, 1540.0], [97.2, 1540.0], [97.3, 1540.0], [97.4, 1546.0], [97.5, 1546.0], [97.6, 1546.0], [97.7, 1562.0], [97.8, 1562.0], [97.9, 1562.0], [98.0, 1585.0], [98.1, 1585.0], [98.2, 1585.0], [98.3, 1585.0], [98.4, 1598.0], [98.5, 1598.0], [98.6, 1598.0], [98.7, 1733.0], [98.8, 1733.0], [98.9, 1733.0], [99.0, 1762.0], [99.1, 1762.0], [99.2, 1762.0], [99.3, 1762.0], [99.4, 1791.0], [99.5, 1791.0], [99.6, 1791.0], [99.7, 3612.0], [99.8, 3612.0], [99.9, 3612.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[0.0, 7.0], [0.1, 7.0], [0.2, 9.0], [0.3, 13.0], [0.4, 16.0], [0.5, 19.0], [0.6, 22.0], [0.7, 23.0], [0.8, 25.0], [0.9, 26.0], [1.0, 26.0], [1.1, 30.0], [1.2, 31.0], [1.3, 33.0], [1.4, 34.0], [1.5, 34.0], [1.6, 34.0], [1.7, 35.0], [1.8, 35.0], [1.9, 36.0], [2.0, 36.0], [2.1, 39.0], [2.2, 42.0], [2.3, 42.0], [2.4, 43.0], [2.5, 43.0], [2.6, 44.0], [2.7, 45.0], [2.8, 45.0], [2.9, 47.0], [3.0, 47.0], [3.1, 50.0], [3.2, 50.0], [3.3, 52.0], [3.4, 52.0], [3.5, 53.0], [3.6, 54.0], [3.7, 56.0], [3.8, 56.0], [3.9, 57.0], [4.0, 57.0], [4.1, 57.0], [4.2, 57.0], [4.3, 57.0], [4.4, 57.0], [4.5, 59.0], [4.6, 60.0], [4.7, 60.0], [4.8, 61.0], [4.9, 61.0], [5.0, 61.0], [5.1, 62.0], [5.2, 62.0], [5.3, 62.0], [5.4, 63.0], [5.5, 65.0], [5.6, 66.0], [5.7, 66.0], [5.8, 66.0], [5.9, 68.0], [6.0, 68.0], [6.1, 68.0], [6.2, 69.0], [6.3, 70.0], [6.4, 71.0], [6.5, 71.0], [6.6, 71.0], [6.7, 72.0], [6.8, 72.0], [6.9, 73.0], [7.0, 74.0], [7.1, 74.0], [7.2, 74.0], [7.3, 74.0], [7.4, 74.0], [7.5, 75.0], [7.6, 77.0], [7.7, 77.0], [7.8, 77.0], [7.9, 77.0], [8.0, 78.0], [8.1, 78.0], [8.2, 79.0], [8.3, 79.0], [8.4, 80.0], [8.5, 80.0], [8.6, 80.0], [8.7, 81.0], [8.8, 81.0], [8.9, 81.0], [9.0, 82.0], [9.1, 82.0], [9.2, 82.0], [9.3, 82.0], [9.4, 83.0], [9.5, 83.0], [9.6, 83.0], [9.7, 84.0], [9.8, 84.0], [9.9, 85.0], [10.0, 85.0], [10.1, 85.0], [10.2, 86.0], [10.3, 86.0], [10.4, 86.0], [10.5, 87.0], [10.6, 87.0], [10.7, 87.0], [10.8, 89.0], [10.9, 89.0], [11.0, 89.0], [11.1, 89.0], [11.2, 90.0], [11.3, 90.0], [11.4, 90.0], [11.5, 91.0], [11.6, 91.0], [11.7, 92.0], [11.8, 92.0], [11.9, 93.0], [12.0, 93.0], [12.1, 93.0], [12.2, 93.0], [12.3, 94.0], [12.4, 94.0], [12.5, 94.0], [12.6, 94.0], [12.7, 94.0], [12.8, 95.0], [12.9, 95.0], [13.0, 95.0], [13.1, 95.0], [13.2, 96.0], [13.3, 96.0], [13.4, 96.0], [13.5, 98.0], [13.6, 98.0], [13.7, 98.0], [13.8, 99.0], [13.9, 99.0], [14.0, 101.0], [14.1, 101.0], [14.2, 102.0], [14.3, 102.0], [14.4, 102.0], [14.5, 103.0], [14.6, 103.0], [14.7, 103.0], [14.8, 103.0], [14.9, 103.0], [15.0, 103.0], [15.1, 103.0], [15.2, 103.0], [15.3, 104.0], [15.4, 104.0], [15.5, 105.0], [15.6, 105.0], [15.7, 106.0], [15.8, 106.0], [15.9, 106.0], [16.0, 106.0], [16.1, 106.0], [16.2, 106.0], [16.3, 106.0], [16.4, 106.0], [16.5, 108.0], [16.6, 108.0], [16.7, 108.0], [16.8, 109.0], [16.9, 109.0], [17.0, 110.0], [17.1, 110.0], [17.2, 111.0], [17.3, 111.0], [17.4, 112.0], [17.5, 112.0], [17.6, 112.0], [17.7, 113.0], [17.8, 113.0], [17.9, 114.0], [18.0, 115.0], [18.1, 115.0], [18.2, 115.0], [18.3, 115.0], [18.4, 115.0], [18.5, 116.0], [18.6, 117.0], [18.7, 117.0], [18.8, 118.0], [18.9, 119.0], [19.0, 120.0], [19.1, 120.0], [19.2, 120.0], [19.3, 120.0], [19.4, 121.0], [19.5, 122.0], [19.6, 122.0], [19.7, 123.0], [19.8, 123.0], [19.9, 123.0], [20.0, 123.0], [20.1, 123.0], [20.2, 125.0], [20.3, 125.0], [20.4, 126.0], [20.5, 127.0], [20.6, 128.0], [20.7, 130.0], [20.8, 130.0], [20.9, 131.0], [21.0, 131.0], [21.1, 131.0], [21.2, 131.0], [21.3, 132.0], [21.4, 133.0], [21.5, 133.0], [21.6, 134.0], [21.7, 135.0], [21.8, 135.0], [21.9, 136.0], [22.0, 136.0], [22.1, 136.0], [22.2, 137.0], [22.3, 138.0], [22.4, 138.0], [22.5, 138.0], [22.6, 142.0], [22.7, 142.0], [22.8, 143.0], [22.9, 144.0], [23.0, 145.0], [23.1, 145.0], [23.2, 145.0], [23.3, 148.0], [23.4, 149.0], [23.5, 152.0], [23.6, 153.0], [23.7, 154.0], [23.8, 154.0], [23.9, 155.0], [24.0, 157.0], [24.1, 157.0], [24.2, 160.0], [24.3, 162.0], [24.4, 162.0], [24.5, 163.0], [24.6, 163.0], [24.7, 163.0], [24.8, 164.0], [24.9, 165.0], [25.0, 169.0], [25.1, 169.0], [25.2, 170.0], [25.3, 172.0], [25.4, 181.0], [25.5, 183.0], [25.6, 183.0], [25.7, 184.0], [25.8, 184.0], [25.9, 185.0], [26.0, 187.0], [26.1, 187.0], [26.2, 189.0], [26.3, 190.0], [26.4, 204.0], [26.5, 204.0], [26.6, 205.0], [26.7, 208.0], [26.8, 210.0], [26.9, 212.0], [27.0, 221.0], [27.1, 221.0], [27.2, 231.0], [27.3, 232.0], [27.4, 232.0], [27.5, 237.0], [27.6, 254.0], [27.7, 255.0], [27.8, 256.0], [27.9, 257.0], [28.0, 266.0], [28.1, 266.0], [28.2, 267.0], [28.3, 276.0], [28.4, 287.0], [28.5, 293.0], [28.6, 309.0], [28.7, 310.0], [28.8, 312.0], [28.9, 314.0], [29.0, 320.0], [29.1, 320.0], [29.2, 321.0], [29.3, 324.0], [29.4, 324.0], [29.5, 326.0], [29.6, 327.0], [29.7, 339.0], [29.8, 341.0], [29.9, 352.0], [30.0, 364.0], [30.1, 364.0], [30.2, 365.0], [30.3, 368.0], [30.4, 370.0], [30.5, 382.0], [30.6, 392.0], [30.7, 393.0], [30.8, 398.0], [30.9, 398.0], [31.0, 405.0], [31.1, 405.0], [31.2, 412.0], [31.3, 417.0], [31.4, 423.0], [31.5, 425.0], [31.6, 428.0], [31.7, 434.0], [31.8, 437.0], [31.9, 442.0], [32.0, 443.0], [32.1, 443.0], [32.2, 447.0], [32.3, 455.0], [32.4, 466.0], [32.5, 466.0], [32.6, 470.0], [32.7, 474.0], [32.8, 474.0], [32.9, 479.0], [33.0, 482.0], [33.1, 482.0], [33.2, 484.0], [33.3, 490.0], [33.4, 494.0], [33.5, 496.0], [33.6, 500.0], [33.7, 506.0], [33.8, 509.0], [33.9, 512.0], [34.0, 512.0], [34.1, 512.0], [34.2, 516.0], [34.3, 517.0], [34.4, 518.0], [34.5, 520.0], [34.6, 523.0], [34.7, 526.0], [34.8, 529.0], [34.9, 531.0], [35.0, 531.0], [35.1, 531.0], [35.2, 532.0], [35.3, 534.0], [35.4, 537.0], [35.5, 544.0], [35.6, 548.0], [35.7, 548.0], [35.8, 551.0], [35.9, 556.0], [36.0, 556.0], [36.1, 565.0], [36.2, 568.0], [36.3, 573.0], [36.4, 574.0], [36.5, 577.0], [36.6, 579.0], [36.7, 580.0], [36.8, 586.0], [36.9, 589.0], [37.0, 589.0], [37.1, 589.0], [37.2, 594.0], [37.3, 598.0], [37.4, 600.0], [37.5, 607.0], [37.6, 610.0], [37.7, 614.0], [37.8, 614.0], [37.9, 616.0], [38.0, 616.0], [38.1, 616.0], [38.2, 618.0], [38.3, 621.0], [38.4, 625.0], [38.5, 626.0], [38.6, 634.0], [38.7, 639.0], [38.8, 645.0], [38.9, 647.0], [39.0, 647.0], [39.1, 648.0], [39.2, 651.0], [39.3, 652.0], [39.4, 659.0], [39.5, 660.0], [39.6, 664.0], [39.7, 666.0], [39.8, 668.0], [39.9, 670.0], [40.0, 670.0], [40.1, 671.0], [40.2, 673.0], [40.3, 674.0], [40.4, 676.0], [40.5, 684.0], [40.6, 684.0], [40.7, 684.0], [40.8, 685.0], [40.9, 688.0], [41.0, 688.0], [41.1, 690.0], [41.2, 691.0], [41.3, 691.0], [41.4, 691.0], [41.5, 693.0], [41.6, 698.0], [41.7, 700.0], [41.8, 709.0], [41.9, 710.0], [42.0, 710.0], [42.1, 712.0], [42.2, 715.0], [42.3, 723.0], [42.4, 726.0], [42.5, 730.0], [42.6, 731.0], [42.7, 732.0], [42.8, 739.0], [42.9, 739.0], [43.0, 739.0], [43.1, 740.0], [43.2, 740.0], [43.3, 741.0], [43.4, 743.0], [43.5, 744.0], [43.6, 750.0], [43.7, 760.0], [43.8, 768.0], [43.9, 769.0], [44.0, 769.0], [44.1, 771.0], [44.2, 773.0], [44.3, 774.0], [44.4, 783.0], [44.5, 784.0], [44.6, 787.0], [44.7, 787.0], [44.8, 798.0], [44.9, 803.0], [45.0, 803.0], [45.1, 803.0], [45.2, 804.0], [45.3, 804.0], [45.4, 804.0], [45.5, 807.0], [45.6, 807.0], [45.7, 812.0], [45.8, 813.0], [45.9, 815.0], [46.0, 815.0], [46.1, 821.0], [46.2, 824.0], [46.3, 825.0], [46.4, 825.0], [46.5, 825.0], [46.6, 826.0], [46.7, 828.0], [46.8, 832.0], [46.9, 833.0], [47.0, 833.0], [47.1, 833.0], [47.2, 840.0], [47.3, 845.0], [47.4, 846.0], [47.5, 848.0], [47.6, 848.0], [47.7, 848.0], [47.8, 851.0], [47.9, 851.0], [48.0, 851.0], [48.1, 851.0], [48.2, 852.0], [48.3, 853.0], [48.4, 854.0], [48.5, 856.0], [48.6, 859.0], [48.7, 862.0], [48.8, 864.0], [48.9, 871.0], [49.0, 871.0], [49.1, 871.0], [49.2, 874.0], [49.3, 877.0], [49.4, 877.0], [49.5, 883.0], [49.6, 885.0], [49.7, 888.0], [49.8, 888.0], [49.9, 889.0], [50.0, 889.0], [50.1, 890.0], [50.2, 891.0], [50.3, 891.0], [50.4, 893.0], [50.5, 894.0], [50.6, 894.0], [50.7, 895.0], [50.8, 897.0], [50.9, 899.0], [51.0, 899.0], [51.1, 901.0], [51.2, 901.0], [51.3, 901.0], [51.4, 902.0], [51.5, 902.0], [51.6, 903.0], [51.7, 903.0], [51.8, 908.0], [51.9, 908.0], [52.0, 908.0], [52.1, 911.0], [52.2, 913.0], [52.3, 913.0], [52.4, 915.0], [52.5, 915.0], [52.6, 916.0], [52.7, 917.0], [52.8, 917.0], [52.9, 917.0], [53.0, 917.0], [53.1, 919.0], [53.2, 919.0], [53.3, 921.0], [53.4, 925.0], [53.5, 925.0], [53.6, 925.0], [53.7, 928.0], [53.8, 929.0], [53.9, 929.0], [54.0, 929.0], [54.1, 933.0], [54.2, 936.0], [54.3, 938.0], [54.4, 942.0], [54.5, 945.0], [54.6, 950.0], [54.7, 952.0], [54.8, 952.0], [54.9, 953.0], [55.0, 953.0], [55.1, 957.0], [55.2, 957.0], [55.3, 959.0], [55.4, 963.0], [55.5, 965.0], [55.6, 966.0], [55.7, 966.0], [55.8, 967.0], [55.9, 971.0], [56.0, 971.0], [56.1, 971.0], [56.2, 971.0], [56.3, 972.0], [56.4, 977.0], [56.5, 980.0], [56.6, 984.0], [56.7, 985.0], [56.8, 986.0], [56.9, 986.0], [57.0, 986.0], [57.1, 989.0], [57.2, 991.0], [57.3, 992.0], [57.4, 993.0], [57.5, 997.0], [57.6, 997.0], [57.7, 997.0], [57.8, 997.0], [57.9, 1001.0], [58.0, 1001.0], [58.1, 1008.0], [58.2, 1013.0], [58.3, 1014.0], [58.4, 1019.0], [58.5, 1020.0], [58.6, 1024.0], [58.7, 1026.0], [58.8, 1027.0], [58.9, 1029.0], [59.0, 1029.0], [59.1, 1036.0], [59.2, 1036.0], [59.3, 1042.0], [59.4, 1043.0], [59.5, 1044.0], [59.6, 1050.0], [59.7, 1051.0], [59.8, 1054.0], [59.9, 1055.0], [60.0, 1055.0], [60.1, 1056.0], [60.2, 1056.0], [60.3, 1060.0], [60.4, 1063.0], [60.5, 1064.0], [60.6, 1064.0], [60.7, 1064.0], [60.8, 1065.0], [60.9, 1066.0], [61.0, 1066.0], [61.1, 1066.0], [61.2, 1066.0], [61.3, 1068.0], [61.4, 1068.0], [61.5, 1069.0], [61.6, 1070.0], [61.7, 1071.0], [61.8, 1071.0], [61.9, 1073.0], [62.0, 1073.0], [62.1, 1073.0], [62.2, 1076.0], [62.3, 1078.0], [62.4, 1078.0], [62.5, 1080.0], [62.6, 1082.0], [62.7, 1083.0], [62.8, 1086.0], [62.9, 1088.0], [63.0, 1088.0], [63.1, 1092.0], [63.2, 1096.0], [63.3, 1097.0], [63.4, 1097.0], [63.5, 1099.0], [63.6, 1100.0], [63.7, 1103.0], [63.8, 1104.0], [63.9, 1104.0], [64.0, 1104.0], [64.1, 1105.0], [64.2, 1106.0], [64.3, 1109.0], [64.4, 1112.0], [64.5, 1118.0], [64.6, 1119.0], [64.7, 1119.0], [64.8, 1125.0], [64.9, 1126.0], [65.0, 1126.0], [65.1, 1126.0], [65.2, 1129.0], [65.3, 1132.0], [65.4, 1137.0], [65.5, 1137.0], [65.6, 1139.0], [65.7, 1140.0], [65.8, 1142.0], [65.9, 1150.0], [66.0, 1150.0], [66.1, 1151.0], [66.2, 1153.0], [66.3, 1153.0], [66.4, 1155.0], [66.5, 1161.0], [66.6, 1162.0], [66.7, 1164.0], [66.8, 1165.0], [66.9, 1167.0], [67.0, 1167.0], [67.1, 1169.0], [67.2, 1172.0], [67.3, 1173.0], [67.4, 1175.0], [67.5, 1178.0], [67.6, 1179.0], [67.7, 1179.0], [67.8, 1183.0], [67.9, 1183.0], [68.0, 1183.0], [68.1, 1183.0], [68.2, 1188.0], [68.3, 1192.0], [68.4, 1194.0], [68.5, 1195.0], [68.6, 1196.0], [68.7, 1197.0], [68.8, 1198.0], [68.9, 1199.0], [69.0, 1199.0], [69.1, 1199.0], [69.2, 1199.0], [69.3, 1199.0], [69.4, 1204.0], [69.5, 1209.0], [69.6, 1214.0], [69.7, 1216.0], [69.8, 1216.0], [69.9, 1218.0], [70.0, 1218.0], [70.1, 1220.0], [70.2, 1221.0], [70.3, 1222.0], [70.4, 1224.0], [70.5, 1228.0], [70.6, 1228.0], [70.7, 1228.0], [70.8, 1232.0], [70.9, 1233.0], [71.0, 1233.0], [71.1, 1233.0], [71.2, 1234.0], [71.3, 1238.0], [71.4, 1238.0], [71.5, 1239.0], [71.6, 1239.0], [71.7, 1241.0], [71.8, 1244.0], [71.9, 1244.0], [72.0, 1244.0], [72.1, 1250.0], [72.2, 1252.0], [72.3, 1253.0], [72.4, 1254.0], [72.5, 1258.0], [72.6, 1259.0], [72.7, 1260.0], [72.8, 1264.0], [72.9, 1269.0], [73.0, 1269.0], [73.1, 1270.0], [73.2, 1272.0], [73.3, 1279.0], [73.4, 1280.0], [73.5, 1282.0], [73.6, 1289.0], [73.7, 1289.0], [73.8, 1292.0], [73.9, 1298.0], [74.0, 1298.0], [74.1, 1299.0], [74.2, 1303.0], [74.3, 1308.0], [74.4, 1314.0], [74.5, 1314.0], [74.6, 1316.0], [74.7, 1316.0], [74.8, 1317.0], [74.9, 1319.0], [75.0, 1319.0], [75.1, 1325.0], [75.2, 1326.0], [75.3, 1328.0], [75.4, 1330.0], [75.5, 1331.0], [75.6, 1332.0], [75.7, 1334.0], [75.8, 1335.0], [75.9, 1335.0], [76.0, 1335.0], [76.1, 1339.0], [76.2, 1342.0], [76.3, 1345.0], [76.4, 1346.0], [76.5, 1351.0], [76.6, 1355.0], [76.7, 1357.0], [76.8, 1358.0], [76.9, 1358.0], [77.0, 1358.0], [77.1, 1361.0], [77.2, 1365.0], [77.3, 1369.0], [77.4, 1371.0], [77.5, 1372.0], [77.6, 1377.0], [77.7, 1380.0], [77.8, 1384.0], [77.9, 1386.0], [78.0, 1386.0], [78.1, 1388.0], [78.2, 1393.0], [78.3, 1395.0], [78.4, 1396.0], [78.5, 1401.0], [78.6, 1402.0], [78.7, 1403.0], [78.8, 1406.0], [78.9, 1406.0], [79.0, 1406.0], [79.1, 1409.0], [79.2, 1410.0], [79.3, 1410.0], [79.4, 1410.0], [79.5, 1411.0], [79.6, 1411.0], [79.7, 1412.0], [79.8, 1416.0], [79.9, 1417.0], [80.0, 1417.0], [80.1, 1418.0], [80.2, 1423.0], [80.3, 1424.0], [80.4, 1424.0], [80.5, 1429.0], [80.6, 1430.0], [80.7, 1431.0], [80.8, 1438.0], [80.9, 1438.0], [81.0, 1438.0], [81.1, 1439.0], [81.2, 1441.0], [81.3, 1442.0], [81.4, 1443.0], [81.5, 1443.0], [81.6, 1444.0], [81.7, 1453.0], [81.8, 1468.0], [81.9, 1471.0], [82.0, 1471.0], [82.1, 1472.0], [82.2, 1474.0], [82.3, 1475.0], [82.4, 1476.0], [82.5, 1485.0], [82.6, 1485.0], [82.7, 1489.0], [82.8, 1490.0], [82.9, 1491.0], [83.0, 1491.0], [83.1, 1493.0], [83.2, 1504.0], [83.3, 1512.0], [83.4, 1514.0], [83.5, 1515.0], [83.6, 1519.0], [83.7, 1520.0], [83.8, 1537.0], [83.9, 1540.0], [84.0, 1540.0], [84.1, 1549.0], [84.2, 1551.0], [84.3, 1554.0], [84.4, 1558.0], [84.5, 1572.0], [84.6, 1573.0], [84.7, 1580.0], [84.8, 1583.0], [84.9, 1591.0], [85.0, 1591.0], [85.1, 1593.0], [85.2, 1596.0], [85.3, 1605.0], [85.4, 1615.0], [85.5, 1615.0], [85.6, 1637.0], [85.7, 1641.0], [85.8, 1642.0], [85.9, 1642.0], [86.0, 1642.0], [86.1, 1643.0], [86.2, 1645.0], [86.3, 1652.0], [86.4, 1656.0], [86.5, 1658.0], [86.6, 1661.0], [86.7, 1662.0], [86.8, 1662.0], [86.9, 1668.0], [87.0, 1668.0], [87.1, 1670.0], [87.2, 1679.0], [87.3, 1680.0], [87.4, 1682.0], [87.5, 1683.0], [87.6, 1694.0], [87.7, 1694.0], [87.8, 1694.0], [87.9, 1696.0], [88.0, 1696.0], [88.1, 1709.0], [88.2, 1711.0], [88.3, 1712.0], [88.4, 1725.0], [88.5, 1729.0], [88.6, 1734.0], [88.7, 1740.0], [88.8, 1741.0], [88.9, 1743.0], [89.0, 1743.0], [89.1, 1746.0], [89.2, 1754.0], [89.3, 1756.0], [89.4, 1757.0], [89.5, 1758.0], [89.6, 1759.0], [89.7, 1765.0], [89.8, 1785.0], [89.9, 1793.0], [90.0, 1793.0], [90.1, 1793.0], [90.2, 1793.0], [90.3, 1801.0], [90.4, 1805.0], [90.5, 1805.0], [90.6, 1816.0], [90.7, 1820.0], [90.8, 1827.0], [90.9, 1831.0], [91.0, 1831.0], [91.1, 1850.0], [91.2, 1851.0], [91.3, 1861.0], [91.4, 1864.0], [91.5, 1864.0], [91.6, 1868.0], [91.7, 1876.0], [91.8, 1878.0], [91.9, 1883.0], [92.0, 1883.0], [92.1, 1885.0], [92.2, 1886.0], [92.3, 1887.0], [92.4, 1888.0], [92.5, 1906.0], [92.6, 1909.0], [92.7, 1917.0], [92.8, 1934.0], [92.9, 1944.0], [93.0, 1944.0], [93.1, 1946.0], [93.2, 1951.0], [93.3, 1958.0], [93.4, 1964.0], [93.5, 1964.0], [93.6, 1975.0], [93.7, 1993.0], [93.8, 1994.0], [93.9, 2000.0], [94.0, 2000.0], [94.1, 2018.0], [94.2, 2029.0], [94.3, 2036.0], [94.4, 2050.0], [94.5, 2062.0], [94.6, 2064.0], [94.7, 2067.0], [94.8, 2070.0], [94.9, 2073.0], [95.0, 2073.0], [95.1, 2090.0], [95.2, 2100.0], [95.3, 2111.0], [95.4, 2112.0], [95.5, 2117.0], [95.6, 2120.0], [95.7, 2126.0], [95.8, 2128.0], [95.9, 2130.0], [96.0, 2130.0], [96.1, 2137.0], [96.2, 2158.0], [96.3, 2197.0], [96.4, 2238.0], [96.5, 2245.0], [96.6, 2247.0], [96.7, 2266.0], [96.8, 2275.0], [96.9, 2301.0], [97.0, 2301.0], [97.1, 2305.0], [97.2, 2313.0], [97.3, 2326.0], [97.4, 2337.0], [97.5, 2337.0], [97.6, 2354.0], [97.7, 2370.0], [97.8, 2370.0], [97.9, 2387.0], [98.0, 2387.0], [98.1, 2422.0], [98.2, 2455.0], [98.3, 2466.0], [98.4, 2510.0], [98.5, 2526.0], [98.6, 2562.0], [98.7, 2567.0], [98.8, 2584.0], [98.9, 2592.0], [99.0, 2592.0], [99.1, 2661.0], [99.2, 2740.0], [99.3, 2808.0], [99.4, 2822.0], [99.5, 2836.0], [99.6, 2856.0], [99.7, 2862.0], [99.8, 3215.0], [99.9, 5746.0], [100.0, 5746.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 8.0], [0.1, 8.0], [0.2, 9.0], [0.3, 11.0], [0.4, 16.0], [0.5, 18.0], [0.6, 19.0], [0.7, 19.0], [0.8, 20.0], [0.9, 21.0], [1.0, 22.0], [1.1, 22.0], [1.2, 23.0], [1.3, 24.0], [1.4, 24.0], [1.5, 32.0], [1.6, 33.0], [1.7, 33.0], [1.8, 33.0], [1.9, 34.0], [2.0, 34.0], [2.1, 34.0], [2.2, 35.0], [2.3, 36.0], [2.4, 37.0], [2.5, 37.0], [2.6, 38.0], [2.7, 38.0], [2.8, 41.0], [2.9, 42.0], [3.0, 42.0], [3.1, 43.0], [3.2, 47.0], [3.3, 48.0], [3.4, 51.0], [3.5, 54.0], [3.6, 54.0], [3.7, 55.0], [3.8, 56.0], [3.9, 56.0], [4.0, 56.0], [4.1, 56.0], [4.2, 57.0], [4.3, 57.0], [4.4, 57.0], [4.5, 57.0], [4.6, 57.0], [4.7, 59.0], [4.8, 61.0], [4.9, 63.0], [5.0, 68.0], [5.1, 68.0], [5.2, 68.0], [5.3, 71.0], [5.4, 72.0], [5.5, 72.0], [5.6, 73.0], [5.7, 73.0], [5.8, 74.0], [5.9, 74.0], [6.0, 76.0], [6.1, 76.0], [6.2, 76.0], [6.3, 78.0], [6.4, 78.0], [6.5, 80.0], [6.6, 80.0], [6.7, 81.0], [6.8, 84.0], [6.9, 84.0], [7.0, 85.0], [7.1, 85.0], [7.2, 85.0], [7.3, 86.0], [7.4, 86.0], [7.5, 86.0], [7.6, 87.0], [7.7, 88.0], [7.8, 88.0], [7.9, 88.0], [8.0, 88.0], [8.1, 88.0], [8.2, 89.0], [8.3, 89.0], [8.4, 91.0], [8.5, 91.0], [8.6, 92.0], [8.7, 93.0], [8.8, 94.0], [8.9, 94.0], [9.0, 94.0], [9.1, 94.0], [9.2, 97.0], [9.3, 98.0], [9.4, 98.0], [9.5, 100.0], [9.6, 102.0], [9.7, 102.0], [9.8, 103.0], [9.9, 103.0], [10.0, 105.0], [10.1, 105.0], [10.2, 105.0], [10.3, 106.0], [10.4, 106.0], [10.5, 107.0], [10.6, 107.0], [10.7, 110.0], [10.8, 110.0], [10.9, 110.0], [11.0, 110.0], [11.1, 110.0], [11.2, 111.0], [11.3, 115.0], [11.4, 115.0], [11.5, 115.0], [11.6, 116.0], [11.7, 116.0], [11.8, 116.0], [11.9, 117.0], [12.0, 117.0], [12.1, 117.0], [12.2, 118.0], [12.3, 119.0], [12.4, 119.0], [12.5, 120.0], [12.6, 121.0], [12.7, 121.0], [12.8, 122.0], [12.9, 125.0], [13.0, 125.0], [13.1, 125.0], [13.2, 126.0], [13.3, 126.0], [13.4, 126.0], [13.5, 127.0], [13.6, 128.0], [13.7, 128.0], [13.8, 129.0], [13.9, 132.0], [14.0, 132.0], [14.1, 132.0], [14.2, 133.0], [14.3, 134.0], [14.4, 134.0], [14.5, 135.0], [14.6, 136.0], [14.7, 137.0], [14.8, 137.0], [14.9, 138.0], [15.0, 139.0], [15.1, 139.0], [15.2, 139.0], [15.3, 140.0], [15.4, 140.0], [15.5, 141.0], [15.6, 141.0], [15.7, 141.0], [15.8, 143.0], [15.9, 144.0], [16.0, 145.0], [16.1, 145.0], [16.2, 145.0], [16.3, 146.0], [16.4, 147.0], [16.5, 148.0], [16.6, 149.0], [16.7, 150.0], [16.8, 151.0], [16.9, 151.0], [17.0, 151.0], [17.1, 151.0], [17.2, 153.0], [17.3, 153.0], [17.4, 160.0], [17.5, 160.0], [17.6, 160.0], [17.7, 162.0], [17.8, 164.0], [17.9, 165.0], [18.0, 165.0], [18.1, 165.0], [18.2, 168.0], [18.3, 169.0], [18.4, 176.0], [18.5, 178.0], [18.6, 179.0], [18.7, 180.0], [18.8, 181.0], [18.9, 182.0], [19.0, 183.0], [19.1, 183.0], [19.2, 183.0], [19.3, 184.0], [19.4, 184.0], [19.5, 187.0], [19.6, 187.0], [19.7, 189.0], [19.8, 192.0], [19.9, 193.0], [20.0, 193.0], [20.1, 193.0], [20.2, 196.0], [20.3, 198.0], [20.4, 199.0], [20.5, 200.0], [20.6, 201.0], [20.7, 201.0], [20.8, 201.0], [20.9, 207.0], [21.0, 207.0], [21.1, 207.0], [21.2, 210.0], [21.3, 211.0], [21.4, 211.0], [21.5, 212.0], [21.6, 215.0], [21.7, 217.0], [21.8, 218.0], [21.9, 221.0], [22.0, 221.0], [22.1, 221.0], [22.2, 224.0], [22.3, 224.0], [22.4, 227.0], [22.5, 230.0], [22.6, 231.0], [22.7, 231.0], [22.8, 235.0], [22.9, 236.0], [23.0, 241.0], [23.1, 241.0], [23.2, 245.0], [23.3, 245.0], [23.4, 245.0], [23.5, 247.0], [23.6, 247.0], [23.7, 249.0], [23.8, 250.0], [23.9, 259.0], [24.0, 269.0], [24.1, 269.0], [24.2, 270.0], [24.3, 276.0], [24.4, 279.0], [24.5, 280.0], [24.6, 283.0], [24.7, 287.0], [24.8, 288.0], [24.9, 290.0], [25.0, 291.0], [25.1, 291.0], [25.2, 293.0], [25.3, 302.0], [25.4, 305.0], [25.5, 306.0], [25.6, 308.0], [25.7, 308.0], [25.8, 309.0], [25.9, 309.0], [26.0, 313.0], [26.1, 313.0], [26.2, 316.0], [26.3, 319.0], [26.4, 320.0], [26.5, 328.0], [26.6, 338.0], [26.7, 340.0], [26.8, 354.0], [26.9, 355.0], [27.0, 358.0], [27.1, 358.0], [27.2, 359.0], [27.3, 367.0], [27.4, 372.0], [27.5, 379.0], [27.6, 386.0], [27.7, 388.0], [27.8, 388.0], [27.9, 396.0], [28.0, 404.0], [28.1, 404.0], [28.2, 410.0], [28.3, 414.0], [28.4, 421.0], [28.5, 424.0], [28.6, 432.0], [28.7, 435.0], [28.8, 441.0], [28.9, 441.0], [29.0, 445.0], [29.1, 445.0], [29.2, 446.0], [29.3, 450.0], [29.4, 451.0], [29.5, 457.0], [29.6, 461.0], [29.7, 462.0], [29.8, 465.0], [29.9, 466.0], [30.0, 475.0], [30.1, 475.0], [30.2, 478.0], [30.3, 478.0], [30.4, 485.0], [30.5, 486.0], [30.6, 488.0], [30.7, 508.0], [30.8, 512.0], [30.9, 519.0], [31.0, 523.0], [31.1, 523.0], [31.2, 523.0], [31.3, 534.0], [31.4, 541.0], [31.5, 542.0], [31.6, 552.0], [31.7, 552.0], [31.8, 555.0], [31.9, 563.0], [32.0, 565.0], [32.1, 565.0], [32.2, 568.0], [32.3, 572.0], [32.4, 578.0], [32.5, 581.0], [32.6, 584.0], [32.7, 603.0], [32.8, 606.0], [32.9, 611.0], [33.0, 615.0], [33.1, 615.0], [33.2, 618.0], [33.3, 624.0], [33.4, 624.0], [33.5, 629.0], [33.6, 632.0], [33.7, 635.0], [33.8, 637.0], [33.9, 643.0], [34.0, 648.0], [34.1, 648.0], [34.2, 657.0], [34.3, 659.0], [34.4, 661.0], [34.5, 661.0], [34.6, 662.0], [34.7, 666.0], [34.8, 670.0], [34.9, 670.0], [35.0, 672.0], [35.1, 672.0], [35.2, 677.0], [35.3, 680.0], [35.4, 684.0], [35.5, 692.0], [35.6, 701.0], [35.7, 703.0], [35.8, 709.0], [35.9, 711.0], [36.0, 711.0], [36.1, 712.0], [36.2, 713.0], [36.3, 714.0], [36.4, 715.0], [36.5, 717.0], [36.6, 720.0], [36.7, 722.0], [36.8, 726.0], [36.9, 732.0], [37.0, 732.0], [37.1, 735.0], [37.2, 736.0], [37.3, 738.0], [37.4, 742.0], [37.5, 748.0], [37.6, 750.0], [37.7, 751.0], [37.8, 756.0], [37.9, 762.0], [38.0, 762.0], [38.1, 764.0], [38.2, 764.0], [38.3, 765.0], [38.4, 768.0], [38.5, 772.0], [38.6, 773.0], [38.7, 781.0], [38.8, 785.0], [38.9, 794.0], [39.0, 794.0], [39.1, 806.0], [39.2, 807.0], [39.3, 811.0], [39.4, 813.0], [39.5, 814.0], [39.6, 814.0], [39.7, 830.0], [39.8, 830.0], [39.9, 833.0], [40.0, 833.0], [40.1, 835.0], [40.2, 844.0], [40.3, 849.0], [40.4, 857.0], [40.5, 874.0], [40.6, 875.0], [40.7, 885.0], [40.8, 896.0], [40.9, 913.0], [41.0, 913.0], [41.1, 914.0], [41.2, 915.0], [41.3, 920.0], [41.4, 921.0], [41.5, 921.0], [41.6, 925.0], [41.7, 932.0], [41.8, 937.0], [41.9, 937.0], [42.0, 937.0], [42.1, 938.0], [42.2, 946.0], [42.3, 959.0], [42.4, 959.0], [42.5, 962.0], [42.6, 965.0], [42.7, 967.0], [42.8, 971.0], [42.9, 973.0], [43.0, 973.0], [43.1, 977.0], [43.2, 977.0], [43.3, 977.0], [43.4, 979.0], [43.5, 979.0], [43.6, 982.0], [43.7, 987.0], [43.8, 988.0], [43.9, 999.0], [44.0, 999.0], [44.1, 1003.0], [44.2, 1005.0], [44.3, 1009.0], [44.4, 1012.0], [44.5, 1012.0], [44.6, 1016.0], [44.7, 1025.0], [44.8, 1029.0], [44.9, 1034.0], [45.0, 1034.0], [45.1, 1049.0], [45.2, 1053.0], [45.3, 1053.0], [45.4, 1057.0], [45.5, 1058.0], [45.6, 1070.0], [45.7, 1072.0], [45.8, 1075.0], [45.9, 1078.0], [46.0, 1078.0], [46.1, 1081.0], [46.2, 1086.0], [46.3, 1086.0], [46.4, 1094.0], [46.5, 1101.0], [46.6, 1106.0], [46.7, 1106.0], [46.8, 1111.0], [46.9, 1122.0], [47.0, 1122.0], [47.1, 1133.0], [47.2, 1140.0], [47.3, 1142.0], [47.4, 1148.0], [47.5, 1149.0], [47.6, 1158.0], [47.7, 1162.0], [47.8, 1165.0], [47.9, 1166.0], [48.0, 1166.0], [48.1, 1174.0], [48.2, 1178.0], [48.3, 1181.0], [48.4, 1182.0], [48.5, 1185.0], [48.6, 1186.0], [48.7, 1193.0], [48.8, 1194.0], [48.9, 1194.0], [49.0, 1194.0], [49.1, 1195.0], [49.2, 1196.0], [49.3, 1197.0], [49.4, 1199.0], [49.5, 1200.0], [49.6, 1201.0], [49.7, 1215.0], [49.8, 1217.0], [49.9, 1218.0], [50.0, 1218.0], [50.1, 1219.0], [50.2, 1225.0], [50.3, 1232.0], [50.4, 1234.0], [50.5, 1235.0], [50.6, 1236.0], [50.7, 1237.0], [50.8, 1238.0], [50.9, 1241.0], [51.0, 1241.0], [51.1, 1243.0], [51.2, 1253.0], [51.3, 1256.0], [51.4, 1258.0], [51.5, 1259.0], [51.6, 1260.0], [51.7, 1261.0], [51.8, 1264.0], [51.9, 1268.0], [52.0, 1268.0], [52.1, 1271.0], [52.2, 1271.0], [52.3, 1272.0], [52.4, 1272.0], [52.5, 1273.0], [52.6, 1275.0], [52.7, 1276.0], [52.8, 1277.0], [52.9, 1278.0], [53.0, 1278.0], [53.1, 1284.0], [53.2, 1287.0], [53.3, 1293.0], [53.4, 1296.0], [53.5, 1296.0], [53.6, 1297.0], [53.7, 1303.0], [53.8, 1303.0], [53.9, 1304.0], [54.0, 1304.0], [54.1, 1304.0], [54.2, 1305.0], [54.3, 1305.0], [54.4, 1305.0], [54.5, 1307.0], [54.6, 1309.0], [54.7, 1311.0], [54.8, 1317.0], [54.9, 1329.0], [55.0, 1329.0], [55.1, 1345.0], [55.2, 1346.0], [55.3, 1347.0], [55.4, 1349.0], [55.5, 1349.0], [55.6, 1352.0], [55.7, 1355.0], [55.8, 1355.0], [55.9, 1355.0], [56.0, 1355.0], [56.1, 1361.0], [56.2, 1361.0], [56.3, 1362.0], [56.4, 1365.0], [56.5, 1366.0], [56.6, 1373.0], [56.7, 1375.0], [56.8, 1376.0], [56.9, 1378.0], [57.0, 1378.0], [57.1, 1378.0], [57.2, 1383.0], [57.3, 1388.0], [57.4, 1388.0], [57.5, 1391.0], [57.6, 1395.0], [57.7, 1398.0], [57.8, 1398.0], [57.9, 1399.0], [58.0, 1399.0], [58.1, 1399.0], [58.2, 1404.0], [58.3, 1408.0], [58.4, 1414.0], [58.5, 1419.0], [58.6, 1423.0], [58.7, 1431.0], [58.8, 1432.0], [58.9, 1434.0], [59.0, 1434.0], [59.1, 1434.0], [59.2, 1437.0], [59.3, 1439.0], [59.4, 1441.0], [59.5, 1444.0], [59.6, 1444.0], [59.7, 1445.0], [59.8, 1446.0], [59.9, 1448.0], [60.0, 1448.0], [60.1, 1452.0], [60.2, 1454.0], [60.3, 1458.0], [60.4, 1461.0], [60.5, 1462.0], [60.6, 1464.0], [60.7, 1467.0], [60.8, 1468.0], [60.9, 1471.0], [61.0, 1471.0], [61.1, 1473.0], [61.2, 1482.0], [61.3, 1483.0], [61.4, 1496.0], [61.5, 1497.0], [61.6, 1497.0], [61.7, 1504.0], [61.8, 1505.0], [61.9, 1509.0], [62.0, 1509.0], [62.1, 1510.0], [62.2, 1516.0], [62.3, 1524.0], [62.4, 1528.0], [62.5, 1528.0], [62.6, 1530.0], [62.7, 1530.0], [62.8, 1532.0], [62.9, 1546.0], [63.0, 1546.0], [63.1, 1546.0], [63.2, 1550.0], [63.3, 1551.0], [63.4, 1555.0], [63.5, 1555.0], [63.6, 1561.0], [63.7, 1563.0], [63.8, 1578.0], [63.9, 1580.0], [64.0, 1580.0], [64.1, 1580.0], [64.2, 1583.0], [64.3, 1584.0], [64.4, 1592.0], [64.5, 1600.0], [64.6, 1609.0], [64.7, 1613.0], [64.8, 1613.0], [64.9, 1619.0], [65.0, 1619.0], [65.1, 1622.0], [65.2, 1623.0], [65.3, 1631.0], [65.4, 1633.0], [65.5, 1635.0], [65.6, 1640.0], [65.7, 1643.0], [65.8, 1645.0], [65.9, 1653.0], [66.0, 1653.0], [66.1, 1653.0], [66.2, 1659.0], [66.3, 1659.0], [66.4, 1665.0], [66.5, 1668.0], [66.6, 1673.0], [66.7, 1673.0], [66.8, 1676.0], [66.9, 1680.0], [67.0, 1680.0], [67.1, 1695.0], [67.2, 1696.0], [67.3, 1698.0], [67.4, 1701.0], [67.5, 1703.0], [67.6, 1704.0], [67.7, 1705.0], [67.8, 1705.0], [67.9, 1705.0], [68.0, 1705.0], [68.1, 1708.0], [68.2, 1710.0], [68.3, 1717.0], [68.4, 1719.0], [68.5, 1722.0], [68.6, 1724.0], [68.7, 1725.0], [68.8, 1729.0], [68.9, 1737.0], [69.0, 1737.0], [69.1, 1741.0], [69.2, 1742.0], [69.3, 1744.0], [69.4, 1745.0], [69.5, 1749.0], [69.6, 1752.0], [69.7, 1764.0], [69.8, 1766.0], [69.9, 1767.0], [70.0, 1767.0], [70.1, 1770.0], [70.2, 1773.0], [70.3, 1778.0], [70.4, 1779.0], [70.5, 1779.0], [70.6, 1790.0], [70.7, 1790.0], [70.8, 1793.0], [70.9, 1795.0], [71.0, 1795.0], [71.1, 1796.0], [71.2, 1799.0], [71.3, 1803.0], [71.4, 1804.0], [71.5, 1807.0], [71.6, 1807.0], [71.7, 1808.0], [71.8, 1810.0], [71.9, 1813.0], [72.0, 1813.0], [72.1, 1814.0], [72.2, 1821.0], [72.3, 1821.0], [72.4, 1821.0], [72.5, 1822.0], [72.6, 1824.0], [72.7, 1824.0], [72.8, 1825.0], [72.9, 1826.0], [73.0, 1826.0], [73.1, 1826.0], [73.2, 1828.0], [73.3, 1836.0], [73.4, 1836.0], [73.5, 1838.0], [73.6, 1842.0], [73.7, 1844.0], [73.8, 1845.0], [73.9, 1845.0], [74.0, 1845.0], [74.1, 1846.0], [74.2, 1846.0], [74.3, 1848.0], [74.4, 1848.0], [74.5, 1856.0], [74.6, 1857.0], [74.7, 1857.0], [74.8, 1861.0], [74.9, 1861.0], [75.0, 1861.0], [75.1, 1861.0], [75.2, 1861.0], [75.3, 1866.0], [75.4, 1866.0], [75.5, 1867.0], [75.6, 1868.0], [75.7, 1879.0], [75.8, 1879.0], [75.9, 1886.0], [76.0, 1886.0], [76.1, 1886.0], [76.2, 1889.0], [76.3, 1890.0], [76.4, 1891.0], [76.5, 1893.0], [76.6, 1893.0], [76.7, 1893.0], [76.8, 1895.0], [76.9, 1896.0], [77.0, 1896.0], [77.1, 1899.0], [77.2, 1901.0], [77.3, 1902.0], [77.4, 1902.0], [77.5, 1904.0], [77.6, 1907.0], [77.7, 1908.0], [77.8, 1910.0], [77.9, 1910.0], [78.0, 1910.0], [78.1, 1912.0], [78.2, 1915.0], [78.3, 1915.0], [78.4, 1916.0], [78.5, 1916.0], [78.6, 1917.0], [78.7, 1918.0], [78.8, 1919.0], [78.9, 1920.0], [79.0, 1920.0], [79.1, 1920.0], [79.2, 1926.0], [79.3, 1932.0], [79.4, 1932.0], [79.5, 1938.0], [79.6, 1939.0], [79.7, 1943.0], [79.8, 1945.0], [79.9, 1945.0], [80.0, 1945.0], [80.1, 1947.0], [80.2, 1950.0], [80.3, 1954.0], [80.4, 1956.0], [80.5, 1963.0], [80.6, 1966.0], [80.7, 1968.0], [80.8, 1969.0], [80.9, 1972.0], [81.0, 1972.0], [81.1, 1973.0], [81.2, 1973.0], [81.3, 1977.0], [81.4, 1980.0], [81.5, 1988.0], [81.6, 1991.0], [81.7, 1997.0], [81.8, 2005.0], [81.9, 2006.0], [82.0, 2006.0], [82.1, 2006.0], [82.2, 2007.0], [82.3, 2008.0], [82.4, 2010.0], [82.5, 2010.0], [82.6, 2015.0], [82.7, 2020.0], [82.8, 2023.0], [82.9, 2024.0], [83.0, 2024.0], [83.1, 2024.0], [83.2, 2027.0], [83.3, 2027.0], [83.4, 2034.0], [83.5, 2038.0], [83.6, 2039.0], [83.7, 2040.0], [83.8, 2040.0], [83.9, 2041.0], [84.0, 2041.0], [84.1, 2049.0], [84.2, 2051.0], [84.3, 2054.0], [84.4, 2060.0], [84.5, 2061.0], [84.6, 2063.0], [84.7, 2074.0], [84.8, 2078.0], [84.9, 2078.0], [85.0, 2078.0], [85.1, 2085.0], [85.2, 2101.0], [85.3, 2107.0], [85.4, 2107.0], [85.5, 2113.0], [85.6, 2121.0], [85.7, 2124.0], [85.8, 2130.0], [85.9, 2137.0], [86.0, 2137.0], [86.1, 2143.0], [86.2, 2146.0], [86.3, 2149.0], [86.4, 2152.0], [86.5, 2168.0], [86.6, 2171.0], [86.7, 2172.0], [86.8, 2177.0], [86.9, 2182.0], [87.0, 2182.0], [87.1, 2183.0], [87.2, 2197.0], [87.3, 2198.0], [87.4, 2200.0], [87.5, 2203.0], [87.6, 2204.0], [87.7, 2210.0], [87.8, 2210.0], [87.9, 2212.0], [88.0, 2212.0], [88.1, 2215.0], [88.2, 2215.0], [88.3, 2218.0], [88.4, 2219.0], [88.5, 2222.0], [88.6, 2229.0], [88.7, 2234.0], [88.8, 2241.0], [88.9, 2244.0], [89.0, 2244.0], [89.1, 2244.0], [89.2, 2249.0], [89.3, 2252.0], [89.4, 2255.0], [89.5, 2261.0], [89.6, 2262.0], [89.7, 2268.0], [89.8, 2273.0], [89.9, 2285.0], [90.0, 2285.0], [90.1, 2288.0], [90.2, 2290.0], [90.3, 2291.0], [90.4, 2293.0], [90.5, 2303.0], [90.6, 2306.0], [90.7, 2307.0], [90.8, 2311.0], [90.9, 2321.0], [91.0, 2321.0], [91.1, 2325.0], [91.2, 2328.0], [91.3, 2329.0], [91.4, 2332.0], [91.5, 2332.0], [91.6, 2333.0], [91.7, 2340.0], [91.8, 2344.0], [91.9, 2345.0], [92.0, 2345.0], [92.1, 2348.0], [92.2, 2351.0], [92.3, 2355.0], [92.4, 2356.0], [92.5, 2379.0], [92.6, 2381.0], [92.7, 2386.0], [92.8, 2389.0], [92.9, 2394.0], [93.0, 2394.0], [93.1, 2398.0], [93.2, 2414.0], [93.3, 2420.0], [93.4, 2423.0], [93.5, 2427.0], [93.6, 2429.0], [93.7, 2433.0], [93.8, 2438.0], [93.9, 2442.0], [94.0, 2442.0], [94.1, 2443.0], [94.2, 2445.0], [94.3, 2445.0], [94.4, 2448.0], [94.5, 2452.0], [94.6, 2452.0], [94.7, 2457.0], [94.8, 2458.0], [94.9, 2460.0], [95.0, 2460.0], [95.1, 2466.0], [95.2, 2467.0], [95.3, 2470.0], [95.4, 2471.0], [95.5, 2471.0], [95.6, 2473.0], [95.7, 2482.0], [95.8, 2485.0], [95.9, 2488.0], [96.0, 2488.0], [96.1, 2489.0], [96.2, 2489.0], [96.3, 2493.0], [96.4, 2494.0], [96.5, 2494.0], [96.6, 2495.0], [96.7, 2496.0], [96.8, 2498.0], [96.9, 2517.0], [97.0, 2517.0], [97.1, 2520.0], [97.2, 2529.0], [97.3, 2533.0], [97.4, 2564.0], [97.5, 2591.0], [97.6, 2607.0], [97.7, 2627.0], [97.8, 2635.0], [97.9, 2644.0], [98.0, 2644.0], [98.1, 2647.0], [98.2, 2670.0], [98.3, 2679.0], [98.4, 2759.0], [98.5, 2763.0], [98.6, 2802.0], [98.7, 2804.0], [98.8, 2814.0], [98.9, 2831.0], [99.0, 2831.0], [99.1, 2851.0], [99.2, 2857.0], [99.3, 2896.0], [99.4, 2971.0], [99.5, 2998.0], [99.6, 3075.0], [99.7, 3173.0], [99.8, 3266.0], [99.9, 3409.0], [100.0, 3409.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 24.0], [0.1, 24.0], [0.2, 33.0], [0.3, 42.0], [0.4, 54.0], [0.5, 58.0], [0.6, 59.0], [0.7, 62.0], [0.8, 63.0], [0.9, 72.0], [1.0, 72.0], [1.1, 75.0], [1.2, 78.0], [1.3, 85.0], [1.4, 86.0], [1.5, 97.0], [1.6, 97.0], [1.7, 99.0], [1.8, 109.0], [1.9, 113.0], [2.0, 113.0], [2.1, 114.0], [2.2, 114.0], [2.3, 116.0], [2.4, 118.0], [2.5, 126.0], [2.6, 127.0], [2.7, 129.0], [2.8, 135.0], [2.9, 135.0], [3.0, 135.0], [3.1, 137.0], [3.2, 138.0], [3.3, 139.0], [3.4, 143.0], [3.5, 145.0], [3.6, 147.0], [3.7, 147.0], [3.8, 148.0], [3.9, 156.0], [4.0, 156.0], [4.1, 160.0], [4.2, 166.0], [4.3, 172.0], [4.4, 183.0], [4.5, 187.0], [4.6, 188.0], [4.7, 188.0], [4.8, 188.0], [4.9, 189.0], [5.0, 192.0], [5.1, 192.0], [5.2, 193.0], [5.3, 194.0], [5.4, 195.0], [5.5, 196.0], [5.6, 198.0], [5.7, 198.0], [5.8, 198.0], [5.9, 201.0], [6.0, 201.0], [6.1, 201.0], [6.2, 203.0], [6.3, 203.0], [6.4, 203.0], [6.5, 204.0], [6.6, 206.0], [6.7, 207.0], [6.8, 210.0], [6.9, 210.0], [7.0, 210.0], [7.1, 210.0], [7.2, 213.0], [7.3, 214.0], [7.4, 215.0], [7.5, 215.0], [7.6, 215.0], [7.7, 216.0], [7.8, 216.0], [7.9, 217.0], [8.0, 217.0], [8.1, 217.0], [8.2, 217.0], [8.3, 218.0], [8.4, 222.0], [8.5, 224.0], [8.6, 225.0], [8.7, 225.0], [8.8, 228.0], [8.9, 229.0], [9.0, 229.0], [9.1, 229.0], [9.2, 230.0], [9.3, 232.0], [9.4, 235.0], [9.5, 238.0], [9.6, 239.0], [9.7, 239.0], [9.8, 242.0], [9.9, 243.0], [10.0, 243.0], [10.1, 243.0], [10.2, 244.0], [10.3, 245.0], [10.4, 246.0], [10.5, 246.0], [10.6, 248.0], [10.7, 248.0], [10.8, 248.0], [10.9, 248.0], [11.0, 248.0], [11.1, 248.0], [11.2, 249.0], [11.3, 250.0], [11.4, 251.0], [11.5, 252.0], [11.6, 252.0], [11.7, 253.0], [11.8, 255.0], [11.9, 257.0], [12.0, 257.0], [12.1, 257.0], [12.2, 261.0], [12.3, 262.0], [12.4, 263.0], [12.5, 264.0], [12.6, 265.0], [12.7, 268.0], [12.8, 269.0], [12.9, 271.0], [13.0, 271.0], [13.1, 271.0], [13.2, 273.0], [13.3, 275.0], [13.4, 277.0], [13.5, 278.0], [13.6, 278.0], [13.7, 280.0], [13.8, 281.0], [13.9, 282.0], [14.0, 283.0], [14.1, 283.0], [14.2, 283.0], [14.3, 285.0], [14.4, 286.0], [14.5, 286.0], [14.6, 288.0], [14.7, 289.0], [14.8, 290.0], [14.9, 293.0], [15.0, 294.0], [15.1, 294.0], [15.2, 295.0], [15.3, 296.0], [15.4, 297.0], [15.5, 297.0], [15.6, 298.0], [15.7, 299.0], [15.8, 301.0], [15.9, 307.0], [16.0, 309.0], [16.1, 309.0], [16.2, 315.0], [16.3, 319.0], [16.4, 319.0], [16.5, 320.0], [16.6, 328.0], [16.7, 329.0], [16.8, 330.0], [16.9, 337.0], [17.0, 341.0], [17.1, 341.0], [17.2, 345.0], [17.3, 346.0], [17.4, 364.0], [17.5, 368.0], [17.6, 369.0], [17.7, 370.0], [17.8, 372.0], [17.9, 374.0], [18.0, 374.0], [18.1, 374.0], [18.2, 384.0], [18.3, 390.0], [18.4, 395.0], [18.5, 405.0], [18.6, 411.0], [18.7, 427.0], [18.8, 433.0], [18.9, 436.0], [19.0, 436.0], [19.1, 436.0], [19.2, 437.0], [19.3, 437.0], [19.4, 438.0], [19.5, 440.0], [19.6, 460.0], [19.7, 467.0], [19.8, 472.0], [19.9, 474.0], [20.0, 475.0], [20.1, 475.0], [20.2, 483.0], [20.3, 485.0], [20.4, 486.0], [20.5, 491.0], [20.6, 496.0], [20.7, 516.0], [20.8, 517.0], [20.9, 518.0], [21.0, 526.0], [21.1, 526.0], [21.2, 531.0], [21.3, 533.0], [21.4, 540.0], [21.5, 540.0], [21.6, 553.0], [21.7, 574.0], [21.8, 578.0], [21.9, 596.0], [22.0, 600.0], [22.1, 600.0], [22.2, 605.0], [22.3, 649.0], [22.4, 684.0], [22.5, 734.0], [22.6, 735.0], [22.7, 756.0], [22.8, 846.0], [22.9, 892.0], [23.0, 930.0], [23.1, 930.0], [23.2, 952.0], [23.3, 984.0], [23.4, 985.0], [23.5, 1045.0], [23.6, 1045.0], [23.7, 1051.0], [23.8, 1063.0], [23.9, 1088.0], [24.0, 1089.0], [24.1, 1089.0], [24.2, 1099.0], [24.3, 1113.0], [24.4, 1151.0], [24.5, 1178.0], [24.6, 1201.0], [24.7, 1201.0], [24.8, 1205.0], [24.9, 1267.0], [25.0, 1302.0], [25.1, 1302.0], [25.2, 1314.0], [25.3, 1351.0], [25.4, 1362.0], [25.5, 1365.0], [25.6, 1400.0], [25.7, 1404.0], [25.8, 1415.0], [25.9, 1416.0], [26.0, 1442.0], [26.1, 1442.0], [26.2, 1453.0], [26.3, 1473.0], [26.4, 1477.0], [26.5, 1496.0], [26.6, 1507.0], [26.7, 1515.0], [26.8, 1520.0], [26.9, 1543.0], [27.0, 1547.0], [27.1, 1547.0], [27.2, 1547.0], [27.3, 1548.0], [27.4, 1555.0], [27.5, 1560.0], [27.6, 1565.0], [27.7, 1567.0], [27.8, 1574.0], [27.9, 1609.0], [28.0, 1609.0], [28.1, 1609.0], [28.2, 1645.0], [28.3, 1653.0], [28.4, 1687.0], [28.5, 1688.0], [28.6, 1690.0], [28.7, 1699.0], [28.8, 1709.0], [28.9, 1713.0], [29.0, 1715.0], [29.1, 1715.0], [29.2, 1722.0], [29.3, 1723.0], [29.4, 1723.0], [29.5, 1727.0], [29.6, 1740.0], [29.7, 1769.0], [29.8, 1774.0], [29.9, 1775.0], [30.0, 1776.0], [30.1, 1776.0], [30.2, 1779.0], [30.3, 1788.0], [30.4, 1800.0], [30.5, 1800.0], [30.6, 1806.0], [30.7, 1812.0], [30.8, 1813.0], [30.9, 1816.0], [31.0, 1821.0], [31.1, 1821.0], [31.2, 1831.0], [31.3, 1836.0], [31.4, 1844.0], [31.5, 1870.0], [31.6, 1875.0], [31.7, 1891.0], [31.8, 1894.0], [31.9, 1896.0], [32.0, 1898.0], [32.1, 1898.0], [32.2, 1899.0], [32.3, 1902.0], [32.4, 1902.0], [32.5, 1904.0], [32.6, 1910.0], [32.7, 1913.0], [32.8, 1924.0], [32.9, 1931.0], [33.0, 1934.0], [33.1, 1934.0], [33.2, 1936.0], [33.3, 1937.0], [33.4, 1942.0], [33.5, 1943.0], [33.6, 1947.0], [33.7, 1954.0], [33.8, 1969.0], [33.9, 1975.0], [34.0, 1977.0], [34.1, 1977.0], [34.2, 1979.0], [34.3, 1979.0], [34.4, 1980.0], [34.5, 1996.0], [34.6, 2003.0], [34.7, 2005.0], [34.8, 2005.0], [34.9, 2009.0], [35.0, 2009.0], [35.1, 2009.0], [35.2, 2010.0], [35.3, 2017.0], [35.4, 2019.0], [35.5, 2022.0], [35.6, 2025.0], [35.7, 2040.0], [35.8, 2041.0], [35.9, 2042.0], [36.0, 2055.0], [36.1, 2055.0], [36.2, 2065.0], [36.3, 2065.0], [36.4, 2067.0], [36.5, 2069.0], [36.6, 2070.0], [36.7, 2070.0], [36.8, 2071.0], [36.9, 2072.0], [37.0, 2072.0], [37.1, 2077.0], [37.2, 2078.0], [37.3, 2091.0], [37.4, 2096.0], [37.5, 2098.0], [37.6, 2098.0], [37.7, 2104.0], [37.8, 2106.0], [37.9, 2106.0], [38.0, 2106.0], [38.1, 2112.0], [38.2, 2116.0], [38.3, 2118.0], [38.4, 2119.0], [38.5, 2120.0], [38.6, 2122.0], [38.7, 2122.0], [38.8, 2126.0], [38.9, 2130.0], [39.0, 2130.0], [39.1, 2135.0], [39.2, 2136.0], [39.3, 2138.0], [39.4, 2142.0], [39.5, 2144.0], [39.6, 2152.0], [39.7, 2167.0], [39.8, 2167.0], [39.9, 2171.0], [40.0, 2171.0], [40.1, 2176.0], [40.2, 2177.0], [40.3, 2189.0], [40.4, 2190.0], [40.5, 2191.0], [40.6, 2197.0], [40.7, 2209.0], [40.8, 2210.0], [40.9, 2215.0], [41.0, 2215.0], [41.1, 2215.0], [41.2, 2220.0], [41.3, 2224.0], [41.4, 2227.0], [41.5, 2227.0], [41.6, 2232.0], [41.7, 2233.0], [41.8, 2236.0], [41.9, 2240.0], [42.0, 2240.0], [42.1, 2242.0], [42.2, 2243.0], [42.3, 2252.0], [42.4, 2254.0], [42.5, 2257.0], [42.6, 2264.0], [42.7, 2264.0], [42.8, 2265.0], [42.9, 2265.0], [43.0, 2265.0], [43.1, 2270.0], [43.2, 2272.0], [43.3, 2275.0], [43.4, 2276.0], [43.5, 2278.0], [43.6, 2278.0], [43.7, 2281.0], [43.8, 2284.0], [43.9, 2292.0], [44.0, 2292.0], [44.1, 2294.0], [44.2, 2299.0], [44.3, 2301.0], [44.4, 2320.0], [44.5, 2322.0], [44.6, 2325.0], [44.7, 2331.0], [44.8, 2333.0], [44.9, 2344.0], [45.0, 2344.0], [45.1, 2350.0], [45.2, 2351.0], [45.3, 2352.0], [45.4, 2355.0], [45.5, 2366.0], [45.6, 2366.0], [45.7, 2368.0], [45.8, 2374.0], [45.9, 2379.0], [46.0, 2379.0], [46.1, 2380.0], [46.2, 2380.0], [46.3, 2382.0], [46.4, 2387.0], [46.5, 2387.0], [46.6, 2387.0], [46.7, 2388.0], [46.8, 2395.0], [46.9, 2395.0], [47.0, 2395.0], [47.1, 2400.0], [47.2, 2402.0], [47.3, 2411.0], [47.4, 2419.0], [47.5, 2436.0], [47.6, 2440.0], [47.7, 2447.0], [47.8, 2451.0], [47.9, 2453.0], [48.0, 2453.0], [48.1, 2453.0], [48.2, 2455.0], [48.3, 2456.0], [48.4, 2459.0], [48.5, 2459.0], [48.6, 2463.0], [48.7, 2463.0], [48.8, 2464.0], [48.9, 2466.0], [49.0, 2466.0], [49.1, 2468.0], [49.2, 2469.0], [49.3, 2473.0], [49.4, 2474.0], [49.5, 2475.0], [49.6, 2476.0], [49.7, 2477.0], [49.8, 2480.0], [49.9, 2483.0], [50.0, 2483.0], [50.1, 2486.0], [50.2, 2491.0], [50.3, 2511.0], [50.4, 2513.0], [50.5, 2516.0], [50.6, 2521.0], [50.7, 2527.0], [50.8, 2528.0], [50.9, 2529.0], [51.0, 2529.0], [51.1, 2531.0], [51.2, 2531.0], [51.3, 2533.0], [51.4, 2535.0], [51.5, 2539.0], [51.6, 2541.0], [51.7, 2553.0], [51.8, 2554.0], [51.9, 2556.0], [52.0, 2556.0], [52.1, 2558.0], [52.2, 2562.0], [52.3, 2564.0], [52.4, 2567.0], [52.5, 2567.0], [52.6, 2569.0], [52.7, 2569.0], [52.8, 2575.0], [52.9, 2575.0], [53.0, 2575.0], [53.1, 2581.0], [53.2, 2581.0], [53.3, 2593.0], [53.4, 2598.0], [53.5, 2599.0], [53.6, 2600.0], [53.7, 2600.0], [53.8, 2601.0], [53.9, 2601.0], [54.0, 2601.0], [54.1, 2609.0], [54.2, 2612.0], [54.3, 2613.0], [54.4, 2616.0], [54.5, 2619.0], [54.6, 2621.0], [54.7, 2632.0], [54.8, 2633.0], [54.9, 2643.0], [55.0, 2643.0], [55.1, 2652.0], [55.2, 2655.0], [55.3, 2655.0], [55.4, 2655.0], [55.5, 2655.0], [55.6, 2655.0], [55.7, 2659.0], [55.8, 2659.0], [55.9, 2660.0], [56.0, 2660.0], [56.1, 2660.0], [56.2, 2661.0], [56.3, 2662.0], [56.4, 2665.0], [56.5, 2667.0], [56.6, 2668.0], [56.7, 2669.0], [56.8, 2670.0], [56.9, 2675.0], [57.0, 2675.0], [57.1, 2678.0], [57.2, 2681.0], [57.3, 2684.0], [57.4, 2689.0], [57.5, 2690.0], [57.6, 2701.0], [57.7, 2701.0], [57.8, 2701.0], [57.9, 2706.0], [58.0, 2706.0], [58.1, 2707.0], [58.2, 2707.0], [58.3, 2713.0], [58.4, 2715.0], [58.5, 2715.0], [58.6, 2715.0], [58.7, 2724.0], [58.8, 2726.0], [58.9, 2736.0], [59.0, 2736.0], [59.1, 2737.0], [59.2, 2738.0], [59.3, 2742.0], [59.4, 2745.0], [59.5, 2745.0], [59.6, 2745.0], [59.7, 2748.0], [59.8, 2749.0], [59.9, 2751.0], [60.0, 2751.0], [60.1, 2751.0], [60.2, 2757.0], [60.3, 2758.0], [60.4, 2761.0], [60.5, 2765.0], [60.6, 2774.0], [60.7, 2789.0], [60.8, 2789.0], [60.9, 2792.0], [61.0, 2792.0], [61.1, 2792.0], [61.2, 2792.0], [61.3, 2798.0], [61.4, 2805.0], [61.5, 2806.0], [61.6, 2810.0], [61.7, 2815.0], [61.8, 2818.0], [61.9, 2819.0], [62.0, 2819.0], [62.1, 2822.0], [62.2, 2826.0], [62.3, 2827.0], [62.4, 2827.0], [62.5, 2833.0], [62.6, 2833.0], [62.7, 2840.0], [62.8, 2860.0], [62.9, 2861.0], [63.0, 2861.0], [63.1, 2862.0], [63.2, 2867.0], [63.3, 2868.0], [63.4, 2872.0], [63.5, 2878.0], [63.6, 2887.0], [63.7, 2888.0], [63.8, 2891.0], [63.9, 2894.0], [64.0, 2894.0], [64.1, 2895.0], [64.2, 2899.0], [64.3, 2912.0], [64.4, 2913.0], [64.5, 2919.0], [64.6, 2924.0], [64.7, 2933.0], [64.8, 2935.0], [64.9, 2935.0], [65.0, 2935.0], [65.1, 2937.0], [65.2, 2944.0], [65.3, 2950.0], [65.4, 2952.0], [65.5, 2955.0], [65.6, 2956.0], [65.7, 2957.0], [65.8, 2968.0], [65.9, 2972.0], [66.0, 2972.0], [66.1, 2974.0], [66.2, 2975.0], [66.3, 2975.0], [66.4, 2976.0], [66.5, 2999.0], [66.6, 3005.0], [66.7, 3029.0], [66.8, 3039.0], [66.9, 3040.0], [67.0, 3040.0], [67.1, 3040.0], [67.2, 3044.0], [67.3, 3045.0], [67.4, 3048.0], [67.5, 3049.0], [67.6, 3056.0], [67.7, 3057.0], [67.8, 3063.0], [67.9, 3064.0], [68.0, 3064.0], [68.1, 3067.0], [68.2, 3072.0], [68.3, 3073.0], [68.4, 3077.0], [68.5, 3089.0], [68.6, 3090.0], [68.7, 3095.0], [68.8, 3099.0], [68.9, 3102.0], [69.0, 3102.0], [69.1, 3112.0], [69.2, 3115.0], [69.3, 3116.0], [69.4, 3128.0], [69.5, 3134.0], [69.6, 3138.0], [69.7, 3147.0], [69.8, 3148.0], [69.9, 3149.0], [70.0, 3149.0], [70.1, 3157.0], [70.2, 3165.0], [70.3, 3166.0], [70.4, 3168.0], [70.5, 3170.0], [70.6, 3193.0], [70.7, 3193.0], [70.8, 3199.0], [70.9, 3218.0], [71.0, 3218.0], [71.1, 3221.0], [71.2, 3238.0], [71.3, 3240.0], [71.4, 3250.0], [71.5, 3276.0], [71.6, 3289.0], [71.7, 3305.0], [71.8, 3305.0], [71.9, 3308.0], [72.0, 3308.0], [72.1, 3314.0], [72.2, 3322.0], [72.3, 3324.0], [72.4, 3336.0], [72.5, 3355.0], [72.6, 3370.0], [72.7, 3385.0], [72.8, 3387.0], [72.9, 3388.0], [73.0, 3388.0], [73.1, 3390.0], [73.2, 3392.0], [73.3, 3396.0], [73.4, 3409.0], [73.5, 3427.0], [73.6, 3429.0], [73.7, 3431.0], [73.8, 3439.0], [73.9, 3463.0], [74.0, 3463.0], [74.1, 3466.0], [74.2, 3468.0], [74.3, 3479.0], [74.4, 3485.0], [74.5, 3528.0], [74.6, 3530.0], [74.7, 3535.0], [74.8, 3538.0], [74.9, 3540.0], [75.0, 3540.0], [75.1, 3543.0], [75.2, 3548.0], [75.3, 3554.0], [75.4, 3571.0], [75.5, 3580.0], [75.6, 3594.0], [75.7, 3605.0], [75.8, 3614.0], [75.9, 3616.0], [76.0, 3616.0], [76.1, 3618.0], [76.2, 3618.0], [76.3, 3630.0], [76.4, 3667.0], [76.5, 3668.0], [76.6, 3683.0], [76.7, 3694.0], [76.8, 3698.0], [76.9, 3699.0], [77.0, 3699.0], [77.1, 3708.0], [77.2, 3715.0], [77.3, 3717.0], [77.4, 3719.0], [77.5, 3719.0], [77.6, 3719.0], [77.7, 3740.0], [77.8, 3742.0], [77.9, 3743.0], [78.0, 3743.0], [78.1, 3759.0], [78.2, 3781.0], [78.3, 3805.0], [78.4, 3822.0], [78.5, 3879.0], [78.6, 3880.0], [78.7, 3927.0], [78.8, 3929.0], [78.9, 3938.0], [79.0, 3938.0], [79.1, 3957.0], [79.2, 3960.0], [79.3, 3964.0], [79.4, 3979.0], [79.5, 3992.0], [79.6, 3995.0], [79.7, 3999.0], [79.8, 4043.0], [79.9, 4049.0], [80.0, 4049.0], [80.1, 4050.0], [80.2, 4055.0], [80.3, 4059.0], [80.4, 4061.0], [80.5, 4062.0], [80.6, 4066.0], [80.7, 4066.0], [80.8, 4066.0], [80.9, 4070.0], [81.0, 4070.0], [81.1, 4084.0], [81.2, 4088.0], [81.3, 4097.0], [81.4, 4109.0], [81.5, 4115.0], [81.6, 4119.0], [81.7, 4119.0], [81.8, 4122.0], [81.9, 4126.0], [82.0, 4126.0], [82.1, 4130.0], [82.2, 4134.0], [82.3, 4140.0], [82.4, 4147.0], [82.5, 4148.0], [82.6, 4149.0], [82.7, 4167.0], [82.8, 4174.0], [82.9, 4175.0], [83.0, 4175.0], [83.1, 4176.0], [83.2, 4182.0], [83.3, 4186.0], [83.4, 4197.0], [83.5, 4210.0], [83.6, 4216.0], [83.7, 4222.0], [83.8, 4226.0], [83.9, 4237.0], [84.0, 4237.0], [84.1, 4252.0], [84.2, 4281.0], [84.3, 4282.0], [84.4, 4286.0], [84.5, 4291.0], [84.6, 4291.0], [84.7, 4291.0], [84.8, 4291.0], [84.9, 4292.0], [85.0, 4292.0], [85.1, 4293.0], [85.2, 4293.0], [85.3, 4296.0], [85.4, 4297.0], [85.5, 4298.0], [85.6, 4298.0], [85.7, 4312.0], [85.8, 4322.0], [85.9, 4324.0], [86.0, 4324.0], [86.1, 4328.0], [86.2, 4339.0], [86.3, 4340.0], [86.4, 4343.0], [86.5, 4346.0], [86.6, 4349.0], [86.7, 4350.0], [86.8, 4352.0], [86.9, 4354.0], [87.0, 4354.0], [87.1, 4355.0], [87.2, 4363.0], [87.3, 4364.0], [87.4, 4366.0], [87.5, 4370.0], [87.6, 4378.0], [87.7, 4384.0], [87.8, 4386.0], [87.9, 4388.0], [88.0, 4388.0], [88.1, 4389.0], [88.2, 4391.0], [88.3, 4392.0], [88.4, 4394.0], [88.5, 4397.0], [88.6, 4402.0], [88.7, 4404.0], [88.8, 4405.0], [88.9, 4405.0], [89.0, 4405.0], [89.1, 4412.0], [89.2, 4412.0], [89.3, 4419.0], [89.4, 4425.0], [89.5, 4426.0], [89.6, 4426.0], [89.7, 4437.0], [89.8, 4443.0], [89.9, 4445.0], [90.0, 4445.0], [90.1, 4445.0], [90.2, 4453.0], [90.3, 4456.0], [90.4, 4458.0], [90.5, 4459.0], [90.6, 4470.0], [90.7, 4471.0], [90.8, 4472.0], [90.9, 4472.0], [91.0, 4472.0], [91.1, 4473.0], [91.2, 4477.0], [91.3, 4483.0], [91.4, 4500.0], [91.5, 4508.0], [91.6, 4512.0], [91.7, 4513.0], [91.8, 4515.0], [91.9, 4515.0], [92.0, 4515.0], [92.1, 4516.0], [92.2, 4524.0], [92.3, 4527.0], [92.4, 4527.0], [92.5, 4528.0], [92.6, 4528.0], [92.7, 4528.0], [92.8, 4535.0], [92.9, 4538.0], [93.0, 4538.0], [93.1, 4540.0], [93.2, 4543.0], [93.3, 4543.0], [93.4, 4545.0], [93.5, 4547.0], [93.6, 4549.0], [93.7, 4553.0], [93.8, 4556.0], [93.9, 4558.0], [94.0, 4558.0], [94.1, 4559.0], [94.2, 4560.0], [94.3, 4562.0], [94.4, 4563.0], [94.5, 4564.0], [94.6, 4565.0], [94.7, 4569.0], [94.8, 4571.0], [94.9, 4573.0], [95.0, 4573.0], [95.1, 4580.0], [95.2, 4585.0], [95.3, 4588.0], [95.4, 4589.0], [95.5, 4591.0], [95.6, 4596.0], [95.7, 4597.0], [95.8, 4601.0], [95.9, 4601.0], [96.0, 4601.0], [96.1, 4602.0], [96.2, 4607.0], [96.3, 4610.0], [96.4, 4615.0], [96.5, 4616.0], [96.6, 4628.0], [96.7, 4630.0], [96.8, 4638.0], [96.9, 4639.0], [97.0, 4639.0], [97.1, 4644.0], [97.2, 4646.0], [97.3, 4646.0], [97.4, 4652.0], [97.5, 4658.0], [97.6, 4661.0], [97.7, 4668.0], [97.8, 4668.0], [97.9, 4673.0], [98.0, 4673.0], [98.1, 4676.0], [98.2, 4685.0], [98.3, 4685.0], [98.4, 4686.0], [98.5, 4688.0], [98.6, 4693.0], [98.7, 4695.0], [98.8, 4704.0], [98.9, 4711.0], [99.0, 4711.0], [99.1, 4715.0], [99.2, 4722.0], [99.3, 4722.0], [99.4, 4750.0], [99.5, 4759.0], [99.6, 4762.0], [99.7, 4779.0], [99.8, 4845.0], [99.9, 5918.0], [100.0, 5918.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 126.0, "series": [{"data": [[0.0, 53.0], [600.0, 21.0], [700.0, 20.0], [200.0, 10.0], [800.0, 19.0], [900.0, 13.0], [3600.0, 1.0], [1000.0, 21.0], [1100.0, 16.0], [1200.0, 22.0], [300.0, 8.0], [1300.0, 20.0], [1400.0, 12.0], [1500.0, 9.0], [400.0, 16.0], [100.0, 25.0], [1700.0, 3.0], [500.0, 11.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[0.0, 126.0], [600.0, 39.0], [700.0, 29.0], [800.0, 55.0], [900.0, 62.0], [1000.0, 51.0], [1100.0, 52.0], [1200.0, 43.0], [1300.0, 39.0], [1400.0, 42.0], [1500.0, 19.0], [1600.0, 25.0], [100.0, 111.0], [1700.0, 20.0], [1800.0, 20.0], [1900.0, 13.0], [2000.0, 11.0], [2100.0, 11.0], [2300.0, 10.0], [2200.0, 5.0], [2400.0, 3.0], [2500.0, 6.0], [2600.0, 1.0], [2800.0, 5.0], [2700.0, 1.0], [200.0, 20.0], [3200.0, 1.0], [300.0, 22.0], [5700.0, 1.0], [400.0, 23.0], [500.0, 34.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 85.0], [600.0, 26.0], [700.0, 31.0], [800.0, 17.0], [900.0, 28.0], [1000.0, 22.0], [1100.0, 27.0], [1200.0, 38.0], [1300.0, 40.0], [1400.0, 32.0], [1500.0, 25.0], [1600.0, 26.0], [100.0, 99.0], [1700.0, 35.0], [1800.0, 53.0], [1900.0, 42.0], [2000.0, 30.0], [2100.0, 20.0], [2200.0, 28.0], [2300.0, 24.0], [2400.0, 34.0], [2500.0, 6.0], [2600.0, 7.0], [2700.0, 2.0], [2800.0, 7.0], [2900.0, 2.0], [3000.0, 1.0], [3100.0, 1.0], [200.0, 43.0], [3200.0, 1.0], [3400.0, 1.0], [300.0, 25.0], [400.0, 24.0], [500.0, 18.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 16.0], [600.0, 4.0], [700.0, 3.0], [800.0, 2.0], [900.0, 4.0], [1000.0, 7.0], [1100.0, 3.0], [1200.0, 4.0], [1300.0, 5.0], [1400.0, 9.0], [1500.0, 12.0], [1600.0, 8.0], [1700.0, 14.0], [1800.0, 17.0], [1900.0, 21.0], [2000.0, 28.0], [2100.0, 27.0], [2300.0, 25.0], [2200.0, 32.0], [2400.0, 29.0], [2500.0, 30.0], [2600.0, 36.0], [2700.0, 34.0], [2800.0, 26.0], [2900.0, 21.0], [3000.0, 21.0], [3100.0, 18.0], [3200.0, 7.0], [3300.0, 15.0], [3400.0, 10.0], [3500.0, 11.0], [3600.0, 12.0], [3700.0, 11.0], [3800.0, 4.0], [3900.0, 10.0], [4000.0, 14.0], [4300.0, 26.0], [4100.0, 19.0], [4200.0, 20.0], [4400.0, 25.0], [4600.0, 27.0], [4500.0, 40.0], [4800.0, 1.0], [4700.0, 9.0], [5900.0, 1.0], [100.0, 37.0], [200.0, 89.0], [300.0, 24.0], [400.0, 20.0], [500.0, 12.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 5900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 877.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1171.0, "series": [{"data": [[0.0, 877.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 952.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1171.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 191.20966666666664, "minX": 1.72983822E12, "maxY": 191.20966666666664, "series": [{"data": [[1.72983822E12, 191.20966666666664]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72983822E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 9.0, "minX": 2.0, "maxY": 4277.531400966181, "series": [{"data": [[13.0, 57.5], [224.0, 955.9565217391306], [229.0, 37.5], [228.0, 26.0], [227.0, 296.5], [226.0, 378.33333333333337], [225.0, 609.3749999999999], [14.0, 80.5], [234.0, 51.75], [237.0, 57.5], [236.0, 96.83333333333334], [235.0, 76.5], [239.0, 83.75], [240.0, 3612.0], [242.0, 40.0], [15.0, 83.0], [16.0, 95.28571428571428], [17.0, 117.72727272727273], [18.0, 74.0], [19.0, 79.125], [20.0, 191.375], [21.0, 106.5], [22.0, 87.66666666666667], [23.0, 111.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[185.8966666666667, 721.9799999999998]], "isOverall": false, "label": "HTTP Request-2-Aggregated", "isController": false}, {"data": [[2.0, 13.0], [3.0, 31.0], [8.0, 45.0], [10.0, 46.25], [11.0, 70.4], [12.0, 54.5], [13.0, 109.0], [224.0, 1111.164251207729], [230.0, 9.0], [229.0, 72.5], [228.0, 136.0], [227.0, 1693.5], [226.0, 1635.0], [225.0, 1367.125], [14.0, 97.25], [234.0, 33.2], [237.0, 90.88888888888889], [236.0, 898.338709677419], [235.0, 65.5], [238.0, 1048.3432835820893], [239.0, 1173.938864628821], [240.0, 818.85], [241.0, 863.6250000000001], [242.0, 1305.5806451612905], [15.0, 98.75], [16.0, 103.00000000000001], [17.0, 96.23529411764706], [18.0, 81.85714285714286], [19.0, 107.74193548387093], [20.0, 128.2666666666667], [21.0, 129.76923076923077], [22.0, 108.33333333333334], [23.0, 137.83333333333334]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[191.8000000000001, 886.8466666666668]], "isOverall": false, "label": "HTTP Request-1-Aggregated", "isController": false}, {"data": [[2.0, 20.0], [3.0, 68.0], [8.0, 44.83333333333333], [10.0, 71.25], [11.0, 74.8], [12.0, 67.0], [13.0, 222.0], [224.0, 2042.376811594203], [230.0, 24.0], [229.0, 786.5], [228.0, 181.0], [227.0, 1863.0], [226.0, 2055.3333333333335], [225.0, 1980.625], [14.0, 286.25], [234.0, 80.4], [237.0, 74.33333333333333], [236.0, 1211.5806451612902], [235.0, 227.0], [238.0, 1163.179104477612], [239.0, 1261.5109170305675], [240.0, 965.3000000000002], [241.0, 1252.0], [242.0, 747.5161290322582], [15.0, 163.0], [16.0, 146.8], [17.0, 151.29411764705878], [18.0, 131.57142857142858], [19.0, 154.5483870967742], [20.0, 139.39999999999995], [21.0, 143.0], [22.0, 160.16666666666666], [23.0, 122.66666666666666]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[191.80000000000004, 1165.6288888888905]], "isOverall": false, "label": "HTTP Request-0-Aggregated", "isController": false}, {"data": [[2.0, 42.0], [3.0, 99.0], [8.0, 90.0], [10.0, 132.5], [11.0, 145.2], [12.0, 122.0], [13.0, 411.3333333333333], [224.0, 4277.531400966181], [230.0, 33.0], [229.0, 897.5], [228.0, 370.0], [227.0, 4208.0], [226.0, 4069.6666666666665], [225.0, 4068.3749999999995], [14.0, 439.0], [234.0, 159.0], [237.0, 179.0], [236.0, 2316.0645161290317], [235.0, 369.0], [238.0, 2304.4626865671635], [239.0, 2556.8427947598266], [240.0, 2035.35], [241.0, 2116.25], [242.0, 2198.322580645161], [15.0, 283.0], [16.0, 313.26666666666665], [17.0, 328.88235294117646], [18.0, 257.8571428571429], [19.0, 291.5483870967742], [20.0, 345.1777777777777], [21.0, 309.4615384615385], [22.0, 305.33333333333337], [23.0, 280.6666666666667]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[191.79999999999987, 2399.998888888886]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 242.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 11210.0, "minX": 1.72983822E12, "maxY": 40260.0, "series": [{"data": [[1.72983822E12, 40260.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.72983822E12, 11210.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72983822E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 721.9799999999998, "minX": 1.72983822E12, "maxY": 2399.998888888886, "series": [{"data": [[1.72983822E12, 721.9799999999998]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[1.72983822E12, 886.8466666666668]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.72983822E12, 1165.6288888888905]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.72983822E12, 2399.998888888886]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72983822E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 709.3666666666663, "minX": 1.72983822E12, "maxY": 1067.0600000000004, "series": [{"data": [[1.72983822E12, 709.3666666666663]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[1.72983822E12, 883.1055555555547]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.72983822E12, 1067.0600000000004]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.72983822E12, 1067.0600000000004]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72983822E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.72983822E12, "maxY": 248.25888888888926, "series": [{"data": [[1.72983822E12, 0.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[1.72983822E12, 0.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.72983822E12, 248.25888888888926]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.72983822E12, 248.2588888888892]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72983822E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 7.0, "minX": 1.72983822E12, "maxY": 5918.0, "series": [{"data": [[1.72983822E12, 5918.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.72983822E12, 3048.9]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.72983822E12, 4637.919999999998]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.72983822E12, 4209.349999999998]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.72983822E12, 7.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.72983822E12, 1183.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72983822E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 109.0, "minX": 15.0, "maxY": 1989.5, "series": [{"data": [[133.0, 370.0], [139.0, 109.0], [159.0, 953.0], [162.0, 137.0], [170.0, 1216.0], [184.0, 1368.0], [214.0, 1989.5], [15.0, 1200.0], [79.0, 572.0], [424.0, 1840.0], [440.0, 1639.5], [113.0, 1101.0], [486.0, 1690.5], [120.0, 124.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 486.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 86.0, "minX": 15.0, "maxY": 1547.5, "series": [{"data": [[133.0, 305.0], [139.0, 86.0], [159.0, 953.0], [162.0, 116.5], [170.0, 1216.0], [184.0, 846.0], [214.0, 1547.5], [15.0, 1200.0], [79.0, 568.0], [424.0, 1129.0], [440.0, 1391.0], [113.0, 1005.0], [486.0, 1184.0], [120.0, 96.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 486.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.72983822E12, "maxY": 50.0, "series": [{"data": [[1.72983822E12, 50.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72983822E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 20.0, "minX": 1.72983822E12, "maxY": 30.0, "series": [{"data": [[1.72983822E12, 30.0]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.72983822E12, 20.0]], "isOverall": false, "label": "302", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72983822E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 5.0, "minX": 1.72983822E12, "maxY": 15.0, "series": [{"data": [[1.72983822E12, 15.0]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.72983822E12, 15.0]], "isOverall": false, "label": "HTTP Request-0-success", "isController": false}, {"data": [[1.72983822E12, 15.0]], "isOverall": false, "label": "HTTP Request-1-success", "isController": false}, {"data": [[1.72983822E12, 5.0]], "isOverall": false, "label": "HTTP Request-2-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72983822E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.72983822E12, "maxY": 50.0, "series": [{"data": [[1.72983822E12, 50.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72983822E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

