/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 4.0, "minX": 0.0, "maxY": 7917.0, "series": [{"data": [[0.0, 5.0], [0.1, 5.0], [0.2, 5.0], [0.3, 5.0], [0.4, 12.0], [0.5, 12.0], [0.6, 12.0], [0.7, 20.0], [0.8, 20.0], [0.9, 20.0], [1.0, 20.0], [1.1, 20.0], [1.2, 20.0], [1.3, 20.0], [1.4, 25.0], [1.5, 25.0], [1.6, 25.0], [1.7, 26.0], [1.8, 26.0], [1.9, 26.0], [2.0, 27.0], [2.1, 27.0], [2.2, 27.0], [2.3, 27.0], [2.4, 31.0], [2.5, 31.0], [2.6, 31.0], [2.7, 37.0], [2.8, 37.0], [2.9, 37.0], [3.0, 38.0], [3.1, 38.0], [3.2, 38.0], [3.3, 38.0], [3.4, 41.0], [3.5, 41.0], [3.6, 41.0], [3.7, 41.0], [3.8, 41.0], [3.9, 41.0], [4.0, 48.0], [4.1, 48.0], [4.2, 48.0], [4.3, 48.0], [4.4, 50.0], [4.5, 50.0], [4.6, 50.0], [4.7, 50.0], [4.8, 50.0], [4.9, 50.0], [5.0, 51.0], [5.1, 51.0], [5.2, 51.0], [5.3, 51.0], [5.4, 55.0], [5.5, 55.0], [5.6, 55.0], [5.7, 55.0], [5.8, 55.0], [5.9, 55.0], [6.0, 55.0], [6.1, 55.0], [6.2, 55.0], [6.3, 55.0], [6.4, 56.0], [6.5, 56.0], [6.6, 56.0], [6.7, 63.0], [6.8, 63.0], [6.9, 63.0], [7.0, 66.0], [7.1, 66.0], [7.2, 66.0], [7.3, 66.0], [7.4, 67.0], [7.5, 67.0], [7.6, 67.0], [7.7, 68.0], [7.8, 68.0], [7.9, 68.0], [8.0, 68.0], [8.1, 68.0], [8.2, 68.0], [8.3, 68.0], [8.4, 69.0], [8.5, 69.0], [8.6, 69.0], [8.7, 70.0], [8.8, 70.0], [8.9, 70.0], [9.0, 70.0], [9.1, 70.0], [9.2, 70.0], [9.3, 70.0], [9.4, 73.0], [9.5, 73.0], [9.6, 73.0], [9.7, 73.0], [9.8, 73.0], [9.9, 73.0], [10.0, 75.0], [10.1, 75.0], [10.2, 75.0], [10.3, 75.0], [10.4, 78.0], [10.5, 78.0], [10.6, 78.0], [10.7, 81.0], [10.8, 81.0], [10.9, 81.0], [11.0, 81.0], [11.1, 81.0], [11.2, 81.0], [11.3, 81.0], [11.4, 82.0], [11.5, 82.0], [11.6, 82.0], [11.7, 91.0], [11.8, 91.0], [11.9, 91.0], [12.0, 92.0], [12.1, 92.0], [12.2, 92.0], [12.3, 92.0], [12.4, 94.0], [12.5, 94.0], [12.6, 94.0], [12.7, 95.0], [12.8, 95.0], [12.9, 95.0], [13.0, 95.0], [13.1, 95.0], [13.2, 95.0], [13.3, 95.0], [13.4, 95.0], [13.5, 95.0], [13.6, 95.0], [13.7, 96.0], [13.8, 96.0], [13.9, 96.0], [14.0, 96.0], [14.1, 98.0], [14.2, 98.0], [14.3, 98.0], [14.4, 106.0], [14.5, 106.0], [14.6, 106.0], [14.7, 108.0], [14.8, 108.0], [14.9, 108.0], [15.0, 108.0], [15.1, 111.0], [15.2, 111.0], [15.3, 111.0], [15.4, 111.0], [15.5, 111.0], [15.6, 111.0], [15.7, 111.0], [15.8, 111.0], [15.9, 111.0], [16.0, 111.0], [16.1, 113.0], [16.2, 113.0], [16.3, 113.0], [16.4, 118.0], [16.5, 118.0], [16.6, 118.0], [16.7, 120.0], [16.8, 120.0], [16.9, 120.0], [17.0, 126.0], [17.1, 126.0], [17.2, 126.0], [17.3, 126.0], [17.4, 127.0], [17.5, 127.0], [17.6, 127.0], [17.7, 129.0], [17.8, 129.0], [17.9, 129.0], [18.0, 130.0], [18.1, 130.0], [18.2, 130.0], [18.3, 130.0], [18.4, 131.0], [18.5, 131.0], [18.6, 131.0], [18.7, 132.0], [18.8, 132.0], [18.9, 132.0], [19.0, 132.0], [19.1, 132.0], [19.2, 132.0], [19.3, 132.0], [19.4, 135.0], [19.5, 135.0], [19.6, 135.0], [19.7, 137.0], [19.8, 137.0], [19.9, 137.0], [20.0, 141.0], [20.1, 141.0], [20.2, 141.0], [20.3, 141.0], [20.4, 146.0], [20.5, 146.0], [20.6, 146.0], [20.7, 155.0], [20.8, 155.0], [20.9, 155.0], [21.0, 186.0], [21.1, 186.0], [21.2, 186.0], [21.3, 186.0], [21.4, 188.0], [21.5, 188.0], [21.6, 188.0], [21.7, 193.0], [21.8, 193.0], [21.9, 193.0], [22.0, 194.0], [22.1, 194.0], [22.2, 194.0], [22.3, 194.0], [22.4, 200.0], [22.5, 200.0], [22.6, 200.0], [22.7, 201.0], [22.8, 201.0], [22.9, 201.0], [23.0, 203.0], [23.1, 203.0], [23.2, 203.0], [23.3, 203.0], [23.4, 204.0], [23.5, 204.0], [23.6, 204.0], [23.7, 209.0], [23.8, 209.0], [23.9, 209.0], [24.0, 225.0], [24.1, 225.0], [24.2, 225.0], [24.3, 225.0], [24.4, 227.0], [24.5, 227.0], [24.6, 227.0], [24.7, 230.0], [24.8, 230.0], [24.9, 230.0], [25.0, 238.0], [25.1, 238.0], [25.2, 238.0], [25.3, 238.0], [25.4, 246.0], [25.5, 246.0], [25.6, 246.0], [25.7, 246.0], [25.8, 246.0], [25.9, 246.0], [26.0, 247.0], [26.1, 247.0], [26.2, 247.0], [26.3, 247.0], [26.4, 252.0], [26.5, 252.0], [26.6, 252.0], [26.7, 253.0], [26.8, 253.0], [26.9, 253.0], [27.0, 256.0], [27.1, 256.0], [27.2, 256.0], [27.3, 256.0], [27.4, 262.0], [27.5, 262.0], [27.6, 262.0], [27.7, 266.0], [27.8, 266.0], [27.9, 266.0], [28.0, 271.0], [28.1, 271.0], [28.2, 271.0], [28.3, 271.0], [28.4, 272.0], [28.5, 272.0], [28.6, 272.0], [28.7, 272.0], [28.8, 272.0], [28.9, 272.0], [29.0, 273.0], [29.1, 273.0], [29.2, 273.0], [29.3, 273.0], [29.4, 278.0], [29.5, 278.0], [29.6, 278.0], [29.7, 279.0], [29.8, 279.0], [29.9, 279.0], [30.0, 282.0], [30.1, 282.0], [30.2, 282.0], [30.3, 282.0], [30.4, 282.0], [30.5, 282.0], [30.6, 282.0], [30.7, 282.0], [30.8, 282.0], [30.9, 282.0], [31.0, 284.0], [31.1, 284.0], [31.2, 284.0], [31.3, 284.0], [31.4, 286.0], [31.5, 286.0], [31.6, 286.0], [31.7, 286.0], [31.8, 286.0], [31.9, 286.0], [32.0, 287.0], [32.1, 287.0], [32.2, 287.0], [32.3, 287.0], [32.4, 289.0], [32.5, 289.0], [32.6, 289.0], [32.7, 291.0], [32.8, 291.0], [32.9, 291.0], [33.0, 294.0], [33.1, 294.0], [33.2, 294.0], [33.3, 294.0], [33.4, 294.0], [33.5, 294.0], [33.6, 294.0], [33.7, 295.0], [33.8, 295.0], [33.9, 295.0], [34.0, 295.0], [34.1, 295.0], [34.2, 295.0], [34.3, 295.0], [34.4, 296.0], [34.5, 296.0], [34.6, 296.0], [34.7, 297.0], [34.8, 297.0], [34.9, 297.0], [35.0, 298.0], [35.1, 298.0], [35.2, 298.0], [35.3, 298.0], [35.4, 298.0], [35.5, 298.0], [35.6, 298.0], [35.7, 303.0], [35.8, 303.0], [35.9, 303.0], [36.0, 306.0], [36.1, 306.0], [36.2, 306.0], [36.3, 306.0], [36.4, 307.0], [36.5, 307.0], [36.6, 307.0], [36.7, 307.0], [36.8, 307.0], [36.9, 307.0], [37.0, 308.0], [37.1, 308.0], [37.2, 308.0], [37.3, 308.0], [37.4, 308.0], [37.5, 308.0], [37.6, 308.0], [37.7, 309.0], [37.8, 309.0], [37.9, 309.0], [38.0, 311.0], [38.1, 311.0], [38.2, 311.0], [38.3, 311.0], [38.4, 312.0], [38.5, 312.0], [38.6, 312.0], [38.7, 314.0], [38.8, 314.0], [38.9, 314.0], [39.0, 317.0], [39.1, 317.0], [39.2, 317.0], [39.3, 317.0], [39.4, 318.0], [39.5, 318.0], [39.6, 318.0], [39.7, 327.0], [39.8, 327.0], [39.9, 327.0], [40.0, 328.0], [40.1, 328.0], [40.2, 328.0], [40.3, 328.0], [40.4, 329.0], [40.5, 329.0], [40.6, 329.0], [40.7, 333.0], [40.8, 333.0], [40.9, 333.0], [41.0, 335.0], [41.1, 335.0], [41.2, 335.0], [41.3, 335.0], [41.4, 347.0], [41.5, 347.0], [41.6, 347.0], [41.7, 351.0], [41.8, 351.0], [41.9, 351.0], [42.0, 355.0], [42.1, 355.0], [42.2, 355.0], [42.3, 355.0], [42.4, 358.0], [42.5, 358.0], [42.6, 358.0], [42.7, 360.0], [42.8, 360.0], [42.9, 360.0], [43.0, 360.0], [43.1, 362.0], [43.2, 362.0], [43.3, 362.0], [43.4, 363.0], [43.5, 363.0], [43.6, 363.0], [43.7, 372.0], [43.8, 372.0], [43.9, 372.0], [44.0, 372.0], [44.1, 376.0], [44.2, 376.0], [44.3, 376.0], [44.4, 379.0], [44.5, 379.0], [44.6, 379.0], [44.7, 388.0], [44.8, 388.0], [44.9, 388.0], [45.0, 388.0], [45.1, 389.0], [45.2, 389.0], [45.3, 389.0], [45.4, 391.0], [45.5, 391.0], [45.6, 391.0], [45.7, 391.0], [45.8, 391.0], [45.9, 391.0], [46.0, 391.0], [46.1, 392.0], [46.2, 392.0], [46.3, 392.0], [46.4, 392.0], [46.5, 392.0], [46.6, 392.0], [46.7, 393.0], [46.8, 393.0], [46.9, 393.0], [47.0, 393.0], [47.1, 398.0], [47.2, 398.0], [47.3, 398.0], [47.4, 399.0], [47.5, 399.0], [47.6, 399.0], [47.7, 401.0], [47.8, 401.0], [47.9, 401.0], [48.0, 401.0], [48.1, 411.0], [48.2, 411.0], [48.3, 411.0], [48.4, 412.0], [48.5, 412.0], [48.6, 412.0], [48.7, 421.0], [48.8, 421.0], [48.9, 421.0], [49.0, 421.0], [49.1, 421.0], [49.2, 421.0], [49.3, 421.0], [49.4, 422.0], [49.5, 422.0], [49.6, 422.0], [49.7, 424.0], [49.8, 424.0], [49.9, 424.0], [50.0, 424.0], [50.1, 428.0], [50.2, 428.0], [50.3, 428.0], [50.4, 429.0], [50.5, 429.0], [50.6, 429.0], [50.7, 430.0], [50.8, 430.0], [50.9, 430.0], [51.0, 430.0], [51.1, 433.0], [51.2, 433.0], [51.3, 433.0], [51.4, 443.0], [51.5, 443.0], [51.6, 443.0], [51.7, 445.0], [51.8, 445.0], [51.9, 445.0], [52.0, 445.0], [52.1, 448.0], [52.2, 448.0], [52.3, 448.0], [52.4, 454.0], [52.5, 454.0], [52.6, 454.0], [52.7, 455.0], [52.8, 455.0], [52.9, 455.0], [53.0, 455.0], [53.1, 461.0], [53.2, 461.0], [53.3, 461.0], [53.4, 462.0], [53.5, 462.0], [53.6, 462.0], [53.7, 473.0], [53.8, 473.0], [53.9, 473.0], [54.0, 473.0], [54.1, 474.0], [54.2, 474.0], [54.3, 474.0], [54.4, 479.0], [54.5, 479.0], [54.6, 479.0], [54.7, 480.0], [54.8, 480.0], [54.9, 480.0], [55.0, 480.0], [55.1, 483.0], [55.2, 483.0], [55.3, 483.0], [55.4, 485.0], [55.5, 485.0], [55.6, 485.0], [55.7, 485.0], [55.8, 485.0], [55.9, 485.0], [56.0, 485.0], [56.1, 496.0], [56.2, 496.0], [56.3, 496.0], [56.4, 497.0], [56.5, 497.0], [56.6, 497.0], [56.7, 504.0], [56.8, 504.0], [56.9, 504.0], [57.0, 504.0], [57.1, 506.0], [57.2, 506.0], [57.3, 506.0], [57.4, 511.0], [57.5, 511.0], [57.6, 511.0], [57.7, 517.0], [57.8, 517.0], [57.9, 517.0], [58.0, 517.0], [58.1, 517.0], [58.2, 517.0], [58.3, 517.0], [58.4, 517.0], [58.5, 517.0], [58.6, 517.0], [58.7, 528.0], [58.8, 528.0], [58.9, 528.0], [59.0, 528.0], [59.1, 531.0], [59.2, 531.0], [59.3, 531.0], [59.4, 532.0], [59.5, 532.0], [59.6, 532.0], [59.7, 533.0], [59.8, 533.0], [59.9, 533.0], [60.0, 533.0], [60.1, 534.0], [60.2, 534.0], [60.3, 534.0], [60.4, 537.0], [60.5, 537.0], [60.6, 537.0], [60.7, 541.0], [60.8, 541.0], [60.9, 541.0], [61.0, 541.0], [61.1, 541.0], [61.2, 541.0], [61.3, 541.0], [61.4, 548.0], [61.5, 548.0], [61.6, 548.0], [61.7, 554.0], [61.8, 554.0], [61.9, 554.0], [62.0, 554.0], [62.1, 554.0], [62.2, 554.0], [62.3, 554.0], [62.4, 562.0], [62.5, 562.0], [62.6, 562.0], [62.7, 563.0], [62.8, 563.0], [62.9, 563.0], [63.0, 563.0], [63.1, 567.0], [63.2, 567.0], [63.3, 567.0], [63.4, 571.0], [63.5, 571.0], [63.6, 571.0], [63.7, 571.0], [63.8, 571.0], [63.9, 571.0], [64.0, 571.0], [64.1, 574.0], [64.2, 574.0], [64.3, 574.0], [64.4, 576.0], [64.5, 576.0], [64.6, 576.0], [64.7, 581.0], [64.8, 581.0], [64.9, 581.0], [65.0, 581.0], [65.1, 582.0], [65.2, 582.0], [65.3, 582.0], [65.4, 583.0], [65.5, 583.0], [65.6, 583.0], [65.7, 586.0], [65.8, 586.0], [65.9, 586.0], [66.0, 586.0], [66.1, 587.0], [66.2, 587.0], [66.3, 587.0], [66.4, 594.0], [66.5, 594.0], [66.6, 594.0], [66.7, 595.0], [66.8, 595.0], [66.9, 595.0], [67.0, 595.0], [67.1, 595.0], [67.2, 595.0], [67.3, 595.0], [67.4, 601.0], [67.5, 601.0], [67.6, 601.0], [67.7, 611.0], [67.8, 611.0], [67.9, 611.0], [68.0, 611.0], [68.1, 611.0], [68.2, 611.0], [68.3, 611.0], [68.4, 614.0], [68.5, 614.0], [68.6, 614.0], [68.7, 624.0], [68.8, 624.0], [68.9, 624.0], [69.0, 624.0], [69.1, 625.0], [69.2, 625.0], [69.3, 625.0], [69.4, 632.0], [69.5, 632.0], [69.6, 632.0], [69.7, 640.0], [69.8, 640.0], [69.9, 640.0], [70.0, 640.0], [70.1, 642.0], [70.2, 642.0], [70.3, 642.0], [70.4, 643.0], [70.5, 643.0], [70.6, 643.0], [70.7, 651.0], [70.8, 651.0], [70.9, 651.0], [71.0, 651.0], [71.1, 651.0], [71.2, 651.0], [71.3, 651.0], [71.4, 660.0], [71.5, 660.0], [71.6, 660.0], [71.7, 666.0], [71.8, 666.0], [71.9, 666.0], [72.0, 666.0], [72.1, 678.0], [72.2, 678.0], [72.3, 678.0], [72.4, 679.0], [72.5, 679.0], [72.6, 679.0], [72.7, 682.0], [72.8, 682.0], [72.9, 682.0], [73.0, 682.0], [73.1, 682.0], [73.2, 682.0], [73.3, 682.0], [73.4, 683.0], [73.5, 683.0], [73.6, 683.0], [73.7, 690.0], [73.8, 690.0], [73.9, 690.0], [74.0, 690.0], [74.1, 695.0], [74.2, 695.0], [74.3, 695.0], [74.4, 701.0], [74.5, 701.0], [74.6, 701.0], [74.7, 704.0], [74.8, 704.0], [74.9, 704.0], [75.0, 710.0], [75.1, 710.0], [75.2, 710.0], [75.3, 710.0], [75.4, 711.0], [75.5, 711.0], [75.6, 711.0], [75.7, 716.0], [75.8, 716.0], [75.9, 716.0], [76.0, 719.0], [76.1, 719.0], [76.2, 719.0], [76.3, 719.0], [76.4, 720.0], [76.5, 720.0], [76.6, 720.0], [76.7, 731.0], [76.8, 731.0], [76.9, 731.0], [77.0, 734.0], [77.1, 734.0], [77.2, 734.0], [77.3, 734.0], [77.4, 739.0], [77.5, 739.0], [77.6, 739.0], [77.7, 740.0], [77.8, 740.0], [77.9, 740.0], [78.0, 743.0], [78.1, 743.0], [78.2, 743.0], [78.3, 743.0], [78.4, 753.0], [78.5, 753.0], [78.6, 753.0], [78.7, 754.0], [78.8, 754.0], [78.9, 754.0], [79.0, 762.0], [79.1, 762.0], [79.2, 762.0], [79.3, 762.0], [79.4, 764.0], [79.5, 764.0], [79.6, 764.0], [79.7, 772.0], [79.8, 772.0], [79.9, 772.0], [80.0, 772.0], [80.1, 772.0], [80.2, 772.0], [80.3, 772.0], [80.4, 774.0], [80.5, 774.0], [80.6, 774.0], [80.7, 774.0], [80.8, 774.0], [80.9, 774.0], [81.0, 776.0], [81.1, 776.0], [81.2, 776.0], [81.3, 776.0], [81.4, 776.0], [81.5, 776.0], [81.6, 776.0], [81.7, 776.0], [81.8, 776.0], [81.9, 776.0], [82.0, 778.0], [82.1, 778.0], [82.2, 778.0], [82.3, 778.0], [82.4, 779.0], [82.5, 779.0], [82.6, 779.0], [82.7, 787.0], [82.8, 787.0], [82.9, 787.0], [83.0, 795.0], [83.1, 795.0], [83.2, 795.0], [83.3, 795.0], [83.4, 802.0], [83.5, 802.0], [83.6, 802.0], [83.7, 804.0], [83.8, 804.0], [83.9, 804.0], [84.0, 824.0], [84.1, 824.0], [84.2, 824.0], [84.3, 824.0], [84.4, 850.0], [84.5, 850.0], [84.6, 850.0], [84.7, 856.0], [84.8, 856.0], [84.9, 856.0], [85.0, 859.0], [85.1, 859.0], [85.2, 859.0], [85.3, 859.0], [85.4, 861.0], [85.5, 861.0], [85.6, 861.0], [85.7, 864.0], [85.8, 864.0], [85.9, 864.0], [86.0, 867.0], [86.1, 867.0], [86.2, 867.0], [86.3, 867.0], [86.4, 882.0], [86.5, 882.0], [86.6, 882.0], [86.7, 905.0], [86.8, 905.0], [86.9, 905.0], [87.0, 906.0], [87.1, 906.0], [87.2, 906.0], [87.3, 906.0], [87.4, 915.0], [87.5, 915.0], [87.6, 915.0], [87.7, 916.0], [87.8, 916.0], [87.9, 916.0], [88.0, 934.0], [88.1, 934.0], [88.2, 934.0], [88.3, 934.0], [88.4, 959.0], [88.5, 959.0], [88.6, 959.0], [88.7, 960.0], [88.8, 960.0], [88.9, 960.0], [89.0, 984.0], [89.1, 984.0], [89.2, 984.0], [89.3, 984.0], [89.4, 995.0], [89.5, 995.0], [89.6, 995.0], [89.7, 997.0], [89.8, 997.0], [89.9, 997.0], [90.0, 997.0], [90.1, 997.0], [90.2, 997.0], [90.3, 997.0], [90.4, 1010.0], [90.5, 1010.0], [90.6, 1010.0], [90.7, 1012.0], [90.8, 1012.0], [90.9, 1012.0], [91.0, 1013.0], [91.1, 1013.0], [91.2, 1013.0], [91.3, 1013.0], [91.4, 1018.0], [91.5, 1018.0], [91.6, 1018.0], [91.7, 1030.0], [91.8, 1030.0], [91.9, 1030.0], [92.0, 1046.0], [92.1, 1046.0], [92.2, 1046.0], [92.3, 1046.0], [92.4, 1050.0], [92.5, 1050.0], [92.6, 1050.0], [92.7, 1051.0], [92.8, 1051.0], [92.9, 1051.0], [93.0, 1055.0], [93.1, 1055.0], [93.2, 1055.0], [93.3, 1055.0], [93.4, 1056.0], [93.5, 1056.0], [93.6, 1056.0], [93.7, 1058.0], [93.8, 1058.0], [93.9, 1058.0], [94.0, 1068.0], [94.1, 1068.0], [94.2, 1068.0], [94.3, 1068.0], [94.4, 1076.0], [94.5, 1076.0], [94.6, 1076.0], [94.7, 1077.0], [94.8, 1077.0], [94.9, 1077.0], [95.0, 1145.0], [95.1, 1145.0], [95.2, 1145.0], [95.3, 1145.0], [95.4, 1194.0], [95.5, 1194.0], [95.6, 1194.0], [95.7, 1205.0], [95.8, 1205.0], [95.9, 1205.0], [96.0, 1309.0], [96.1, 1309.0], [96.2, 1309.0], [96.3, 1309.0], [96.4, 1334.0], [96.5, 1334.0], [96.6, 1334.0], [96.7, 1595.0], [96.8, 1595.0], [96.9, 1595.0], [97.0, 1622.0], [97.1, 1622.0], [97.2, 1622.0], [97.3, 1622.0], [97.4, 1839.0], [97.5, 1839.0], [97.6, 1839.0], [97.7, 1854.0], [97.8, 1854.0], [97.9, 1854.0], [98.0, 2177.0], [98.1, 2177.0], [98.2, 2177.0], [98.3, 2177.0], [98.4, 2185.0], [98.5, 2185.0], [98.6, 2185.0], [98.7, 2449.0], [98.8, 2449.0], [98.9, 2449.0], [99.0, 2452.0], [99.1, 2452.0], [99.2, 2452.0], [99.3, 2452.0], [99.4, 2526.0], [99.5, 2526.0], [99.6, 2526.0], [99.7, 2533.0], [99.8, 2533.0], [99.9, 2533.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[0.0, 4.0], [0.1, 4.0], [0.2, 7.0], [0.3, 9.0], [0.4, 11.0], [0.5, 15.0], [0.6, 15.0], [0.7, 17.0], [0.8, 18.0], [0.9, 18.0], [1.0, 20.0], [1.1, 20.0], [1.2, 20.0], [1.3, 24.0], [1.4, 25.0], [1.5, 25.0], [1.6, 25.0], [1.7, 26.0], [1.8, 26.0], [1.9, 26.0], [2.0, 27.0], [2.1, 27.0], [2.2, 28.0], [2.3, 29.0], [2.4, 29.0], [2.5, 30.0], [2.6, 30.0], [2.7, 30.0], [2.8, 31.0], [2.9, 33.0], [3.0, 34.0], [3.1, 34.0], [3.2, 35.0], [3.3, 35.0], [3.4, 36.0], [3.5, 37.0], [3.6, 38.0], [3.7, 39.0], [3.8, 39.0], [3.9, 40.0], [4.0, 41.0], [4.1, 41.0], [4.2, 44.0], [4.3, 44.0], [4.4, 45.0], [4.5, 45.0], [4.6, 47.0], [4.7, 47.0], [4.8, 48.0], [4.9, 48.0], [5.0, 49.0], [5.1, 49.0], [5.2, 50.0], [5.3, 51.0], [5.4, 52.0], [5.5, 52.0], [5.6, 53.0], [5.7, 53.0], [5.8, 53.0], [5.9, 54.0], [6.0, 54.0], [6.1, 54.0], [6.2, 54.0], [6.3, 55.0], [6.4, 56.0], [6.5, 57.0], [6.6, 58.0], [6.7, 58.0], [6.8, 59.0], [6.9, 60.0], [7.0, 61.0], [7.1, 61.0], [7.2, 61.0], [7.3, 63.0], [7.4, 63.0], [7.5, 63.0], [7.6, 63.0], [7.7, 64.0], [7.8, 66.0], [7.9, 67.0], [8.0, 67.0], [8.1, 67.0], [8.2, 67.0], [8.3, 68.0], [8.4, 68.0], [8.5, 70.0], [8.6, 71.0], [8.7, 74.0], [8.8, 75.0], [8.9, 75.0], [9.0, 76.0], [9.1, 76.0], [9.2, 77.0], [9.3, 77.0], [9.4, 77.0], [9.5, 77.0], [9.6, 77.0], [9.7, 78.0], [9.8, 78.0], [9.9, 78.0], [10.0, 79.0], [10.1, 79.0], [10.2, 79.0], [10.3, 79.0], [10.4, 81.0], [10.5, 81.0], [10.6, 81.0], [10.7, 83.0], [10.8, 83.0], [10.9, 83.0], [11.0, 84.0], [11.1, 84.0], [11.2, 84.0], [11.3, 84.0], [11.4, 84.0], [11.5, 84.0], [11.6, 85.0], [11.7, 85.0], [11.8, 86.0], [11.9, 86.0], [12.0, 86.0], [12.1, 86.0], [12.2, 86.0], [12.3, 86.0], [12.4, 87.0], [12.5, 87.0], [12.6, 88.0], [12.7, 89.0], [12.8, 89.0], [12.9, 90.0], [13.0, 90.0], [13.1, 90.0], [13.2, 90.0], [13.3, 91.0], [13.4, 91.0], [13.5, 92.0], [13.6, 94.0], [13.7, 94.0], [13.8, 95.0], [13.9, 96.0], [14.0, 98.0], [14.1, 98.0], [14.2, 98.0], [14.3, 98.0], [14.4, 98.0], [14.5, 99.0], [14.6, 100.0], [14.7, 101.0], [14.8, 101.0], [14.9, 102.0], [15.0, 102.0], [15.1, 102.0], [15.2, 102.0], [15.3, 102.0], [15.4, 105.0], [15.5, 106.0], [15.6, 106.0], [15.7, 107.0], [15.8, 107.0], [15.9, 109.0], [16.0, 111.0], [16.1, 111.0], [16.2, 111.0], [16.3, 113.0], [16.4, 113.0], [16.5, 114.0], [16.6, 115.0], [16.7, 115.0], [16.8, 117.0], [16.9, 118.0], [17.0, 118.0], [17.1, 118.0], [17.2, 119.0], [17.3, 120.0], [17.4, 120.0], [17.5, 122.0], [17.6, 123.0], [17.7, 125.0], [17.8, 126.0], [17.9, 127.0], [18.0, 131.0], [18.1, 131.0], [18.2, 134.0], [18.3, 134.0], [18.4, 135.0], [18.5, 137.0], [18.6, 139.0], [18.7, 144.0], [18.8, 144.0], [18.9, 147.0], [19.0, 150.0], [19.1, 150.0], [19.2, 150.0], [19.3, 151.0], [19.4, 153.0], [19.5, 155.0], [19.6, 159.0], [19.7, 160.0], [19.8, 163.0], [19.9, 164.0], [20.0, 165.0], [20.1, 165.0], [20.2, 167.0], [20.3, 167.0], [20.4, 174.0], [20.5, 175.0], [20.6, 187.0], [20.7, 189.0], [20.8, 189.0], [20.9, 195.0], [21.0, 196.0], [21.1, 196.0], [21.2, 201.0], [21.3, 203.0], [21.4, 204.0], [21.5, 204.0], [21.6, 205.0], [21.7, 206.0], [21.8, 212.0], [21.9, 214.0], [22.0, 216.0], [22.1, 216.0], [22.2, 219.0], [22.3, 220.0], [22.4, 221.0], [22.5, 224.0], [22.6, 225.0], [22.7, 225.0], [22.8, 227.0], [22.9, 228.0], [23.0, 228.0], [23.1, 228.0], [23.2, 229.0], [23.3, 229.0], [23.4, 230.0], [23.5, 230.0], [23.6, 231.0], [23.7, 232.0], [23.8, 233.0], [23.9, 235.0], [24.0, 238.0], [24.1, 238.0], [24.2, 240.0], [24.3, 240.0], [24.4, 243.0], [24.5, 245.0], [24.6, 246.0], [24.7, 246.0], [24.8, 246.0], [24.9, 249.0], [25.0, 252.0], [25.1, 252.0], [25.2, 254.0], [25.3, 261.0], [25.4, 264.0], [25.5, 265.0], [25.6, 265.0], [25.7, 266.0], [25.8, 267.0], [25.9, 267.0], [26.0, 272.0], [26.1, 272.0], [26.2, 276.0], [26.3, 280.0], [26.4, 280.0], [26.5, 285.0], [26.6, 288.0], [26.7, 289.0], [26.8, 293.0], [26.9, 294.0], [27.0, 295.0], [27.1, 295.0], [27.2, 296.0], [27.3, 297.0], [27.4, 298.0], [27.5, 300.0], [27.6, 300.0], [27.7, 301.0], [27.8, 302.0], [27.9, 303.0], [28.0, 303.0], [28.1, 303.0], [28.2, 305.0], [28.3, 306.0], [28.4, 306.0], [28.5, 308.0], [28.6, 314.0], [28.7, 316.0], [28.8, 318.0], [28.9, 322.0], [29.0, 322.0], [29.1, 322.0], [29.2, 324.0], [29.3, 325.0], [29.4, 328.0], [29.5, 338.0], [29.6, 340.0], [29.7, 340.0], [29.8, 341.0], [29.9, 342.0], [30.0, 346.0], [30.1, 346.0], [30.2, 347.0], [30.3, 348.0], [30.4, 348.0], [30.5, 349.0], [30.6, 353.0], [30.7, 359.0], [30.8, 362.0], [30.9, 363.0], [31.0, 365.0], [31.1, 365.0], [31.2, 366.0], [31.3, 366.0], [31.4, 368.0], [31.5, 369.0], [31.6, 370.0], [31.7, 371.0], [31.8, 373.0], [31.9, 374.0], [32.0, 377.0], [32.1, 377.0], [32.2, 382.0], [32.3, 384.0], [32.4, 386.0], [32.5, 391.0], [32.6, 391.0], [32.7, 395.0], [32.8, 395.0], [32.9, 396.0], [33.0, 396.0], [33.1, 396.0], [33.2, 401.0], [33.3, 401.0], [33.4, 402.0], [33.5, 402.0], [33.6, 403.0], [33.7, 404.0], [33.8, 405.0], [33.9, 406.0], [34.0, 406.0], [34.1, 406.0], [34.2, 406.0], [34.3, 407.0], [34.4, 408.0], [34.5, 409.0], [34.6, 411.0], [34.7, 417.0], [34.8, 419.0], [34.9, 423.0], [35.0, 424.0], [35.1, 424.0], [35.2, 426.0], [35.3, 429.0], [35.4, 430.0], [35.5, 430.0], [35.6, 431.0], [35.7, 435.0], [35.8, 438.0], [35.9, 439.0], [36.0, 440.0], [36.1, 440.0], [36.2, 442.0], [36.3, 444.0], [36.4, 444.0], [36.5, 444.0], [36.6, 448.0], [36.7, 448.0], [36.8, 449.0], [36.9, 452.0], [37.0, 452.0], [37.1, 452.0], [37.2, 453.0], [37.3, 454.0], [37.4, 456.0], [37.5, 458.0], [37.6, 460.0], [37.7, 463.0], [37.8, 464.0], [37.9, 465.0], [38.0, 465.0], [38.1, 467.0], [38.2, 467.0], [38.3, 469.0], [38.4, 469.0], [38.5, 472.0], [38.6, 477.0], [38.7, 479.0], [38.8, 480.0], [38.9, 480.0], [39.0, 480.0], [39.1, 483.0], [39.2, 486.0], [39.3, 488.0], [39.4, 489.0], [39.5, 490.0], [39.6, 496.0], [39.7, 496.0], [39.8, 496.0], [39.9, 498.0], [40.0, 498.0], [40.1, 499.0], [40.2, 502.0], [40.3, 505.0], [40.4, 506.0], [40.5, 507.0], [40.6, 508.0], [40.7, 510.0], [40.8, 512.0], [40.9, 514.0], [41.0, 514.0], [41.1, 516.0], [41.2, 519.0], [41.3, 519.0], [41.4, 521.0], [41.5, 525.0], [41.6, 527.0], [41.7, 530.0], [41.8, 532.0], [41.9, 534.0], [42.0, 534.0], [42.1, 536.0], [42.2, 538.0], [42.3, 538.0], [42.4, 539.0], [42.5, 539.0], [42.6, 540.0], [42.7, 540.0], [42.8, 542.0], [42.9, 545.0], [43.0, 545.0], [43.1, 546.0], [43.2, 547.0], [43.3, 550.0], [43.4, 551.0], [43.5, 555.0], [43.6, 556.0], [43.7, 556.0], [43.8, 559.0], [43.9, 560.0], [44.0, 560.0], [44.1, 560.0], [44.2, 562.0], [44.3, 568.0], [44.4, 569.0], [44.5, 571.0], [44.6, 572.0], [44.7, 576.0], [44.8, 576.0], [44.9, 577.0], [45.0, 577.0], [45.1, 580.0], [45.2, 583.0], [45.3, 584.0], [45.4, 587.0], [45.5, 589.0], [45.6, 589.0], [45.7, 591.0], [45.8, 593.0], [45.9, 596.0], [46.0, 596.0], [46.1, 597.0], [46.2, 598.0], [46.3, 601.0], [46.4, 602.0], [46.5, 605.0], [46.6, 605.0], [46.7, 608.0], [46.8, 609.0], [46.9, 614.0], [47.0, 614.0], [47.1, 617.0], [47.2, 618.0], [47.3, 618.0], [47.4, 621.0], [47.5, 621.0], [47.6, 621.0], [47.7, 624.0], [47.8, 624.0], [47.9, 626.0], [48.0, 626.0], [48.1, 626.0], [48.2, 627.0], [48.3, 628.0], [48.4, 630.0], [48.5, 635.0], [48.6, 638.0], [48.7, 638.0], [48.8, 639.0], [48.9, 639.0], [49.0, 639.0], [49.1, 640.0], [49.2, 640.0], [49.3, 640.0], [49.4, 646.0], [49.5, 648.0], [49.6, 648.0], [49.7, 650.0], [49.8, 650.0], [49.9, 652.0], [50.0, 652.0], [50.1, 652.0], [50.2, 654.0], [50.3, 654.0], [50.4, 656.0], [50.5, 658.0], [50.6, 659.0], [50.7, 667.0], [50.8, 668.0], [50.9, 669.0], [51.0, 669.0], [51.1, 671.0], [51.2, 672.0], [51.3, 677.0], [51.4, 681.0], [51.5, 681.0], [51.6, 685.0], [51.7, 686.0], [51.8, 688.0], [51.9, 689.0], [52.0, 689.0], [52.1, 691.0], [52.2, 692.0], [52.3, 695.0], [52.4, 695.0], [52.5, 696.0], [52.6, 696.0], [52.7, 697.0], [52.8, 697.0], [52.9, 698.0], [53.0, 698.0], [53.1, 699.0], [53.2, 701.0], [53.3, 703.0], [53.4, 703.0], [53.5, 703.0], [53.6, 707.0], [53.7, 710.0], [53.8, 711.0], [53.9, 712.0], [54.0, 712.0], [54.1, 714.0], [54.2, 717.0], [54.3, 723.0], [54.4, 724.0], [54.5, 725.0], [54.6, 726.0], [54.7, 728.0], [54.8, 729.0], [54.9, 729.0], [55.0, 729.0], [55.1, 732.0], [55.2, 736.0], [55.3, 737.0], [55.4, 738.0], [55.5, 741.0], [55.6, 742.0], [55.7, 743.0], [55.8, 746.0], [55.9, 747.0], [56.0, 747.0], [56.1, 748.0], [56.2, 751.0], [56.3, 752.0], [56.4, 752.0], [56.5, 752.0], [56.6, 752.0], [56.7, 753.0], [56.8, 756.0], [56.9, 756.0], [57.0, 756.0], [57.1, 758.0], [57.2, 760.0], [57.3, 760.0], [57.4, 762.0], [57.5, 763.0], [57.6, 763.0], [57.7, 764.0], [57.8, 766.0], [57.9, 767.0], [58.0, 767.0], [58.1, 768.0], [58.2, 768.0], [58.3, 769.0], [58.4, 770.0], [58.5, 770.0], [58.6, 772.0], [58.7, 774.0], [58.8, 774.0], [58.9, 774.0], [59.0, 774.0], [59.1, 780.0], [59.2, 780.0], [59.3, 781.0], [59.4, 783.0], [59.5, 784.0], [59.6, 785.0], [59.7, 786.0], [59.8, 786.0], [59.9, 789.0], [60.0, 789.0], [60.1, 791.0], [60.2, 791.0], [60.3, 791.0], [60.4, 792.0], [60.5, 794.0], [60.6, 799.0], [60.7, 800.0], [60.8, 806.0], [60.9, 808.0], [61.0, 808.0], [61.1, 810.0], [61.2, 812.0], [61.3, 812.0], [61.4, 812.0], [61.5, 813.0], [61.6, 816.0], [61.7, 816.0], [61.8, 816.0], [61.9, 817.0], [62.0, 817.0], [62.1, 819.0], [62.2, 820.0], [62.3, 824.0], [62.4, 826.0], [62.5, 828.0], [62.6, 829.0], [62.7, 833.0], [62.8, 834.0], [62.9, 834.0], [63.0, 834.0], [63.1, 835.0], [63.2, 835.0], [63.3, 841.0], [63.4, 849.0], [63.5, 849.0], [63.6, 855.0], [63.7, 865.0], [63.8, 872.0], [63.9, 874.0], [64.0, 874.0], [64.1, 879.0], [64.2, 882.0], [64.3, 882.0], [64.4, 882.0], [64.5, 885.0], [64.6, 895.0], [64.7, 896.0], [64.8, 897.0], [64.9, 901.0], [65.0, 901.0], [65.1, 903.0], [65.2, 904.0], [65.3, 906.0], [65.4, 907.0], [65.5, 908.0], [65.6, 908.0], [65.7, 909.0], [65.8, 909.0], [65.9, 910.0], [66.0, 910.0], [66.1, 911.0], [66.2, 912.0], [66.3, 914.0], [66.4, 915.0], [66.5, 920.0], [66.6, 920.0], [66.7, 921.0], [66.8, 924.0], [66.9, 927.0], [67.0, 927.0], [67.1, 927.0], [67.2, 928.0], [67.3, 933.0], [67.4, 935.0], [67.5, 936.0], [67.6, 936.0], [67.7, 939.0], [67.8, 939.0], [67.9, 940.0], [68.0, 940.0], [68.1, 941.0], [68.2, 942.0], [68.3, 943.0], [68.4, 951.0], [68.5, 958.0], [68.6, 960.0], [68.7, 963.0], [68.8, 964.0], [68.9, 966.0], [69.0, 966.0], [69.1, 968.0], [69.2, 969.0], [69.3, 969.0], [69.4, 970.0], [69.5, 975.0], [69.6, 975.0], [69.7, 979.0], [69.8, 980.0], [69.9, 984.0], [70.0, 984.0], [70.1, 987.0], [70.2, 988.0], [70.3, 989.0], [70.4, 991.0], [70.5, 995.0], [70.6, 996.0], [70.7, 996.0], [70.8, 997.0], [70.9, 997.0], [71.0, 997.0], [71.1, 998.0], [71.2, 998.0], [71.3, 1000.0], [71.4, 1000.0], [71.5, 1000.0], [71.6, 1002.0], [71.7, 1004.0], [71.8, 1004.0], [71.9, 1006.0], [72.0, 1006.0], [72.1, 1006.0], [72.2, 1007.0], [72.3, 1009.0], [72.4, 1013.0], [72.5, 1013.0], [72.6, 1016.0], [72.7, 1026.0], [72.8, 1034.0], [72.9, 1035.0], [73.0, 1035.0], [73.1, 1037.0], [73.2, 1037.0], [73.3, 1039.0], [73.4, 1040.0], [73.5, 1041.0], [73.6, 1042.0], [73.7, 1043.0], [73.8, 1045.0], [73.9, 1045.0], [74.0, 1045.0], [74.1, 1046.0], [74.2, 1049.0], [74.3, 1053.0], [74.4, 1058.0], [74.5, 1061.0], [74.6, 1062.0], [74.7, 1062.0], [74.8, 1064.0], [74.9, 1065.0], [75.0, 1065.0], [75.1, 1066.0], [75.2, 1066.0], [75.3, 1067.0], [75.4, 1068.0], [75.5, 1070.0], [75.6, 1071.0], [75.7, 1074.0], [75.8, 1077.0], [75.9, 1078.0], [76.0, 1078.0], [76.1, 1079.0], [76.2, 1079.0], [76.3, 1080.0], [76.4, 1081.0], [76.5, 1085.0], [76.6, 1086.0], [76.7, 1087.0], [76.8, 1089.0], [76.9, 1090.0], [77.0, 1090.0], [77.1, 1091.0], [77.2, 1091.0], [77.3, 1092.0], [77.4, 1093.0], [77.5, 1094.0], [77.6, 1095.0], [77.7, 1096.0], [77.8, 1098.0], [77.9, 1100.0], [78.0, 1100.0], [78.1, 1102.0], [78.2, 1103.0], [78.3, 1108.0], [78.4, 1108.0], [78.5, 1112.0], [78.6, 1119.0], [78.7, 1134.0], [78.8, 1140.0], [78.9, 1140.0], [79.0, 1140.0], [79.1, 1141.0], [79.2, 1142.0], [79.3, 1142.0], [79.4, 1145.0], [79.5, 1145.0], [79.6, 1149.0], [79.7, 1150.0], [79.8, 1151.0], [79.9, 1162.0], [80.0, 1162.0], [80.1, 1163.0], [80.2, 1165.0], [80.3, 1170.0], [80.4, 1175.0], [80.5, 1178.0], [80.6, 1180.0], [80.7, 1181.0], [80.8, 1183.0], [80.9, 1186.0], [81.0, 1186.0], [81.1, 1196.0], [81.2, 1198.0], [81.3, 1199.0], [81.4, 1203.0], [81.5, 1208.0], [81.6, 1209.0], [81.7, 1210.0], [81.8, 1210.0], [81.9, 1211.0], [82.0, 1211.0], [82.1, 1214.0], [82.2, 1218.0], [82.3, 1222.0], [82.4, 1223.0], [82.5, 1229.0], [82.6, 1230.0], [82.7, 1231.0], [82.8, 1236.0], [82.9, 1238.0], [83.0, 1238.0], [83.1, 1241.0], [83.2, 1242.0], [83.3, 1244.0], [83.4, 1248.0], [83.5, 1248.0], [83.6, 1250.0], [83.7, 1250.0], [83.8, 1251.0], [83.9, 1257.0], [84.0, 1257.0], [84.1, 1266.0], [84.2, 1267.0], [84.3, 1268.0], [84.4, 1271.0], [84.5, 1274.0], [84.6, 1274.0], [84.7, 1284.0], [84.8, 1288.0], [84.9, 1289.0], [85.0, 1289.0], [85.1, 1291.0], [85.2, 1292.0], [85.3, 1293.0], [85.4, 1296.0], [85.5, 1300.0], [85.6, 1313.0], [85.7, 1317.0], [85.8, 1331.0], [85.9, 1331.0], [86.0, 1331.0], [86.1, 1332.0], [86.2, 1335.0], [86.3, 1341.0], [86.4, 1345.0], [86.5, 1348.0], [86.6, 1350.0], [86.7, 1359.0], [86.8, 1363.0], [86.9, 1365.0], [87.0, 1365.0], [87.1, 1371.0], [87.2, 1387.0], [87.3, 1391.0], [87.4, 1405.0], [87.5, 1411.0], [87.6, 1417.0], [87.7, 1439.0], [87.8, 1442.0], [87.9, 1445.0], [88.0, 1445.0], [88.1, 1451.0], [88.2, 1456.0], [88.3, 1460.0], [88.4, 1465.0], [88.5, 1468.0], [88.6, 1480.0], [88.7, 1484.0], [88.8, 1513.0], [88.9, 1515.0], [89.0, 1515.0], [89.1, 1525.0], [89.2, 1525.0], [89.3, 1540.0], [89.4, 1543.0], [89.5, 1546.0], [89.6, 1550.0], [89.7, 1551.0], [89.8, 1556.0], [89.9, 1558.0], [90.0, 1558.0], [90.1, 1568.0], [90.2, 1574.0], [90.3, 1576.0], [90.4, 1578.0], [90.5, 1579.0], [90.6, 1581.0], [90.7, 1584.0], [90.8, 1584.0], [90.9, 1589.0], [91.0, 1589.0], [91.1, 1590.0], [91.2, 1598.0], [91.3, 1600.0], [91.4, 1610.0], [91.5, 1629.0], [91.6, 1630.0], [91.7, 1634.0], [91.8, 1650.0], [91.9, 1657.0], [92.0, 1657.0], [92.1, 1657.0], [92.2, 1658.0], [92.3, 1662.0], [92.4, 1665.0], [92.5, 1681.0], [92.6, 1682.0], [92.7, 1694.0], [92.8, 1694.0], [92.9, 1699.0], [93.0, 1699.0], [93.1, 1707.0], [93.2, 1713.0], [93.3, 1729.0], [93.4, 1742.0], [93.5, 1759.0], [93.6, 1773.0], [93.7, 1784.0], [93.8, 1789.0], [93.9, 1790.0], [94.0, 1790.0], [94.1, 1791.0], [94.2, 1820.0], [94.3, 1826.0], [94.4, 1832.0], [94.5, 1837.0], [94.6, 1855.0], [94.7, 1860.0], [94.8, 1874.0], [94.9, 1886.0], [95.0, 1886.0], [95.1, 1892.0], [95.2, 1901.0], [95.3, 1917.0], [95.4, 1918.0], [95.5, 1924.0], [95.6, 1929.0], [95.7, 1945.0], [95.8, 1965.0], [95.9, 1969.0], [96.0, 1969.0], [96.1, 1976.0], [96.2, 1984.0], [96.3, 1985.0], [96.4, 1989.0], [96.5, 1991.0], [96.6, 2029.0], [96.7, 2037.0], [96.8, 2046.0], [96.9, 2065.0], [97.0, 2065.0], [97.1, 2090.0], [97.2, 2109.0], [97.3, 2120.0], [97.4, 2122.0], [97.5, 2125.0], [97.6, 2157.0], [97.7, 2178.0], [97.8, 2183.0], [97.9, 2227.0], [98.0, 2227.0], [98.1, 2241.0], [98.2, 2364.0], [98.3, 2391.0], [98.4, 2499.0], [98.5, 2534.0], [98.6, 2534.0], [98.7, 2594.0], [98.8, 2613.0], [98.9, 2613.0], [99.0, 2613.0], [99.1, 2625.0], [99.2, 2656.0], [99.3, 2678.0], [99.4, 2700.0], [99.5, 2743.0], [99.6, 2772.0], [99.7, 2912.0], [99.8, 2946.0], [99.9, 3826.0], [100.0, 3826.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 4.0], [0.1, 4.0], [0.2, 5.0], [0.3, 7.0], [0.4, 9.0], [0.5, 15.0], [0.6, 18.0], [0.7, 20.0], [0.8, 22.0], [0.9, 22.0], [1.0, 32.0], [1.1, 32.0], [1.2, 32.0], [1.3, 32.0], [1.4, 37.0], [1.5, 38.0], [1.6, 39.0], [1.7, 40.0], [1.8, 41.0], [1.9, 41.0], [2.0, 45.0], [2.1, 45.0], [2.2, 47.0], [2.3, 52.0], [2.4, 52.0], [2.5, 52.0], [2.6, 53.0], [2.7, 54.0], [2.8, 54.0], [2.9, 55.0], [3.0, 55.0], [3.1, 55.0], [3.2, 55.0], [3.3, 55.0], [3.4, 57.0], [3.5, 57.0], [3.6, 57.0], [3.7, 58.0], [3.8, 58.0], [3.9, 60.0], [4.0, 60.0], [4.1, 60.0], [4.2, 61.0], [4.3, 64.0], [4.4, 64.0], [4.5, 64.0], [4.6, 64.0], [4.7, 64.0], [4.8, 66.0], [4.9, 67.0], [5.0, 67.0], [5.1, 67.0], [5.2, 67.0], [5.3, 67.0], [5.4, 68.0], [5.5, 69.0], [5.6, 71.0], [5.7, 71.0], [5.8, 72.0], [5.9, 72.0], [6.0, 73.0], [6.1, 73.0], [6.2, 74.0], [6.3, 75.0], [6.4, 78.0], [6.5, 78.0], [6.6, 79.0], [6.7, 79.0], [6.8, 79.0], [6.9, 79.0], [7.0, 79.0], [7.1, 79.0], [7.2, 79.0], [7.3, 80.0], [7.4, 80.0], [7.5, 81.0], [7.6, 81.0], [7.7, 81.0], [7.8, 82.0], [7.9, 84.0], [8.0, 85.0], [8.1, 85.0], [8.2, 85.0], [8.3, 85.0], [8.4, 86.0], [8.5, 87.0], [8.6, 87.0], [8.7, 88.0], [8.8, 89.0], [8.9, 90.0], [9.0, 90.0], [9.1, 90.0], [9.2, 92.0], [9.3, 92.0], [9.4, 93.0], [9.5, 93.0], [9.6, 95.0], [9.7, 96.0], [9.8, 97.0], [9.9, 98.0], [10.0, 98.0], [10.1, 98.0], [10.2, 102.0], [10.3, 102.0], [10.4, 103.0], [10.5, 103.0], [10.6, 104.0], [10.7, 105.0], [10.8, 105.0], [10.9, 106.0], [11.0, 107.0], [11.1, 107.0], [11.2, 108.0], [11.3, 108.0], [11.4, 108.0], [11.5, 108.0], [11.6, 109.0], [11.7, 111.0], [11.8, 114.0], [11.9, 115.0], [12.0, 116.0], [12.1, 116.0], [12.2, 116.0], [12.3, 117.0], [12.4, 118.0], [12.5, 119.0], [12.6, 120.0], [12.7, 120.0], [12.8, 121.0], [12.9, 121.0], [13.0, 121.0], [13.1, 121.0], [13.2, 122.0], [13.3, 122.0], [13.4, 123.0], [13.5, 124.0], [13.6, 125.0], [13.7, 125.0], [13.8, 126.0], [13.9, 127.0], [14.0, 129.0], [14.1, 129.0], [14.2, 130.0], [14.3, 131.0], [14.4, 131.0], [14.5, 131.0], [14.6, 133.0], [14.7, 133.0], [14.8, 136.0], [14.9, 139.0], [15.0, 141.0], [15.1, 141.0], [15.2, 142.0], [15.3, 143.0], [15.4, 143.0], [15.5, 144.0], [15.6, 144.0], [15.7, 145.0], [15.8, 147.0], [15.9, 148.0], [16.0, 148.0], [16.1, 148.0], [16.2, 148.0], [16.3, 149.0], [16.4, 150.0], [16.5, 151.0], [16.6, 152.0], [16.7, 152.0], [16.8, 152.0], [16.9, 153.0], [17.0, 153.0], [17.1, 153.0], [17.2, 154.0], [17.3, 155.0], [17.4, 157.0], [17.5, 157.0], [17.6, 157.0], [17.7, 159.0], [17.8, 160.0], [17.9, 160.0], [18.0, 161.0], [18.1, 161.0], [18.2, 163.0], [18.3, 164.0], [18.4, 166.0], [18.5, 167.0], [18.6, 167.0], [18.7, 167.0], [18.8, 168.0], [18.9, 168.0], [19.0, 170.0], [19.1, 170.0], [19.2, 171.0], [19.3, 173.0], [19.4, 173.0], [19.5, 174.0], [19.6, 177.0], [19.7, 177.0], [19.8, 181.0], [19.9, 181.0], [20.0, 181.0], [20.1, 181.0], [20.2, 184.0], [20.3, 185.0], [20.4, 185.0], [20.5, 191.0], [20.6, 191.0], [20.7, 194.0], [20.8, 195.0], [20.9, 196.0], [21.0, 198.0], [21.1, 198.0], [21.2, 202.0], [21.3, 203.0], [21.4, 208.0], [21.5, 209.0], [21.6, 211.0], [21.7, 219.0], [21.8, 223.0], [21.9, 223.0], [22.0, 223.0], [22.1, 223.0], [22.2, 230.0], [22.3, 233.0], [22.4, 235.0], [22.5, 237.0], [22.6, 239.0], [22.7, 240.0], [22.8, 242.0], [22.9, 243.0], [23.0, 245.0], [23.1, 245.0], [23.2, 246.0], [23.3, 258.0], [23.4, 259.0], [23.5, 260.0], [23.6, 266.0], [23.7, 266.0], [23.8, 270.0], [23.9, 275.0], [24.0, 276.0], [24.1, 276.0], [24.2, 279.0], [24.3, 284.0], [24.4, 302.0], [24.5, 305.0], [24.6, 316.0], [24.7, 317.0], [24.8, 319.0], [24.9, 324.0], [25.0, 336.0], [25.1, 336.0], [25.2, 340.0], [25.3, 341.0], [25.4, 359.0], [25.5, 363.0], [25.6, 367.0], [25.7, 369.0], [25.8, 369.0], [25.9, 370.0], [26.0, 370.0], [26.1, 370.0], [26.2, 373.0], [26.3, 375.0], [26.4, 375.0], [26.5, 376.0], [26.6, 382.0], [26.7, 384.0], [26.8, 391.0], [26.9, 394.0], [27.0, 395.0], [27.1, 395.0], [27.2, 395.0], [27.3, 402.0], [27.4, 406.0], [27.5, 406.0], [27.6, 413.0], [27.7, 418.0], [27.8, 421.0], [27.9, 424.0], [28.0, 424.0], [28.1, 424.0], [28.2, 427.0], [28.3, 431.0], [28.4, 437.0], [28.5, 447.0], [28.6, 449.0], [28.7, 451.0], [28.8, 453.0], [28.9, 457.0], [29.0, 467.0], [29.1, 467.0], [29.2, 469.0], [29.3, 473.0], [29.4, 473.0], [29.5, 480.0], [29.6, 482.0], [29.7, 483.0], [29.8, 483.0], [29.9, 487.0], [30.0, 487.0], [30.1, 487.0], [30.2, 487.0], [30.3, 488.0], [30.4, 491.0], [30.5, 491.0], [30.6, 495.0], [30.7, 496.0], [30.8, 498.0], [30.9, 499.0], [31.0, 505.0], [31.1, 505.0], [31.2, 506.0], [31.3, 507.0], [31.4, 507.0], [31.5, 517.0], [31.6, 518.0], [31.7, 520.0], [31.8, 524.0], [31.9, 529.0], [32.0, 530.0], [32.1, 530.0], [32.2, 532.0], [32.3, 535.0], [32.4, 540.0], [32.5, 541.0], [32.6, 543.0], [32.7, 549.0], [32.8, 556.0], [32.9, 556.0], [33.0, 557.0], [33.1, 557.0], [33.2, 557.0], [33.3, 563.0], [33.4, 564.0], [33.5, 564.0], [33.6, 566.0], [33.7, 566.0], [33.8, 566.0], [33.9, 568.0], [34.0, 569.0], [34.1, 569.0], [34.2, 573.0], [34.3, 576.0], [34.4, 576.0], [34.5, 583.0], [34.6, 584.0], [34.7, 588.0], [34.8, 589.0], [34.9, 594.0], [35.0, 595.0], [35.1, 595.0], [35.2, 596.0], [35.3, 597.0], [35.4, 600.0], [35.5, 600.0], [35.6, 600.0], [35.7, 604.0], [35.8, 605.0], [35.9, 609.0], [36.0, 612.0], [36.1, 612.0], [36.2, 612.0], [36.3, 617.0], [36.4, 619.0], [36.5, 622.0], [36.6, 631.0], [36.7, 633.0], [36.8, 633.0], [36.9, 637.0], [37.0, 640.0], [37.1, 640.0], [37.2, 648.0], [37.3, 648.0], [37.4, 649.0], [37.5, 653.0], [37.6, 661.0], [37.7, 663.0], [37.8, 664.0], [37.9, 665.0], [38.0, 665.0], [38.1, 670.0], [38.2, 670.0], [38.3, 671.0], [38.4, 671.0], [38.5, 672.0], [38.6, 683.0], [38.7, 683.0], [38.8, 685.0], [38.9, 685.0], [39.0, 685.0], [39.1, 687.0], [39.2, 688.0], [39.3, 691.0], [39.4, 691.0], [39.5, 692.0], [39.6, 693.0], [39.7, 696.0], [39.8, 696.0], [39.9, 698.0], [40.0, 698.0], [40.1, 698.0], [40.2, 700.0], [40.3, 702.0], [40.4, 702.0], [40.5, 706.0], [40.6, 707.0], [40.7, 708.0], [40.8, 715.0], [40.9, 720.0], [41.0, 720.0], [41.1, 723.0], [41.2, 733.0], [41.3, 736.0], [41.4, 737.0], [41.5, 739.0], [41.6, 740.0], [41.7, 742.0], [41.8, 745.0], [41.9, 758.0], [42.0, 758.0], [42.1, 760.0], [42.2, 765.0], [42.3, 769.0], [42.4, 770.0], [42.5, 771.0], [42.6, 772.0], [42.7, 772.0], [42.8, 773.0], [42.9, 775.0], [43.0, 775.0], [43.1, 775.0], [43.2, 781.0], [43.3, 783.0], [43.4, 784.0], [43.5, 787.0], [43.6, 789.0], [43.7, 790.0], [43.8, 795.0], [43.9, 795.0], [44.0, 795.0], [44.1, 795.0], [44.2, 799.0], [44.3, 800.0], [44.4, 808.0], [44.5, 808.0], [44.6, 810.0], [44.7, 811.0], [44.8, 820.0], [44.9, 823.0], [45.0, 823.0], [45.1, 825.0], [45.2, 827.0], [45.3, 827.0], [45.4, 828.0], [45.5, 828.0], [45.6, 829.0], [45.7, 836.0], [45.8, 841.0], [45.9, 843.0], [46.0, 843.0], [46.1, 844.0], [46.2, 848.0], [46.3, 849.0], [46.4, 850.0], [46.5, 851.0], [46.6, 852.0], [46.7, 854.0], [46.8, 856.0], [46.9, 859.0], [47.0, 859.0], [47.1, 859.0], [47.2, 866.0], [47.3, 868.0], [47.4, 870.0], [47.5, 871.0], [47.6, 874.0], [47.7, 874.0], [47.8, 876.0], [47.9, 885.0], [48.0, 885.0], [48.1, 889.0], [48.2, 890.0], [48.3, 891.0], [48.4, 892.0], [48.5, 894.0], [48.6, 894.0], [48.7, 897.0], [48.8, 897.0], [48.9, 901.0], [49.0, 901.0], [49.1, 908.0], [49.2, 913.0], [49.3, 914.0], [49.4, 926.0], [49.5, 940.0], [49.6, 940.0], [49.7, 942.0], [49.8, 942.0], [49.9, 946.0], [50.0, 946.0], [50.1, 953.0], [50.2, 955.0], [50.3, 956.0], [50.4, 957.0], [50.5, 959.0], [50.6, 960.0], [50.7, 964.0], [50.8, 964.0], [50.9, 964.0], [51.0, 964.0], [51.1, 967.0], [51.2, 972.0], [51.3, 974.0], [51.4, 977.0], [51.5, 980.0], [51.6, 984.0], [51.7, 987.0], [51.8, 989.0], [51.9, 992.0], [52.0, 992.0], [52.1, 992.0], [52.2, 995.0], [52.3, 1005.0], [52.4, 1008.0], [52.5, 1016.0], [52.6, 1017.0], [52.7, 1020.0], [52.8, 1024.0], [52.9, 1028.0], [53.0, 1028.0], [53.1, 1031.0], [53.2, 1044.0], [53.3, 1044.0], [53.4, 1049.0], [53.5, 1050.0], [53.6, 1053.0], [53.7, 1054.0], [53.8, 1054.0], [53.9, 1056.0], [54.0, 1056.0], [54.1, 1056.0], [54.2, 1057.0], [54.3, 1071.0], [54.4, 1072.0], [54.5, 1082.0], [54.6, 1083.0], [54.7, 1085.0], [54.8, 1086.0], [54.9, 1090.0], [55.0, 1090.0], [55.1, 1103.0], [55.2, 1103.0], [55.3, 1108.0], [55.4, 1112.0], [55.5, 1115.0], [55.6, 1116.0], [55.7, 1116.0], [55.8, 1119.0], [55.9, 1123.0], [56.0, 1123.0], [56.1, 1125.0], [56.2, 1130.0], [56.3, 1132.0], [56.4, 1133.0], [56.5, 1135.0], [56.6, 1136.0], [56.7, 1138.0], [56.8, 1140.0], [56.9, 1141.0], [57.0, 1141.0], [57.1, 1148.0], [57.2, 1153.0], [57.3, 1157.0], [57.4, 1158.0], [57.5, 1160.0], [57.6, 1162.0], [57.7, 1164.0], [57.8, 1168.0], [57.9, 1171.0], [58.0, 1171.0], [58.1, 1176.0], [58.2, 1177.0], [58.3, 1178.0], [58.4, 1181.0], [58.5, 1184.0], [58.6, 1188.0], [58.7, 1190.0], [58.8, 1194.0], [58.9, 1195.0], [59.0, 1195.0], [59.1, 1195.0], [59.2, 1195.0], [59.3, 1198.0], [59.4, 1203.0], [59.5, 1203.0], [59.6, 1205.0], [59.7, 1207.0], [59.8, 1208.0], [59.9, 1212.0], [60.0, 1212.0], [60.1, 1212.0], [60.2, 1215.0], [60.3, 1222.0], [60.4, 1228.0], [60.5, 1236.0], [60.6, 1237.0], [60.7, 1244.0], [60.8, 1244.0], [60.9, 1248.0], [61.0, 1248.0], [61.1, 1249.0], [61.2, 1252.0], [61.3, 1255.0], [61.4, 1258.0], [61.5, 1259.0], [61.6, 1261.0], [61.7, 1273.0], [61.8, 1276.0], [61.9, 1278.0], [62.0, 1278.0], [62.1, 1284.0], [62.2, 1286.0], [62.3, 1286.0], [62.4, 1291.0], [62.5, 1293.0], [62.6, 1306.0], [62.7, 1308.0], [62.8, 1309.0], [62.9, 1312.0], [63.0, 1312.0], [63.1, 1312.0], [63.2, 1318.0], [63.3, 1320.0], [63.4, 1329.0], [63.5, 1330.0], [63.6, 1334.0], [63.7, 1336.0], [63.8, 1341.0], [63.9, 1343.0], [64.0, 1343.0], [64.1, 1347.0], [64.2, 1348.0], [64.3, 1349.0], [64.4, 1349.0], [64.5, 1350.0], [64.6, 1353.0], [64.7, 1363.0], [64.8, 1364.0], [64.9, 1365.0], [65.0, 1365.0], [65.1, 1366.0], [65.2, 1367.0], [65.3, 1370.0], [65.4, 1375.0], [65.5, 1376.0], [65.6, 1380.0], [65.7, 1387.0], [65.8, 1407.0], [65.9, 1407.0], [66.0, 1407.0], [66.1, 1408.0], [66.2, 1417.0], [66.3, 1420.0], [66.4, 1421.0], [66.5, 1424.0], [66.6, 1427.0], [66.7, 1428.0], [66.8, 1432.0], [66.9, 1433.0], [67.0, 1433.0], [67.1, 1435.0], [67.2, 1438.0], [67.3, 1438.0], [67.4, 1446.0], [67.5, 1453.0], [67.6, 1460.0], [67.7, 1463.0], [67.8, 1465.0], [67.9, 1470.0], [68.0, 1470.0], [68.1, 1478.0], [68.2, 1481.0], [68.3, 1488.0], [68.4, 1496.0], [68.5, 1498.0], [68.6, 1509.0], [68.7, 1514.0], [68.8, 1516.0], [68.9, 1519.0], [69.0, 1519.0], [69.1, 1520.0], [69.2, 1520.0], [69.3, 1523.0], [69.4, 1524.0], [69.5, 1531.0], [69.6, 1532.0], [69.7, 1551.0], [69.8, 1556.0], [69.9, 1556.0], [70.0, 1556.0], [70.1, 1560.0], [70.2, 1564.0], [70.3, 1575.0], [70.4, 1576.0], [70.5, 1584.0], [70.6, 1590.0], [70.7, 1598.0], [70.8, 1602.0], [70.9, 1603.0], [71.0, 1603.0], [71.1, 1606.0], [71.2, 1613.0], [71.3, 1632.0], [71.4, 1634.0], [71.5, 1637.0], [71.6, 1641.0], [71.7, 1652.0], [71.8, 1675.0], [71.9, 1686.0], [72.0, 1686.0], [72.1, 1688.0], [72.2, 1697.0], [72.3, 1709.0], [72.4, 1709.0], [72.5, 1723.0], [72.6, 1725.0], [72.7, 1740.0], [72.8, 1761.0], [72.9, 1773.0], [73.0, 1773.0], [73.1, 1777.0], [73.2, 1780.0], [73.3, 1809.0], [73.4, 1838.0], [73.5, 1853.0], [73.6, 1876.0], [73.7, 1898.0], [73.8, 1914.0], [73.9, 1972.0], [74.0, 1972.0], [74.1, 2110.0], [74.2, 2162.0], [74.3, 2165.0], [74.4, 2198.0], [74.5, 2199.0], [74.6, 2211.0], [74.7, 2213.0], [74.8, 2236.0], [74.9, 2245.0], [75.0, 2245.0], [75.1, 2391.0], [75.2, 2397.0], [75.3, 2440.0], [75.4, 2462.0], [75.5, 2505.0], [75.6, 2515.0], [75.7, 2543.0], [75.8, 2584.0], [75.9, 2698.0], [76.0, 2698.0], [76.1, 2721.0], [76.2, 2748.0], [76.3, 2786.0], [76.4, 2792.0], [76.5, 2794.0], [76.6, 2881.0], [76.7, 2887.0], [76.8, 2897.0], [76.9, 2907.0], [77.0, 2907.0], [77.1, 2911.0], [77.2, 2915.0], [77.3, 2918.0], [77.4, 2929.0], [77.5, 2937.0], [77.6, 2937.0], [77.7, 2945.0], [77.8, 2960.0], [77.9, 2962.0], [78.0, 2962.0], [78.1, 2965.0], [78.2, 2972.0], [78.3, 2975.0], [78.4, 2980.0], [78.5, 2984.0], [78.6, 2988.0], [78.7, 2989.0], [78.8, 2991.0], [78.9, 3012.0], [79.0, 3012.0], [79.1, 3018.0], [79.2, 3020.0], [79.3, 3024.0], [79.4, 3029.0], [79.5, 3034.0], [79.6, 3039.0], [79.7, 3049.0], [79.8, 3050.0], [79.9, 3055.0], [80.0, 3055.0], [80.1, 3062.0], [80.2, 3065.0], [80.3, 3069.0], [80.4, 3072.0], [80.5, 3077.0], [80.6, 3080.0], [80.7, 3080.0], [80.8, 3082.0], [80.9, 3082.0], [81.0, 3082.0], [81.1, 3083.0], [81.2, 3090.0], [81.3, 3090.0], [81.4, 3092.0], [81.5, 3095.0], [81.6, 3097.0], [81.7, 3098.0], [81.8, 3106.0], [81.9, 3108.0], [82.0, 3108.0], [82.1, 3111.0], [82.2, 3115.0], [82.3, 3122.0], [82.4, 3124.0], [82.5, 3125.0], [82.6, 3125.0], [82.7, 3135.0], [82.8, 3139.0], [82.9, 3140.0], [83.0, 3140.0], [83.1, 3141.0], [83.2, 3142.0], [83.3, 3149.0], [83.4, 3159.0], [83.5, 3174.0], [83.6, 3179.0], [83.7, 3200.0], [83.8, 3209.0], [83.9, 3211.0], [84.0, 3211.0], [84.1, 3218.0], [84.2, 3221.0], [84.3, 3226.0], [84.4, 3229.0], [84.5, 3255.0], [84.6, 3263.0], [84.7, 3264.0], [84.8, 3269.0], [84.9, 3275.0], [85.0, 3275.0], [85.1, 3278.0], [85.2, 3279.0], [85.3, 3285.0], [85.4, 3294.0], [85.5, 3303.0], [85.6, 3316.0], [85.7, 3317.0], [85.8, 3323.0], [85.9, 3328.0], [86.0, 3328.0], [86.1, 3336.0], [86.2, 3336.0], [86.3, 3338.0], [86.4, 3346.0], [86.5, 3346.0], [86.6, 3347.0], [86.7, 3347.0], [86.8, 3347.0], [86.9, 3349.0], [87.0, 3349.0], [87.1, 3349.0], [87.2, 3349.0], [87.3, 3357.0], [87.4, 3358.0], [87.5, 3360.0], [87.6, 3360.0], [87.7, 3361.0], [87.8, 3364.0], [87.9, 3364.0], [88.0, 3364.0], [88.1, 3370.0], [88.2, 3371.0], [88.3, 3377.0], [88.4, 3381.0], [88.5, 3383.0], [88.6, 3398.0], [88.7, 3398.0], [88.8, 3401.0], [88.9, 3405.0], [89.0, 3405.0], [89.1, 3415.0], [89.2, 3419.0], [89.3, 3421.0], [89.4, 3427.0], [89.5, 3433.0], [89.6, 3438.0], [89.7, 3439.0], [89.8, 3440.0], [89.9, 3443.0], [90.0, 3443.0], [90.1, 3447.0], [90.2, 3453.0], [90.3, 3454.0], [90.4, 3455.0], [90.5, 3458.0], [90.6, 3469.0], [90.7, 3484.0], [90.8, 3485.0], [90.9, 3487.0], [91.0, 3487.0], [91.1, 3492.0], [91.2, 3504.0], [91.3, 3511.0], [91.4, 3515.0], [91.5, 3515.0], [91.6, 3516.0], [91.7, 3520.0], [91.8, 3521.0], [91.9, 3523.0], [92.0, 3523.0], [92.1, 3524.0], [92.2, 3526.0], [92.3, 3527.0], [92.4, 3528.0], [92.5, 3535.0], [92.6, 3539.0], [92.7, 3545.0], [92.8, 3546.0], [92.9, 3548.0], [93.0, 3548.0], [93.1, 3548.0], [93.2, 3553.0], [93.3, 3554.0], [93.4, 3555.0], [93.5, 3559.0], [93.6, 3560.0], [93.7, 3562.0], [93.8, 3568.0], [93.9, 3570.0], [94.0, 3570.0], [94.1, 3573.0], [94.2, 3590.0], [94.3, 3596.0], [94.4, 3599.0], [94.5, 3605.0], [94.6, 3608.0], [94.7, 3612.0], [94.8, 3614.0], [94.9, 3621.0], [95.0, 3621.0], [95.1, 3623.0], [95.2, 3624.0], [95.3, 3630.0], [95.4, 3640.0], [95.5, 3653.0], [95.6, 3655.0], [95.7, 3659.0], [95.8, 3671.0], [95.9, 3671.0], [96.0, 3671.0], [96.1, 3675.0], [96.2, 3677.0], [96.3, 3690.0], [96.4, 3692.0], [96.5, 3703.0], [96.6, 3712.0], [96.7, 3714.0], [96.8, 3715.0], [96.9, 3719.0], [97.0, 3719.0], [97.1, 3719.0], [97.2, 3720.0], [97.3, 3730.0], [97.4, 3747.0], [97.5, 3751.0], [97.6, 3753.0], [97.7, 3759.0], [97.8, 3762.0], [97.9, 3763.0], [98.0, 3763.0], [98.1, 3784.0], [98.2, 3798.0], [98.3, 3805.0], [98.4, 3809.0], [98.5, 3813.0], [98.6, 3815.0], [98.7, 3816.0], [98.8, 3817.0], [98.9, 3822.0], [99.0, 3822.0], [99.1, 3827.0], [99.2, 3827.0], [99.3, 3832.0], [99.4, 3833.0], [99.5, 3833.0], [99.6, 3850.0], [99.7, 3881.0], [99.8, 3906.0], [99.9, 5249.0], [100.0, 5249.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 26.0], [0.1, 26.0], [0.2, 38.0], [0.3, 48.0], [0.4, 56.0], [0.5, 62.0], [0.6, 66.0], [0.7, 67.0], [0.8, 69.0], [0.9, 71.0], [1.0, 71.0], [1.1, 82.0], [1.2, 83.0], [1.3, 90.0], [1.4, 92.0], [1.5, 95.0], [1.6, 99.0], [1.7, 108.0], [1.8, 109.0], [1.9, 119.0], [2.0, 119.0], [2.1, 122.0], [2.2, 127.0], [2.3, 127.0], [2.4, 130.0], [2.5, 132.0], [2.6, 132.0], [2.7, 133.0], [2.8, 136.0], [2.9, 138.0], [3.0, 138.0], [3.1, 138.0], [3.2, 141.0], [3.3, 145.0], [3.4, 147.0], [3.5, 148.0], [3.6, 149.0], [3.7, 150.0], [3.8, 152.0], [3.9, 152.0], [4.0, 152.0], [4.1, 153.0], [4.2, 154.0], [4.3, 154.0], [4.4, 154.0], [4.5, 154.0], [4.6, 155.0], [4.7, 155.0], [4.8, 156.0], [4.9, 157.0], [5.0, 158.0], [5.1, 158.0], [5.2, 158.0], [5.3, 159.0], [5.4, 160.0], [5.5, 160.0], [5.6, 162.0], [5.7, 166.0], [5.8, 167.0], [5.9, 172.0], [6.0, 174.0], [6.1, 174.0], [6.2, 175.0], [6.3, 176.0], [6.4, 179.0], [6.5, 179.0], [6.6, 179.0], [6.7, 179.0], [6.8, 180.0], [6.9, 181.0], [7.0, 181.0], [7.1, 181.0], [7.2, 182.0], [7.3, 185.0], [7.4, 186.0], [7.5, 189.0], [7.6, 190.0], [7.7, 191.0], [7.8, 191.0], [7.9, 192.0], [8.0, 192.0], [8.1, 192.0], [8.2, 193.0], [8.3, 194.0], [8.4, 197.0], [8.5, 198.0], [8.6, 199.0], [8.7, 199.0], [8.8, 204.0], [8.9, 205.0], [9.0, 211.0], [9.1, 211.0], [9.2, 215.0], [9.3, 217.0], [9.4, 218.0], [9.5, 218.0], [9.6, 219.0], [9.7, 219.0], [9.8, 219.0], [9.9, 223.0], [10.0, 225.0], [10.1, 225.0], [10.2, 230.0], [10.3, 230.0], [10.4, 231.0], [10.5, 234.0], [10.6, 239.0], [10.7, 242.0], [10.8, 245.0], [10.9, 246.0], [11.0, 247.0], [11.1, 247.0], [11.2, 253.0], [11.3, 258.0], [11.4, 259.0], [11.5, 259.0], [11.6, 264.0], [11.7, 264.0], [11.8, 265.0], [11.9, 269.0], [12.0, 276.0], [12.1, 276.0], [12.2, 277.0], [12.3, 289.0], [12.4, 291.0], [12.5, 293.0], [12.6, 296.0], [12.7, 301.0], [12.8, 304.0], [12.9, 306.0], [13.0, 307.0], [13.1, 307.0], [13.2, 308.0], [13.3, 310.0], [13.4, 312.0], [13.5, 312.0], [13.6, 319.0], [13.7, 319.0], [13.8, 320.0], [13.9, 321.0], [14.0, 321.0], [14.1, 321.0], [14.2, 323.0], [14.3, 324.0], [14.4, 326.0], [14.5, 326.0], [14.6, 328.0], [14.7, 332.0], [14.8, 333.0], [14.9, 333.0], [15.0, 337.0], [15.1, 337.0], [15.2, 344.0], [15.3, 352.0], [15.4, 361.0], [15.5, 364.0], [15.6, 366.0], [15.7, 366.0], [15.8, 369.0], [15.9, 369.0], [16.0, 371.0], [16.1, 371.0], [16.2, 372.0], [16.3, 372.0], [16.4, 373.0], [16.5, 379.0], [16.6, 386.0], [16.7, 386.0], [16.8, 386.0], [16.9, 387.0], [17.0, 389.0], [17.1, 389.0], [17.2, 390.0], [17.3, 390.0], [17.4, 392.0], [17.5, 398.0], [17.6, 400.0], [17.7, 400.0], [17.8, 410.0], [17.9, 412.0], [18.0, 420.0], [18.1, 420.0], [18.2, 422.0], [18.3, 430.0], [18.4, 433.0], [18.5, 459.0], [18.6, 460.0], [18.7, 461.0], [18.8, 470.0], [18.9, 476.0], [19.0, 482.0], [19.1, 482.0], [19.2, 494.0], [19.3, 497.0], [19.4, 511.0], [19.5, 512.0], [19.6, 533.0], [19.7, 533.0], [19.8, 540.0], [19.9, 556.0], [20.0, 561.0], [20.1, 561.0], [20.2, 567.0], [20.3, 571.0], [20.4, 571.0], [20.5, 575.0], [20.6, 586.0], [20.7, 596.0], [20.8, 597.0], [20.9, 602.0], [21.0, 612.0], [21.1, 612.0], [21.2, 621.0], [21.3, 623.0], [21.4, 651.0], [21.5, 659.0], [21.6, 660.0], [21.7, 689.0], [21.8, 718.0], [21.9, 720.0], [22.0, 727.0], [22.1, 727.0], [22.2, 759.0], [22.3, 767.0], [22.4, 789.0], [22.5, 806.0], [22.6, 806.0], [22.7, 814.0], [22.8, 814.0], [22.9, 820.0], [23.0, 822.0], [23.1, 822.0], [23.2, 835.0], [23.3, 875.0], [23.4, 889.0], [23.5, 899.0], [23.6, 934.0], [23.7, 941.0], [23.8, 992.0], [23.9, 1008.0], [24.0, 1029.0], [24.1, 1029.0], [24.2, 1075.0], [24.3, 1086.0], [24.4, 1090.0], [24.5, 1107.0], [24.6, 1125.0], [24.7, 1145.0], [24.8, 1147.0], [24.9, 1148.0], [25.0, 1149.0], [25.1, 1149.0], [25.2, 1160.0], [25.3, 1162.0], [25.4, 1189.0], [25.5, 1190.0], [25.6, 1192.0], [25.7, 1223.0], [25.8, 1227.0], [25.9, 1230.0], [26.0, 1292.0], [26.1, 1292.0], [26.2, 1294.0], [26.3, 1301.0], [26.4, 1315.0], [26.5, 1318.0], [26.6, 1324.0], [26.7, 1325.0], [26.8, 1325.0], [26.9, 1331.0], [27.0, 1340.0], [27.1, 1340.0], [27.2, 1342.0], [27.3, 1356.0], [27.4, 1371.0], [27.5, 1379.0], [27.6, 1384.0], [27.7, 1387.0], [27.8, 1414.0], [27.9, 1420.0], [28.0, 1438.0], [28.1, 1438.0], [28.2, 1456.0], [28.3, 1460.0], [28.4, 1460.0], [28.5, 1470.0], [28.6, 1483.0], [28.7, 1484.0], [28.8, 1488.0], [28.9, 1488.0], [29.0, 1490.0], [29.1, 1490.0], [29.2, 1490.0], [29.3, 1492.0], [29.4, 1503.0], [29.5, 1507.0], [29.6, 1514.0], [29.7, 1521.0], [29.8, 1524.0], [29.9, 1525.0], [30.0, 1528.0], [30.1, 1528.0], [30.2, 1530.0], [30.3, 1543.0], [30.4, 1544.0], [30.5, 1553.0], [30.6, 1567.0], [30.7, 1573.0], [30.8, 1576.0], [30.9, 1580.0], [31.0, 1583.0], [31.1, 1583.0], [31.2, 1585.0], [31.3, 1587.0], [31.4, 1590.0], [31.5, 1598.0], [31.6, 1601.0], [31.7, 1614.0], [31.8, 1625.0], [31.9, 1626.0], [32.0, 1626.0], [32.1, 1626.0], [32.2, 1627.0], [32.3, 1640.0], [32.4, 1642.0], [32.5, 1659.0], [32.6, 1663.0], [32.7, 1664.0], [32.8, 1666.0], [32.9, 1674.0], [33.0, 1674.0], [33.1, 1674.0], [33.2, 1675.0], [33.3, 1676.0], [33.4, 1678.0], [33.5, 1682.0], [33.6, 1691.0], [33.7, 1692.0], [33.8, 1698.0], [33.9, 1702.0], [34.0, 1705.0], [34.1, 1705.0], [34.2, 1717.0], [34.3, 1720.0], [34.4, 1721.0], [34.5, 1722.0], [34.6, 1725.0], [34.7, 1737.0], [34.8, 1737.0], [34.9, 1743.0], [35.0, 1762.0], [35.1, 1762.0], [35.2, 1762.0], [35.3, 1772.0], [35.4, 1776.0], [35.5, 1777.0], [35.6, 1786.0], [35.7, 1790.0], [35.8, 1790.0], [35.9, 1793.0], [36.0, 1799.0], [36.1, 1799.0], [36.2, 1803.0], [36.3, 1803.0], [36.4, 1804.0], [36.5, 1805.0], [36.6, 1807.0], [36.7, 1807.0], [36.8, 1809.0], [36.9, 1810.0], [37.0, 1810.0], [37.1, 1810.0], [37.2, 1813.0], [37.3, 1827.0], [37.4, 1828.0], [37.5, 1830.0], [37.6, 1835.0], [37.7, 1844.0], [37.8, 1845.0], [37.9, 1846.0], [38.0, 1846.0], [38.1, 1847.0], [38.2, 1850.0], [38.3, 1852.0], [38.4, 1853.0], [38.5, 1855.0], [38.6, 1860.0], [38.7, 1867.0], [38.8, 1869.0], [38.9, 1873.0], [39.0, 1873.0], [39.1, 1875.0], [39.2, 1880.0], [39.3, 1882.0], [39.4, 1886.0], [39.5, 1887.0], [39.6, 1887.0], [39.7, 1888.0], [39.8, 1890.0], [39.9, 1890.0], [40.0, 1890.0], [40.1, 1906.0], [40.2, 1911.0], [40.3, 1919.0], [40.4, 1924.0], [40.5, 1924.0], [40.6, 1926.0], [40.7, 1933.0], [40.8, 1937.0], [40.9, 1940.0], [41.0, 1940.0], [41.1, 1943.0], [41.2, 1944.0], [41.3, 1947.0], [41.4, 1949.0], [41.5, 1950.0], [41.6, 1951.0], [41.7, 1953.0], [41.8, 1959.0], [41.9, 1960.0], [42.0, 1960.0], [42.1, 1960.0], [42.2, 1969.0], [42.3, 1973.0], [42.4, 1982.0], [42.5, 1984.0], [42.6, 1985.0], [42.7, 1997.0], [42.8, 1999.0], [42.9, 2000.0], [43.0, 2000.0], [43.1, 2000.0], [43.2, 2008.0], [43.3, 2012.0], [43.4, 2015.0], [43.5, 2015.0], [43.6, 2024.0], [43.7, 2028.0], [43.8, 2033.0], [43.9, 2051.0], [44.0, 2051.0], [44.1, 2054.0], [44.2, 2060.0], [44.3, 2061.0], [44.4, 2062.0], [44.5, 2062.0], [44.6, 2063.0], [44.7, 2065.0], [44.8, 2077.0], [44.9, 2084.0], [45.0, 2084.0], [45.1, 2084.0], [45.2, 2085.0], [45.3, 2087.0], [45.4, 2093.0], [45.5, 2096.0], [45.6, 2105.0], [45.7, 2106.0], [45.8, 2107.0], [45.9, 2116.0], [46.0, 2116.0], [46.1, 2120.0], [46.2, 2120.0], [46.3, 2121.0], [46.4, 2129.0], [46.5, 2137.0], [46.6, 2138.0], [46.7, 2139.0], [46.8, 2139.0], [46.9, 2140.0], [47.0, 2140.0], [47.1, 2140.0], [47.2, 2143.0], [47.3, 2144.0], [47.4, 2148.0], [47.5, 2149.0], [47.6, 2159.0], [47.7, 2161.0], [47.8, 2162.0], [47.9, 2162.0], [48.0, 2162.0], [48.1, 2163.0], [48.2, 2163.0], [48.3, 2170.0], [48.4, 2171.0], [48.5, 2171.0], [48.6, 2173.0], [48.7, 2174.0], [48.8, 2174.0], [48.9, 2177.0], [49.0, 2177.0], [49.1, 2183.0], [49.2, 2196.0], [49.3, 2197.0], [49.4, 2201.0], [49.5, 2203.0], [49.6, 2205.0], [49.7, 2214.0], [49.8, 2215.0], [49.9, 2216.0], [50.0, 2216.0], [50.1, 2216.0], [50.2, 2219.0], [50.3, 2227.0], [50.4, 2229.0], [50.5, 2235.0], [50.6, 2238.0], [50.7, 2240.0], [50.8, 2240.0], [50.9, 2241.0], [51.0, 2241.0], [51.1, 2265.0], [51.2, 2269.0], [51.3, 2269.0], [51.4, 2279.0], [51.5, 2281.0], [51.6, 2282.0], [51.7, 2284.0], [51.8, 2289.0], [51.9, 2290.0], [52.0, 2290.0], [52.1, 2293.0], [52.2, 2297.0], [52.3, 2301.0], [52.4, 2302.0], [52.5, 2306.0], [52.6, 2306.0], [52.7, 2313.0], [52.8, 2313.0], [52.9, 2314.0], [53.0, 2314.0], [53.1, 2314.0], [53.2, 2317.0], [53.3, 2321.0], [53.4, 2321.0], [53.5, 2323.0], [53.6, 2323.0], [53.7, 2328.0], [53.8, 2333.0], [53.9, 2333.0], [54.0, 2333.0], [54.1, 2337.0], [54.2, 2341.0], [54.3, 2343.0], [54.4, 2348.0], [54.5, 2350.0], [54.6, 2351.0], [54.7, 2351.0], [54.8, 2369.0], [54.9, 2383.0], [55.0, 2383.0], [55.1, 2385.0], [55.2, 2385.0], [55.3, 2388.0], [55.4, 2389.0], [55.5, 2416.0], [55.6, 2419.0], [55.7, 2425.0], [55.8, 2429.0], [55.9, 2431.0], [56.0, 2431.0], [56.1, 2432.0], [56.2, 2438.0], [56.3, 2443.0], [56.4, 2450.0], [56.5, 2457.0], [56.6, 2460.0], [56.7, 2461.0], [56.8, 2470.0], [56.9, 2474.0], [57.0, 2474.0], [57.1, 2477.0], [57.2, 2478.0], [57.3, 2480.0], [57.4, 2487.0], [57.5, 2490.0], [57.6, 2499.0], [57.7, 2502.0], [57.8, 2510.0], [57.9, 2511.0], [58.0, 2511.0], [58.1, 2536.0], [58.2, 2543.0], [58.3, 2545.0], [58.4, 2546.0], [58.5, 2547.0], [58.6, 2548.0], [58.7, 2549.0], [58.8, 2553.0], [58.9, 2556.0], [59.0, 2556.0], [59.1, 2558.0], [59.2, 2561.0], [59.3, 2563.0], [59.4, 2565.0], [59.5, 2566.0], [59.6, 2568.0], [59.7, 2581.0], [59.8, 2583.0], [59.9, 2595.0], [60.0, 2595.0], [60.1, 2603.0], [60.2, 2613.0], [60.3, 2613.0], [60.4, 2614.0], [60.5, 2615.0], [60.6, 2624.0], [60.7, 2637.0], [60.8, 2644.0], [60.9, 2644.0], [61.0, 2644.0], [61.1, 2653.0], [61.2, 2654.0], [61.3, 2659.0], [61.4, 2662.0], [61.5, 2665.0], [61.6, 2668.0], [61.7, 2671.0], [61.8, 2671.0], [61.9, 2681.0], [62.0, 2681.0], [62.1, 2682.0], [62.2, 2684.0], [62.3, 2688.0], [62.4, 2701.0], [62.5, 2707.0], [62.6, 2709.0], [62.7, 2710.0], [62.8, 2712.0], [62.9, 2713.0], [63.0, 2713.0], [63.1, 2716.0], [63.2, 2718.0], [63.3, 2728.0], [63.4, 2731.0], [63.5, 2734.0], [63.6, 2734.0], [63.7, 2740.0], [63.8, 2743.0], [63.9, 2744.0], [64.0, 2744.0], [64.1, 2752.0], [64.2, 2758.0], [64.3, 2758.0], [64.4, 2761.0], [64.5, 2763.0], [64.6, 2764.0], [64.7, 2772.0], [64.8, 2777.0], [64.9, 2783.0], [65.0, 2783.0], [65.1, 2792.0], [65.2, 2793.0], [65.3, 2801.0], [65.4, 2812.0], [65.5, 2823.0], [65.6, 2829.0], [65.7, 2834.0], [65.8, 2835.0], [65.9, 2838.0], [66.0, 2838.0], [66.1, 2840.0], [66.2, 2844.0], [66.3, 2850.0], [66.4, 2851.0], [66.5, 2857.0], [66.6, 2864.0], [66.7, 2865.0], [66.8, 2877.0], [66.9, 2889.0], [67.0, 2889.0], [67.1, 2917.0], [67.2, 2921.0], [67.3, 2940.0], [67.4, 2945.0], [67.5, 2954.0], [67.6, 2973.0], [67.7, 2978.0], [67.8, 2981.0], [67.9, 2988.0], [68.0, 2988.0], [68.1, 2993.0], [68.2, 2998.0], [68.3, 3021.0], [68.4, 3027.0], [68.5, 3032.0], [68.6, 3061.0], [68.7, 3076.0], [68.8, 3078.0], [68.9, 3084.0], [69.0, 3084.0], [69.1, 3089.0], [69.2, 3102.0], [69.3, 3102.0], [69.4, 3117.0], [69.5, 3122.0], [69.6, 3124.0], [69.7, 3142.0], [69.8, 3147.0], [69.9, 3165.0], [70.0, 3165.0], [70.1, 3170.0], [70.2, 3174.0], [70.3, 3221.0], [70.4, 3228.0], [70.5, 3236.0], [70.6, 3270.0], [70.7, 3271.0], [70.8, 3282.0], [70.9, 3299.0], [71.0, 3299.0], [71.1, 3302.0], [71.2, 3315.0], [71.3, 3326.0], [71.4, 3330.0], [71.5, 3370.0], [71.6, 3373.0], [71.7, 3384.0], [71.8, 3414.0], [71.9, 3415.0], [72.0, 3415.0], [72.1, 3423.0], [72.2, 3429.0], [72.3, 3489.0], [72.4, 3521.0], [72.5, 3522.0], [72.6, 3528.0], [72.7, 3528.0], [72.8, 3559.0], [72.9, 3690.0], [73.0, 3690.0], [73.1, 3720.0], [73.2, 3815.0], [73.3, 3883.0], [73.4, 3894.0], [73.5, 3949.0], [73.6, 4006.0], [73.7, 4118.0], [73.8, 4170.0], [73.9, 4205.0], [74.0, 4205.0], [74.1, 4494.0], [74.2, 4534.0], [74.3, 4624.0], [74.4, 4626.0], [74.5, 4634.0], [74.6, 4653.0], [74.7, 4674.0], [74.8, 4674.0], [74.9, 4698.0], [75.0, 4698.0], [75.1, 4885.0], [75.2, 4894.0], [75.3, 4902.0], [75.4, 4916.0], [75.5, 4931.0], [75.6, 4935.0], [75.7, 4937.0], [75.8, 4952.0], [75.9, 4953.0], [76.0, 4953.0], [76.1, 4975.0], [76.2, 4975.0], [76.3, 4979.0], [76.4, 4982.0], [76.5, 4995.0], [76.6, 5007.0], [76.7, 5008.0], [76.8, 5015.0], [76.9, 5017.0], [77.0, 5017.0], [77.1, 5028.0], [77.2, 5040.0], [77.3, 5042.0], [77.4, 5043.0], [77.5, 5044.0], [77.6, 5053.0], [77.7, 5056.0], [77.8, 5065.0], [77.9, 5086.0], [78.0, 5086.0], [78.1, 5095.0], [78.2, 5106.0], [78.3, 5108.0], [78.4, 5120.0], [78.5, 5123.0], [78.6, 5123.0], [78.7, 5131.0], [78.8, 5133.0], [78.9, 5133.0], [79.0, 5133.0], [79.1, 5137.0], [79.2, 5139.0], [79.3, 5140.0], [79.4, 5144.0], [79.5, 5155.0], [79.6, 5158.0], [79.7, 5160.0], [79.8, 5161.0], [79.9, 5165.0], [80.0, 5165.0], [80.1, 5166.0], [80.2, 5172.0], [80.3, 5177.0], [80.4, 5180.0], [80.5, 5183.0], [80.6, 5189.0], [80.7, 5196.0], [80.8, 5196.0], [80.9, 5198.0], [81.0, 5198.0], [81.1, 5199.0], [81.2, 5199.0], [81.3, 5205.0], [81.4, 5208.0], [81.5, 5215.0], [81.6, 5216.0], [81.7, 5218.0], [81.8, 5221.0], [81.9, 5224.0], [82.0, 5224.0], [82.1, 5226.0], [82.2, 5228.0], [82.3, 5233.0], [82.4, 5236.0], [82.5, 5255.0], [82.6, 5259.0], [82.7, 5259.0], [82.8, 5261.0], [82.9, 5271.0], [83.0, 5271.0], [83.1, 5273.0], [83.2, 5273.0], [83.3, 5284.0], [83.4, 5284.0], [83.5, 5285.0], [83.6, 5285.0], [83.7, 5289.0], [83.8, 5289.0], [83.9, 5292.0], [84.0, 5292.0], [84.1, 5294.0], [84.2, 5295.0], [84.3, 5296.0], [84.4, 5296.0], [84.5, 5297.0], [84.6, 5297.0], [84.7, 5298.0], [84.8, 5299.0], [84.9, 5306.0], [85.0, 5306.0], [85.1, 5306.0], [85.2, 5311.0], [85.3, 5312.0], [85.4, 5313.0], [85.5, 5313.0], [85.6, 5320.0], [85.7, 5322.0], [85.8, 5323.0], [85.9, 5323.0], [86.0, 5323.0], [86.1, 5331.0], [86.2, 5331.0], [86.3, 5332.0], [86.4, 5332.0], [86.5, 5335.0], [86.6, 5337.0], [86.7, 5337.0], [86.8, 5347.0], [86.9, 5349.0], [87.0, 5349.0], [87.1, 5349.0], [87.2, 5350.0], [87.3, 5353.0], [87.4, 5374.0], [87.5, 5377.0], [87.6, 5382.0], [87.7, 5386.0], [87.8, 5388.0], [87.9, 5389.0], [88.0, 5389.0], [88.1, 5389.0], [88.2, 5389.0], [88.3, 5393.0], [88.4, 5398.0], [88.5, 5400.0], [88.6, 5405.0], [88.7, 5409.0], [88.8, 5439.0], [88.9, 5457.0], [89.0, 5457.0], [89.1, 5470.0], [89.2, 5517.0], [89.3, 5644.0], [89.4, 5654.0], [89.5, 5717.0], [89.6, 5736.0], [89.7, 5742.0], [89.8, 5752.0], [89.9, 5753.0], [90.0, 5753.0], [90.1, 5753.0], [90.2, 5769.0], [90.3, 5771.0], [90.4, 5772.0], [90.5, 5818.0], [90.6, 5821.0], [90.7, 5822.0], [90.8, 5824.0], [90.9, 5839.0], [91.0, 5839.0], [91.1, 5906.0], [91.2, 5908.0], [91.3, 5919.0], [91.4, 5922.0], [91.5, 5934.0], [91.6, 5942.0], [91.7, 5969.0], [91.8, 6025.0], [91.9, 6032.0], [92.0, 6032.0], [92.1, 6034.0], [92.2, 6059.0], [92.3, 6069.0], [92.4, 6101.0], [92.5, 6105.0], [92.6, 6124.0], [92.7, 6128.0], [92.8, 6152.0], [92.9, 6167.0], [93.0, 6167.0], [93.1, 6185.0], [93.2, 6219.0], [93.3, 6221.0], [93.4, 6222.0], [93.5, 6225.0], [93.6, 6229.0], [93.7, 6232.0], [93.8, 6237.0], [93.9, 6257.0], [94.0, 6257.0], [94.1, 6275.0], [94.2, 6292.0], [94.3, 6299.0], [94.4, 6303.0], [94.5, 6303.0], [94.6, 6308.0], [94.7, 6308.0], [94.8, 6312.0], [94.9, 6314.0], [95.0, 6314.0], [95.1, 6334.0], [95.2, 6337.0], [95.3, 6340.0], [95.4, 6343.0], [95.5, 6350.0], [95.6, 6357.0], [95.7, 6357.0], [95.8, 6361.0], [95.9, 6371.0], [96.0, 6371.0], [96.1, 6373.0], [96.2, 6375.0], [96.3, 6388.0], [96.4, 6409.0], [96.5, 6410.0], [96.6, 6414.0], [96.7, 6420.0], [96.8, 6429.0], [96.9, 6441.0], [97.0, 6441.0], [97.1, 6447.0], [97.2, 6449.0], [97.3, 6461.0], [97.4, 6478.0], [97.5, 6489.0], [97.6, 6493.0], [97.7, 6502.0], [97.8, 6527.0], [97.9, 6548.0], [98.0, 6548.0], [98.1, 6550.0], [98.2, 6557.0], [98.3, 6560.0], [98.4, 6566.0], [98.5, 6584.0], [98.6, 6611.0], [98.7, 6613.0], [98.8, 6625.0], [98.9, 6632.0], [99.0, 6632.0], [99.1, 6636.0], [99.2, 6636.0], [99.3, 6649.0], [99.4, 6661.0], [99.5, 6681.0], [99.6, 6685.0], [99.7, 6686.0], [99.8, 6693.0], [99.9, 7917.0], [100.0, 7917.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 131.0, "series": [{"data": [[0.0, 43.0], [2100.0, 2.0], [600.0, 21.0], [2400.0, 2.0], [2500.0, 2.0], [700.0, 27.0], [200.0, 40.0], [800.0, 10.0], [900.0, 11.0], [1000.0, 14.0], [1100.0, 2.0], [1200.0, 1.0], [300.0, 36.0], [1300.0, 2.0], [1500.0, 1.0], [100.0, 24.0], [400.0, 27.0], [1600.0, 1.0], [1800.0, 2.0], [500.0, 32.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[0.0, 131.0], [600.0, 62.0], [700.0, 68.0], [800.0, 38.0], [900.0, 57.0], [1000.0, 60.0], [1100.0, 31.0], [1200.0, 37.0], [1300.0, 17.0], [1400.0, 13.0], [1500.0, 22.0], [100.0, 59.0], [1600.0, 16.0], [1700.0, 10.0], [1800.0, 9.0], [1900.0, 13.0], [2000.0, 5.0], [2100.0, 7.0], [2200.0, 2.0], [2300.0, 2.0], [2400.0, 1.0], [2500.0, 3.0], [2600.0, 5.0], [2700.0, 3.0], [2900.0, 2.0], [200.0, 57.0], [3800.0, 1.0], [300.0, 51.0], [400.0, 63.0], [500.0, 55.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 91.0], [600.0, 43.0], [700.0, 37.0], [800.0, 42.0], [900.0, 30.0], [1000.0, 25.0], [1100.0, 39.0], [1200.0, 29.0], [1300.0, 29.0], [1400.0, 25.0], [1500.0, 20.0], [1600.0, 13.0], [100.0, 99.0], [1700.0, 9.0], [1800.0, 5.0], [1900.0, 2.0], [2100.0, 5.0], [2200.0, 4.0], [2300.0, 2.0], [2400.0, 2.0], [2500.0, 4.0], [2600.0, 1.0], [2700.0, 5.0], [2800.0, 3.0], [2900.0, 18.0], [3000.0, 26.0], [3100.0, 17.0], [3200.0, 16.0], [3300.0, 30.0], [200.0, 29.0], [3400.0, 21.0], [3500.0, 30.0], [3600.0, 18.0], [3700.0, 16.0], [3800.0, 14.0], [3900.0, 1.0], [300.0, 26.0], [5200.0, 1.0], [400.0, 34.0], [500.0, 39.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 15.0], [600.0, 8.0], [700.0, 6.0], [800.0, 10.0], [900.0, 3.0], [1000.0, 5.0], [1100.0, 11.0], [1200.0, 5.0], [1300.0, 14.0], [1400.0, 14.0], [1500.0, 20.0], [1600.0, 21.0], [1700.0, 20.0], [1800.0, 35.0], [1900.0, 26.0], [2000.0, 24.0], [2100.0, 34.0], [2300.0, 29.0], [2200.0, 26.0], [2400.0, 20.0], [2500.0, 21.0], [2600.0, 21.0], [2800.0, 16.0], [2700.0, 26.0], [2900.0, 11.0], [3000.0, 8.0], [3100.0, 10.0], [3200.0, 7.0], [3300.0, 7.0], [3400.0, 5.0], [3500.0, 5.0], [3700.0, 1.0], [3600.0, 1.0], [3800.0, 3.0], [3900.0, 1.0], [4000.0, 1.0], [4100.0, 2.0], [4200.0, 1.0], [4500.0, 1.0], [4600.0, 7.0], [4400.0, 1.0], [4800.0, 2.0], [4900.0, 12.0], [5100.0, 28.0], [5000.0, 14.0], [5300.0, 32.0], [5200.0, 33.0], [5500.0, 1.0], [5400.0, 6.0], [5600.0, 2.0], [5700.0, 9.0], [5800.0, 5.0], [6000.0, 5.0], [6100.0, 7.0], [5900.0, 7.0], [6300.0, 18.0], [6200.0, 11.0], [6600.0, 12.0], [6400.0, 12.0], [6500.0, 8.0], [7900.0, 1.0], [100.0, 64.0], [200.0, 35.0], [300.0, 44.0], [400.0, 16.0], [500.0, 14.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 7900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 984.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1030.0, "series": [{"data": [[0.0, 984.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 986.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1030.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 196.03066666666678, "minX": 1.72984008E12, "maxY": 196.03066666666678, "series": [{"data": [[1.72984008E12, 196.03066666666678]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72984008E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 7.0, "minX": 1.0, "maxY": 5883.310344827588, "series": [{"data": [[11.0, 58.5], [12.0, 80.0], [13.0, 66.33333333333333], [14.0, 48.0], [240.0, 639.8644067796611], [242.0, 499.09482758620703], [241.0, 783.0], [246.0, 2225.4], [245.0, 1340.5], [247.0, 12.0], [15.0, 103.57142857142858], [16.0, 95.22222222222223], [17.0, 75.75], [18.0, 102.28571428571429], [19.0, 37.0], [20.0, 27.0], [21.0, 31.0], [114.0, 141.0], [113.0, 286.0], [119.0, 96.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[200.09666666666666, 512.2566666666669]], "isOverall": false, "label": "HTTP Request-2-Aggregated", "isController": false}, {"data": [[3.0, 28.0], [6.0, 17.0], [8.0, 56.0], [9.0, 58.0], [10.0, 150.0], [11.0, 74.0], [12.0, 57.41176470588235], [13.0, 77.875], [14.0, 58.0], [15.0, 125.82142857142858], [16.0, 103.91304347826086], [17.0, 81.13043478260867], [18.0, 90.47368421052632], [19.0, 83.28571428571429], [20.0, 100.875], [21.0, 51.5], [114.0, 303.0], [113.0, 997.0], [116.0, 323.5], [117.0, 151.0], [118.0, 81.0], [119.0, 539.0], [121.0, 431.0], [120.0, 2094.0], [126.0, 454.0], [124.0, 753.0], [131.0, 505.0], [133.0, 403.0], [141.0, 1576.0], [159.0, 240.0], [161.0, 508.0], [162.0, 654.0], [169.0, 908.0], [182.0, 696.0], [190.0, 466.5], [189.0, 882.0], [199.0, 396.0], [196.0, 1460.0], [221.0, 534.0], [223.0, 607.8571428571429], [224.0, 727.5], [231.0, 954.5], [239.0, 1032.8], [238.0, 1462.9090909090908], [237.0, 1307.0645161290324], [235.0, 1085.7500000000002], [232.0, 1092.0666666666666], [236.0, 1357.4166666666667], [234.0, 763.0], [240.0, 913.6610169491523], [242.0, 1125.0862068965514], [241.0, 1912.0], [245.0, 890.3103448275863], [247.0, 596.8994413407825], [246.0, 823.4647887323943], [243.0, 1182.125], [244.0, 1014.1333333333331], [1.0, 11.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[195.57888888888877, 740.4188888888885]], "isOverall": false, "label": "HTTP Request-1-Aggregated", "isController": false}, {"data": [[3.0, 39.0], [6.0, 81.0], [8.0, 79.0], [9.0, 32.0], [10.0, 22.0], [11.0, 286.6666666666667], [12.0, 136.7058823529412], [13.0, 139.75], [14.0, 160.5], [15.0, 153.64285714285714], [16.0, 117.26086956521738], [17.0, 126.34782608695653], [18.0, 122.05263157894737], [19.0, 104.14285714285715], [20.0, 113.0], [21.0, 186.0], [114.0, 1470.0], [113.0, 2245.0], [116.0, 346.0], [117.0, 68.0], [118.0, 541.0], [119.0, 2614.5], [121.0, 319.0], [120.0, 638.0], [126.0, 487.0], [124.0, 181.0], [131.0, 370.0], [133.0, 160.0], [141.0, 1252.0], [159.0, 184.0], [161.0, 1190.0], [162.0, 152.0], [169.0, 619.0], [182.0, 109.0], [190.0, 86.0], [189.0, 7.0], [199.0, 105.0], [196.0, 702.0], [221.0, 155.0], [223.0, 247.14285714285714], [224.0, 713.5], [231.0, 571.5], [239.0, 714.8], [238.0, 771.2727272727273], [237.0, 894.4193548387096], [235.0, 993.5833333333334], [232.0, 708.2], [236.0, 783.7500000000001], [234.0, 740.0], [240.0, 3422.9491525423728], [242.0, 3036.2413793103465], [241.0, 3051.0], [245.0, 903.9137931034484], [247.0, 1047.3240223463695], [246.0, 949.3802816901405], [243.0, 849.125], [244.0, 702.7555555555552], [1.0, 15.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[195.57888888888897, 1364.4366666666667]], "isOverall": false, "label": "HTTP Request-0-Aggregated", "isController": false}, {"data": [[3.0, 67.5], [6.0, 99.0], [8.0, 140.6], [9.0, 90.0], [10.0, 172.0], [11.0, 410.0], [12.0, 229.88235294117646], [13.0, 250.5], [14.0, 296.5], [15.0, 331.1071428571428], [16.0, 275.13043478260863], [17.0, 259.391304347826], [18.0, 279.2105263157895], [19.0, 193.2857142857143], [20.0, 239.875], [21.0, 269.0], [114.0, 1845.0], [113.0, 3528.0], [116.0, 670.0], [117.0, 219.0], [118.0, 623.0], [119.0, 3202.0], [121.0, 867.0], [120.0, 2733.5], [126.0, 941.0], [124.0, 934.0], [131.0, 875.0], [133.0, 820.0], [141.0, 2829.0], [159.0, 767.0], [161.0, 1698.0], [162.0, 806.0], [169.0, 1528.0], [182.0, 806.0], [190.0, 553.0], [189.0, 889.0], [199.0, 727.0], [196.0, 2162.0], [221.0, 689.0], [223.0, 855.4285714285714], [224.0, 1611.0], [231.0, 1526.0], [239.0, 1747.6], [238.0, 2313.6363636363635], [237.0, 2342.612903225807], [235.0, 2194.833333333333], [232.0, 1863.0], [236.0, 2266.9166666666665], [234.0, 1503.0], [240.0, 5212.067796610167], [242.0, 5883.310344827588], [241.0, 5747.5], [245.0, 1898.1379310344826], [247.0, 2307.486033519553], [246.0, 2511.6056338028175], [243.0, 2031.5], [244.0, 1802.2], [1.0, 26.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[195.57888888888903, 2665.8444444444476]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 247.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 11210.0, "minX": 1.72984008E12, "maxY": 40260.0, "series": [{"data": [[1.72984008E12, 40260.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.72984008E12, 11210.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72984008E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 512.2566666666669, "minX": 1.72984008E12, "maxY": 2665.8444444444476, "series": [{"data": [[1.72984008E12, 512.2566666666669]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[1.72984008E12, 740.4188888888885]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.72984008E12, 1364.4366666666667]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.72984008E12, 2665.8444444444476]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72984008E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 500.9200000000001, "minX": 1.72984008E12, "maxY": 1094.7011111111133, "series": [{"data": [[1.72984008E12, 500.9200000000001]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[1.72984008E12, 732.3411111111121]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.72984008E12, 1094.701111111112]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.72984008E12, 1094.7011111111133]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72984008E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.72984008E12, "maxY": 285.92555555555504, "series": [{"data": [[1.72984008E12, 0.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[1.72984008E12, 0.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.72984008E12, 285.92555555555504]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.72984008E12, 285.92555555555487]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72984008E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 4.0, "minX": 1.72984008E12, "maxY": 7917.0, "series": [{"data": [[1.72984008E12, 7917.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.72984008E12, 3569.8]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.72984008E12, 6419.939999999999]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.72984008E12, 5284.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.72984008E12, 4.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.72984008E12, 904.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72984008E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 103.0, "minX": 50.0, "maxY": 3360.0, "series": [{"data": [[128.0, 902.0], [136.0, 126.0], [160.0, 772.5], [163.0, 119.0], [167.0, 103.0], [174.0, 2206.0], [178.0, 688.5], [50.0, 927.5], [217.0, 3360.0], [247.0, 1140.0], [279.0, 1345.0], [302.0, 1220.5], [310.0, 1092.5], [78.0, 3070.5], [101.0, 107.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 310.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 86.0, "minX": 50.0, "maxY": 2175.0, "series": [{"data": [[128.0, 735.0], [136.0, 91.0], [160.0, 754.5], [163.0, 102.0], [167.0, 86.0], [174.0, 1622.5], [178.0, 682.0], [50.0, 927.5], [217.0, 1943.0], [247.0, 808.0], [279.0, 768.0], [302.0, 1061.5], [310.0, 889.5], [78.0, 2175.0], [101.0, 86.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 310.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.72984008E12, "maxY": 50.0, "series": [{"data": [[1.72984008E12, 50.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72984008E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 20.0, "minX": 1.72984008E12, "maxY": 30.0, "series": [{"data": [[1.72984008E12, 30.0]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.72984008E12, 20.0]], "isOverall": false, "label": "302", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72984008E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 5.0, "minX": 1.72984008E12, "maxY": 15.0, "series": [{"data": [[1.72984008E12, 15.0]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.72984008E12, 15.0]], "isOverall": false, "label": "HTTP Request-0-success", "isController": false}, {"data": [[1.72984008E12, 15.0]], "isOverall": false, "label": "HTTP Request-1-success", "isController": false}, {"data": [[1.72984008E12, 5.0]], "isOverall": false, "label": "HTTP Request-2-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72984008E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.72984008E12, "maxY": 50.0, "series": [{"data": [[1.72984008E12, 50.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72984008E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

