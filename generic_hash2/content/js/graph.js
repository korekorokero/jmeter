/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 4.0, "minX": 0.0, "maxY": 10501.0, "series": [{"data": [[0.0, 8.0], [0.1, 8.0], [0.2, 8.0], [0.3, 8.0], [0.4, 19.0], [0.5, 19.0], [0.6, 19.0], [0.7, 25.0], [0.8, 25.0], [0.9, 25.0], [1.0, 31.0], [1.1, 31.0], [1.2, 31.0], [1.3, 31.0], [1.4, 40.0], [1.5, 40.0], [1.6, 40.0], [1.7, 43.0], [1.8, 43.0], [1.9, 43.0], [2.0, 45.0], [2.1, 45.0], [2.2, 45.0], [2.3, 45.0], [2.4, 48.0], [2.5, 48.0], [2.6, 48.0], [2.7, 50.0], [2.8, 50.0], [2.9, 50.0], [3.0, 56.0], [3.1, 56.0], [3.2, 56.0], [3.3, 56.0], [3.4, 58.0], [3.5, 58.0], [3.6, 58.0], [3.7, 59.0], [3.8, 59.0], [3.9, 59.0], [4.0, 62.0], [4.1, 62.0], [4.2, 62.0], [4.3, 62.0], [4.4, 62.0], [4.5, 62.0], [4.6, 62.0], [4.7, 67.0], [4.8, 67.0], [4.9, 67.0], [5.0, 68.0], [5.1, 68.0], [5.2, 68.0], [5.3, 68.0], [5.4, 68.0], [5.5, 68.0], [5.6, 68.0], [5.7, 70.0], [5.8, 70.0], [5.9, 70.0], [6.0, 70.0], [6.1, 70.0], [6.2, 70.0], [6.3, 70.0], [6.4, 73.0], [6.5, 73.0], [6.6, 73.0], [6.7, 81.0], [6.8, 81.0], [6.9, 81.0], [7.0, 88.0], [7.1, 88.0], [7.2, 88.0], [7.3, 88.0], [7.4, 93.0], [7.5, 93.0], [7.6, 93.0], [7.7, 97.0], [7.8, 97.0], [7.9, 97.0], [8.0, 99.0], [8.1, 99.0], [8.2, 99.0], [8.3, 99.0], [8.4, 100.0], [8.5, 100.0], [8.6, 100.0], [8.7, 100.0], [8.8, 100.0], [8.9, 100.0], [9.0, 100.0], [9.1, 100.0], [9.2, 100.0], [9.3, 100.0], [9.4, 101.0], [9.5, 101.0], [9.6, 101.0], [9.7, 103.0], [9.8, 103.0], [9.9, 103.0], [10.0, 106.0], [10.1, 106.0], [10.2, 106.0], [10.3, 106.0], [10.4, 106.0], [10.5, 106.0], [10.6, 106.0], [10.7, 107.0], [10.8, 107.0], [10.9, 107.0], [11.0, 109.0], [11.1, 109.0], [11.2, 109.0], [11.3, 109.0], [11.4, 109.0], [11.5, 109.0], [11.6, 109.0], [11.7, 114.0], [11.8, 114.0], [11.9, 114.0], [12.0, 119.0], [12.1, 119.0], [12.2, 119.0], [12.3, 119.0], [12.4, 121.0], [12.5, 121.0], [12.6, 121.0], [12.7, 126.0], [12.8, 126.0], [12.9, 126.0], [13.0, 126.0], [13.1, 131.0], [13.2, 131.0], [13.3, 131.0], [13.4, 132.0], [13.5, 132.0], [13.6, 132.0], [13.7, 134.0], [13.8, 134.0], [13.9, 134.0], [14.0, 134.0], [14.1, 140.0], [14.2, 140.0], [14.3, 140.0], [14.4, 145.0], [14.5, 145.0], [14.6, 145.0], [14.7, 146.0], [14.8, 146.0], [14.9, 146.0], [15.0, 146.0], [15.1, 153.0], [15.2, 153.0], [15.3, 153.0], [15.4, 153.0], [15.5, 153.0], [15.6, 153.0], [15.7, 178.0], [15.8, 178.0], [15.9, 178.0], [16.0, 178.0], [16.1, 189.0], [16.2, 189.0], [16.3, 189.0], [16.4, 197.0], [16.5, 197.0], [16.6, 197.0], [16.7, 197.0], [16.8, 197.0], [16.9, 197.0], [17.0, 197.0], [17.1, 197.0], [17.2, 197.0], [17.3, 197.0], [17.4, 200.0], [17.5, 200.0], [17.6, 200.0], [17.7, 200.0], [17.8, 200.0], [17.9, 200.0], [18.0, 200.0], [18.1, 200.0], [18.2, 200.0], [18.3, 200.0], [18.4, 201.0], [18.5, 201.0], [18.6, 201.0], [18.7, 207.0], [18.8, 207.0], [18.9, 207.0], [19.0, 207.0], [19.1, 207.0], [19.2, 207.0], [19.3, 207.0], [19.4, 213.0], [19.5, 213.0], [19.6, 213.0], [19.7, 216.0], [19.8, 216.0], [19.9, 216.0], [20.0, 228.0], [20.1, 228.0], [20.2, 228.0], [20.3, 228.0], [20.4, 236.0], [20.5, 236.0], [20.6, 236.0], [20.7, 240.0], [20.8, 240.0], [20.9, 240.0], [21.0, 245.0], [21.1, 245.0], [21.2, 245.0], [21.3, 245.0], [21.4, 249.0], [21.5, 249.0], [21.6, 249.0], [21.7, 254.0], [21.8, 254.0], [21.9, 254.0], [22.0, 254.0], [22.1, 254.0], [22.2, 254.0], [22.3, 254.0], [22.4, 282.0], [22.5, 282.0], [22.6, 282.0], [22.7, 288.0], [22.8, 288.0], [22.9, 288.0], [23.0, 294.0], [23.1, 294.0], [23.2, 294.0], [23.3, 294.0], [23.4, 304.0], [23.5, 304.0], [23.6, 304.0], [23.7, 309.0], [23.8, 309.0], [23.9, 309.0], [24.0, 314.0], [24.1, 314.0], [24.2, 314.0], [24.3, 314.0], [24.4, 320.0], [24.5, 320.0], [24.6, 320.0], [24.7, 324.0], [24.8, 324.0], [24.9, 324.0], [25.0, 326.0], [25.1, 326.0], [25.2, 326.0], [25.3, 326.0], [25.4, 329.0], [25.5, 329.0], [25.6, 329.0], [25.7, 336.0], [25.8, 336.0], [25.9, 336.0], [26.0, 338.0], [26.1, 338.0], [26.2, 338.0], [26.3, 338.0], [26.4, 341.0], [26.5, 341.0], [26.6, 341.0], [26.7, 342.0], [26.8, 342.0], [26.9, 342.0], [27.0, 342.0], [27.1, 342.0], [27.2, 342.0], [27.3, 342.0], [27.4, 343.0], [27.5, 343.0], [27.6, 343.0], [27.7, 347.0], [27.8, 347.0], [27.9, 347.0], [28.0, 349.0], [28.1, 349.0], [28.2, 349.0], [28.3, 349.0], [28.4, 350.0], [28.5, 350.0], [28.6, 350.0], [28.7, 366.0], [28.8, 366.0], [28.9, 366.0], [29.0, 376.0], [29.1, 376.0], [29.2, 376.0], [29.3, 376.0], [29.4, 392.0], [29.5, 392.0], [29.6, 392.0], [29.7, 393.0], [29.8, 393.0], [29.9, 393.0], [30.0, 408.0], [30.1, 408.0], [30.2, 408.0], [30.3, 408.0], [30.4, 413.0], [30.5, 413.0], [30.6, 413.0], [30.7, 416.0], [30.8, 416.0], [30.9, 416.0], [31.0, 417.0], [31.1, 417.0], [31.2, 417.0], [31.3, 417.0], [31.4, 423.0], [31.5, 423.0], [31.6, 423.0], [31.7, 423.0], [31.8, 423.0], [31.9, 423.0], [32.0, 424.0], [32.1, 424.0], [32.2, 424.0], [32.3, 424.0], [32.4, 435.0], [32.5, 435.0], [32.6, 435.0], [32.7, 444.0], [32.8, 444.0], [32.9, 444.0], [33.0, 452.0], [33.1, 452.0], [33.2, 452.0], [33.3, 452.0], [33.4, 456.0], [33.5, 456.0], [33.6, 456.0], [33.7, 464.0], [33.8, 464.0], [33.9, 464.0], [34.0, 468.0], [34.1, 468.0], [34.2, 468.0], [34.3, 468.0], [34.4, 469.0], [34.5, 469.0], [34.6, 469.0], [34.7, 479.0], [34.8, 479.0], [34.9, 479.0], [35.0, 479.0], [35.1, 479.0], [35.2, 479.0], [35.3, 479.0], [35.4, 490.0], [35.5, 490.0], [35.6, 490.0], [35.7, 496.0], [35.8, 496.0], [35.9, 496.0], [36.0, 500.0], [36.1, 500.0], [36.2, 500.0], [36.3, 500.0], [36.4, 512.0], [36.5, 512.0], [36.6, 512.0], [36.7, 523.0], [36.8, 523.0], [36.9, 523.0], [37.0, 537.0], [37.1, 537.0], [37.2, 537.0], [37.3, 537.0], [37.4, 546.0], [37.5, 546.0], [37.6, 546.0], [37.7, 574.0], [37.8, 574.0], [37.9, 574.0], [38.0, 583.0], [38.1, 583.0], [38.2, 583.0], [38.3, 583.0], [38.4, 586.0], [38.5, 586.0], [38.6, 586.0], [38.7, 591.0], [38.8, 591.0], [38.9, 591.0], [39.0, 591.0], [39.1, 594.0], [39.2, 594.0], [39.3, 594.0], [39.4, 595.0], [39.5, 595.0], [39.6, 595.0], [39.7, 598.0], [39.8, 598.0], [39.9, 598.0], [40.0, 598.0], [40.1, 599.0], [40.2, 599.0], [40.3, 599.0], [40.4, 604.0], [40.5, 604.0], [40.6, 604.0], [40.7, 607.0], [40.8, 607.0], [40.9, 607.0], [41.0, 607.0], [41.1, 614.0], [41.2, 614.0], [41.3, 614.0], [41.4, 616.0], [41.5, 616.0], [41.6, 616.0], [41.7, 623.0], [41.8, 623.0], [41.9, 623.0], [42.0, 623.0], [42.1, 624.0], [42.2, 624.0], [42.3, 624.0], [42.4, 630.0], [42.5, 630.0], [42.6, 630.0], [42.7, 642.0], [42.8, 642.0], [42.9, 642.0], [43.0, 642.0], [43.1, 647.0], [43.2, 647.0], [43.3, 647.0], [43.4, 652.0], [43.5, 652.0], [43.6, 652.0], [43.7, 654.0], [43.8, 654.0], [43.9, 654.0], [44.0, 654.0], [44.1, 662.0], [44.2, 662.0], [44.3, 662.0], [44.4, 664.0], [44.5, 664.0], [44.6, 664.0], [44.7, 664.0], [44.8, 664.0], [44.9, 664.0], [45.0, 664.0], [45.1, 666.0], [45.2, 666.0], [45.3, 666.0], [45.4, 672.0], [45.5, 672.0], [45.6, 672.0], [45.7, 684.0], [45.8, 684.0], [45.9, 684.0], [46.0, 684.0], [46.1, 692.0], [46.2, 692.0], [46.3, 692.0], [46.4, 697.0], [46.5, 697.0], [46.6, 697.0], [46.7, 706.0], [46.8, 706.0], [46.9, 706.0], [47.0, 706.0], [47.1, 715.0], [47.2, 715.0], [47.3, 715.0], [47.4, 721.0], [47.5, 721.0], [47.6, 721.0], [47.7, 812.0], [47.8, 812.0], [47.9, 812.0], [48.0, 812.0], [48.1, 820.0], [48.2, 820.0], [48.3, 820.0], [48.4, 825.0], [48.5, 825.0], [48.6, 825.0], [48.7, 826.0], [48.8, 826.0], [48.9, 826.0], [49.0, 826.0], [49.1, 839.0], [49.2, 839.0], [49.3, 839.0], [49.4, 845.0], [49.5, 845.0], [49.6, 845.0], [49.7, 848.0], [49.8, 848.0], [49.9, 848.0], [50.0, 848.0], [50.1, 867.0], [50.2, 867.0], [50.3, 867.0], [50.4, 867.0], [50.5, 867.0], [50.6, 867.0], [50.7, 876.0], [50.8, 876.0], [50.9, 876.0], [51.0, 876.0], [51.1, 879.0], [51.2, 879.0], [51.3, 879.0], [51.4, 882.0], [51.5, 882.0], [51.6, 882.0], [51.7, 884.0], [51.8, 884.0], [51.9, 884.0], [52.0, 884.0], [52.1, 903.0], [52.2, 903.0], [52.3, 903.0], [52.4, 906.0], [52.5, 906.0], [52.6, 906.0], [52.7, 922.0], [52.8, 922.0], [52.9, 922.0], [53.0, 922.0], [53.1, 933.0], [53.2, 933.0], [53.3, 933.0], [53.4, 934.0], [53.5, 934.0], [53.6, 934.0], [53.7, 935.0], [53.8, 935.0], [53.9, 935.0], [54.0, 935.0], [54.1, 945.0], [54.2, 945.0], [54.3, 945.0], [54.4, 959.0], [54.5, 959.0], [54.6, 959.0], [54.7, 969.0], [54.8, 969.0], [54.9, 969.0], [55.0, 969.0], [55.1, 972.0], [55.2, 972.0], [55.3, 972.0], [55.4, 973.0], [55.5, 973.0], [55.6, 973.0], [55.7, 980.0], [55.8, 980.0], [55.9, 980.0], [56.0, 980.0], [56.1, 985.0], [56.2, 985.0], [56.3, 985.0], [56.4, 987.0], [56.5, 987.0], [56.6, 987.0], [56.7, 1000.0], [56.8, 1000.0], [56.9, 1000.0], [57.0, 1000.0], [57.1, 1002.0], [57.2, 1002.0], [57.3, 1002.0], [57.4, 1006.0], [57.5, 1006.0], [57.6, 1006.0], [57.7, 1007.0], [57.8, 1007.0], [57.9, 1007.0], [58.0, 1007.0], [58.1, 1022.0], [58.2, 1022.0], [58.3, 1022.0], [58.4, 1023.0], [58.5, 1023.0], [58.6, 1023.0], [58.7, 1032.0], [58.8, 1032.0], [58.9, 1032.0], [59.0, 1032.0], [59.1, 1033.0], [59.2, 1033.0], [59.3, 1033.0], [59.4, 1034.0], [59.5, 1034.0], [59.6, 1034.0], [59.7, 1041.0], [59.8, 1041.0], [59.9, 1041.0], [60.0, 1041.0], [60.1, 1044.0], [60.2, 1044.0], [60.3, 1044.0], [60.4, 1049.0], [60.5, 1049.0], [60.6, 1049.0], [60.7, 1056.0], [60.8, 1056.0], [60.9, 1056.0], [61.0, 1056.0], [61.1, 1067.0], [61.2, 1067.0], [61.3, 1067.0], [61.4, 1068.0], [61.5, 1068.0], [61.6, 1068.0], [61.7, 1073.0], [61.8, 1073.0], [61.9, 1073.0], [62.0, 1073.0], [62.1, 1075.0], [62.2, 1075.0], [62.3, 1075.0], [62.4, 1076.0], [62.5, 1076.0], [62.6, 1076.0], [62.7, 1076.0], [62.8, 1076.0], [62.9, 1076.0], [63.0, 1076.0], [63.1, 1077.0], [63.2, 1077.0], [63.3, 1077.0], [63.4, 1081.0], [63.5, 1081.0], [63.6, 1081.0], [63.7, 1118.0], [63.8, 1118.0], [63.9, 1118.0], [64.0, 1118.0], [64.1, 1123.0], [64.2, 1123.0], [64.3, 1123.0], [64.4, 1132.0], [64.5, 1132.0], [64.6, 1132.0], [64.7, 1141.0], [64.8, 1141.0], [64.9, 1141.0], [65.0, 1141.0], [65.1, 1148.0], [65.2, 1148.0], [65.3, 1148.0], [65.4, 1149.0], [65.5, 1149.0], [65.6, 1149.0], [65.7, 1151.0], [65.8, 1151.0], [65.9, 1151.0], [66.0, 1151.0], [66.1, 1160.0], [66.2, 1160.0], [66.3, 1160.0], [66.4, 1163.0], [66.5, 1163.0], [66.6, 1163.0], [66.7, 1163.0], [66.8, 1163.0], [66.9, 1163.0], [67.0, 1163.0], [67.1, 1168.0], [67.2, 1168.0], [67.3, 1168.0], [67.4, 1171.0], [67.5, 1171.0], [67.6, 1171.0], [67.7, 1175.0], [67.8, 1175.0], [67.9, 1175.0], [68.0, 1175.0], [68.1, 1180.0], [68.2, 1180.0], [68.3, 1180.0], [68.4, 1198.0], [68.5, 1198.0], [68.6, 1198.0], [68.7, 1204.0], [68.8, 1204.0], [68.9, 1204.0], [69.0, 1204.0], [69.1, 1216.0], [69.2, 1216.0], [69.3, 1216.0], [69.4, 1242.0], [69.5, 1242.0], [69.6, 1242.0], [69.7, 1244.0], [69.8, 1244.0], [69.9, 1244.0], [70.0, 1244.0], [70.1, 1257.0], [70.2, 1257.0], [70.3, 1257.0], [70.4, 1262.0], [70.5, 1262.0], [70.6, 1262.0], [70.7, 1275.0], [70.8, 1275.0], [70.9, 1275.0], [71.0, 1275.0], [71.1, 1295.0], [71.2, 1295.0], [71.3, 1295.0], [71.4, 1301.0], [71.5, 1301.0], [71.6, 1301.0], [71.7, 1307.0], [71.8, 1307.0], [71.9, 1307.0], [72.0, 1307.0], [72.1, 1309.0], [72.2, 1309.0], [72.3, 1309.0], [72.4, 1316.0], [72.5, 1316.0], [72.6, 1316.0], [72.7, 1330.0], [72.8, 1330.0], [72.9, 1330.0], [73.0, 1330.0], [73.1, 1334.0], [73.2, 1334.0], [73.3, 1334.0], [73.4, 1342.0], [73.5, 1342.0], [73.6, 1342.0], [73.7, 1354.0], [73.8, 1354.0], [73.9, 1354.0], [74.0, 1354.0], [74.1, 1356.0], [74.2, 1356.0], [74.3, 1356.0], [74.4, 1371.0], [74.5, 1371.0], [74.6, 1371.0], [74.7, 1380.0], [74.8, 1380.0], [74.9, 1380.0], [75.0, 1380.0], [75.1, 1413.0], [75.2, 1413.0], [75.3, 1413.0], [75.4, 1414.0], [75.5, 1414.0], [75.6, 1414.0], [75.7, 1420.0], [75.8, 1420.0], [75.9, 1420.0], [76.0, 1426.0], [76.1, 1426.0], [76.2, 1426.0], [76.3, 1426.0], [76.4, 1450.0], [76.5, 1450.0], [76.6, 1450.0], [76.7, 1451.0], [76.8, 1451.0], [76.9, 1451.0], [77.0, 1459.0], [77.1, 1459.0], [77.2, 1459.0], [77.3, 1459.0], [77.4, 1461.0], [77.5, 1461.0], [77.6, 1461.0], [77.7, 1471.0], [77.8, 1471.0], [77.9, 1471.0], [78.0, 1478.0], [78.1, 1478.0], [78.2, 1478.0], [78.3, 1478.0], [78.4, 1487.0], [78.5, 1487.0], [78.6, 1487.0], [78.7, 1489.0], [78.8, 1489.0], [78.9, 1489.0], [79.0, 1492.0], [79.1, 1492.0], [79.2, 1492.0], [79.3, 1492.0], [79.4, 1529.0], [79.5, 1529.0], [79.6, 1529.0], [79.7, 1573.0], [79.8, 1573.0], [79.9, 1573.0], [80.0, 1584.0], [80.1, 1584.0], [80.2, 1584.0], [80.3, 1584.0], [80.4, 1593.0], [80.5, 1593.0], [80.6, 1593.0], [80.7, 1607.0], [80.8, 1607.0], [80.9, 1607.0], [81.0, 1627.0], [81.1, 1627.0], [81.2, 1627.0], [81.3, 1627.0], [81.4, 1672.0], [81.5, 1672.0], [81.6, 1672.0], [81.7, 1682.0], [81.8, 1682.0], [81.9, 1682.0], [82.0, 1683.0], [82.1, 1683.0], [82.2, 1683.0], [82.3, 1683.0], [82.4, 1687.0], [82.5, 1687.0], [82.6, 1687.0], [82.7, 1719.0], [82.8, 1719.0], [82.9, 1719.0], [83.0, 1726.0], [83.1, 1726.0], [83.2, 1726.0], [83.3, 1726.0], [83.4, 1729.0], [83.5, 1729.0], [83.6, 1729.0], [83.7, 1734.0], [83.8, 1734.0], [83.9, 1734.0], [84.0, 1736.0], [84.1, 1736.0], [84.2, 1736.0], [84.3, 1736.0], [84.4, 1748.0], [84.5, 1748.0], [84.6, 1748.0], [84.7, 1762.0], [84.8, 1762.0], [84.9, 1762.0], [85.0, 1781.0], [85.1, 1781.0], [85.2, 1781.0], [85.3, 1781.0], [85.4, 1789.0], [85.5, 1789.0], [85.6, 1789.0], [85.7, 1792.0], [85.8, 1792.0], [85.9, 1792.0], [86.0, 1802.0], [86.1, 1802.0], [86.2, 1802.0], [86.3, 1802.0], [86.4, 1802.0], [86.5, 1802.0], [86.6, 1802.0], [86.7, 1803.0], [86.8, 1803.0], [86.9, 1803.0], [87.0, 1803.0], [87.1, 1803.0], [87.2, 1803.0], [87.3, 1803.0], [87.4, 1849.0], [87.5, 1849.0], [87.6, 1849.0], [87.7, 1855.0], [87.8, 1855.0], [87.9, 1855.0], [88.0, 1859.0], [88.1, 1859.0], [88.2, 1859.0], [88.3, 1859.0], [88.4, 1866.0], [88.5, 1866.0], [88.6, 1866.0], [88.7, 1881.0], [88.8, 1881.0], [88.9, 1881.0], [89.0, 1916.0], [89.1, 1916.0], [89.2, 1916.0], [89.3, 1916.0], [89.4, 2024.0], [89.5, 2024.0], [89.6, 2024.0], [89.7, 2063.0], [89.8, 2063.0], [89.9, 2063.0], [90.0, 2068.0], [90.1, 2068.0], [90.2, 2068.0], [90.3, 2068.0], [90.4, 2069.0], [90.5, 2069.0], [90.6, 2069.0], [90.7, 2069.0], [90.8, 2069.0], [90.9, 2069.0], [91.0, 2070.0], [91.1, 2070.0], [91.2, 2070.0], [91.3, 2070.0], [91.4, 2115.0], [91.5, 2115.0], [91.6, 2115.0], [91.7, 2121.0], [91.8, 2121.0], [91.9, 2121.0], [92.0, 2127.0], [92.1, 2127.0], [92.2, 2127.0], [92.3, 2127.0], [92.4, 2128.0], [92.5, 2128.0], [92.6, 2128.0], [92.7, 2136.0], [92.8, 2136.0], [92.9, 2136.0], [93.0, 2142.0], [93.1, 2142.0], [93.2, 2142.0], [93.3, 2142.0], [93.4, 2147.0], [93.5, 2147.0], [93.6, 2147.0], [93.7, 2148.0], [93.8, 2148.0], [93.9, 2148.0], [94.0, 2148.0], [94.1, 2148.0], [94.2, 2148.0], [94.3, 2148.0], [94.4, 2168.0], [94.5, 2168.0], [94.6, 2168.0], [94.7, 2176.0], [94.8, 2176.0], [94.9, 2176.0], [95.0, 2195.0], [95.1, 2195.0], [95.2, 2195.0], [95.3, 2195.0], [95.4, 2212.0], [95.5, 2212.0], [95.6, 2212.0], [95.7, 2225.0], [95.8, 2225.0], [95.9, 2225.0], [96.0, 2234.0], [96.1, 2234.0], [96.2, 2234.0], [96.3, 2234.0], [96.4, 2241.0], [96.5, 2241.0], [96.6, 2241.0], [96.7, 2247.0], [96.8, 2247.0], [96.9, 2247.0], [97.0, 2278.0], [97.1, 2278.0], [97.2, 2278.0], [97.3, 2278.0], [97.4, 2292.0], [97.5, 2292.0], [97.6, 2292.0], [97.7, 2323.0], [97.8, 2323.0], [97.9, 2323.0], [98.0, 2334.0], [98.1, 2334.0], [98.2, 2334.0], [98.3, 2334.0], [98.4, 2373.0], [98.5, 2373.0], [98.6, 2373.0], [98.7, 3597.0], [98.8, 3597.0], [98.9, 3597.0], [99.0, 3782.0], [99.1, 3782.0], [99.2, 3782.0], [99.3, 3782.0], [99.4, 3997.0], [99.5, 3997.0], [99.6, 3997.0], [99.7, 6375.0], [99.8, 6375.0], [99.9, 6375.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[0.0, 4.0], [0.1, 4.0], [0.2, 7.0], [0.3, 11.0], [0.4, 12.0], [0.5, 18.0], [0.6, 20.0], [0.7, 21.0], [0.8, 22.0], [0.9, 25.0], [1.0, 25.0], [1.1, 28.0], [1.2, 28.0], [1.3, 30.0], [1.4, 31.0], [1.5, 31.0], [1.6, 31.0], [1.7, 32.0], [1.8, 33.0], [1.9, 35.0], [2.0, 35.0], [2.1, 35.0], [2.2, 37.0], [2.3, 37.0], [2.4, 37.0], [2.5, 38.0], [2.6, 38.0], [2.7, 39.0], [2.8, 39.0], [2.9, 39.0], [3.0, 39.0], [3.1, 41.0], [3.2, 44.0], [3.3, 44.0], [3.4, 44.0], [3.5, 45.0], [3.6, 47.0], [3.7, 48.0], [3.8, 48.0], [3.9, 49.0], [4.0, 49.0], [4.1, 49.0], [4.2, 50.0], [4.3, 50.0], [4.4, 50.0], [4.5, 51.0], [4.6, 51.0], [4.7, 51.0], [4.8, 53.0], [4.9, 54.0], [5.0, 55.0], [5.1, 55.0], [5.2, 55.0], [5.3, 56.0], [5.4, 57.0], [5.5, 57.0], [5.6, 58.0], [5.7, 59.0], [5.8, 59.0], [5.9, 59.0], [6.0, 59.0], [6.1, 59.0], [6.2, 61.0], [6.3, 61.0], [6.4, 61.0], [6.5, 61.0], [6.6, 62.0], [6.7, 62.0], [6.8, 62.0], [6.9, 62.0], [7.0, 64.0], [7.1, 64.0], [7.2, 64.0], [7.3, 65.0], [7.4, 65.0], [7.5, 67.0], [7.6, 67.0], [7.7, 68.0], [7.8, 68.0], [7.9, 68.0], [8.0, 69.0], [8.1, 69.0], [8.2, 69.0], [8.3, 69.0], [8.4, 70.0], [8.5, 70.0], [8.6, 71.0], [8.7, 72.0], [8.8, 72.0], [8.9, 72.0], [9.0, 73.0], [9.1, 73.0], [9.2, 73.0], [9.3, 73.0], [9.4, 74.0], [9.5, 74.0], [9.6, 75.0], [9.7, 76.0], [9.8, 76.0], [9.9, 76.0], [10.0, 77.0], [10.1, 77.0], [10.2, 79.0], [10.3, 79.0], [10.4, 80.0], [10.5, 80.0], [10.6, 80.0], [10.7, 81.0], [10.8, 82.0], [10.9, 82.0], [11.0, 82.0], [11.1, 82.0], [11.2, 82.0], [11.3, 82.0], [11.4, 84.0], [11.5, 84.0], [11.6, 86.0], [11.7, 86.0], [11.8, 87.0], [11.9, 87.0], [12.0, 87.0], [12.1, 87.0], [12.2, 88.0], [12.3, 88.0], [12.4, 89.0], [12.5, 89.0], [12.6, 89.0], [12.7, 89.0], [12.8, 90.0], [12.9, 90.0], [13.0, 90.0], [13.1, 90.0], [13.2, 90.0], [13.3, 91.0], [13.4, 93.0], [13.5, 93.0], [13.6, 94.0], [13.7, 94.0], [13.8, 95.0], [13.9, 96.0], [14.0, 97.0], [14.1, 97.0], [14.2, 97.0], [14.3, 97.0], [14.4, 98.0], [14.5, 98.0], [14.6, 98.0], [14.7, 100.0], [14.8, 100.0], [14.9, 100.0], [15.0, 101.0], [15.1, 101.0], [15.2, 101.0], [15.3, 103.0], [15.4, 103.0], [15.5, 104.0], [15.6, 105.0], [15.7, 105.0], [15.8, 105.0], [15.9, 106.0], [16.0, 106.0], [16.1, 106.0], [16.2, 107.0], [16.3, 107.0], [16.4, 107.0], [16.5, 108.0], [16.6, 108.0], [16.7, 108.0], [16.8, 110.0], [16.9, 110.0], [17.0, 111.0], [17.1, 111.0], [17.2, 111.0], [17.3, 112.0], [17.4, 113.0], [17.5, 113.0], [17.6, 113.0], [17.7, 113.0], [17.8, 114.0], [17.9, 115.0], [18.0, 115.0], [18.1, 115.0], [18.2, 117.0], [18.3, 117.0], [18.4, 117.0], [18.5, 117.0], [18.6, 118.0], [18.7, 119.0], [18.8, 119.0], [18.9, 119.0], [19.0, 119.0], [19.1, 119.0], [19.2, 121.0], [19.3, 121.0], [19.4, 121.0], [19.5, 123.0], [19.6, 124.0], [19.7, 125.0], [19.8, 125.0], [19.9, 126.0], [20.0, 127.0], [20.1, 127.0], [20.2, 128.0], [20.3, 129.0], [20.4, 131.0], [20.5, 131.0], [20.6, 132.0], [20.7, 133.0], [20.8, 135.0], [20.9, 136.0], [21.0, 137.0], [21.1, 137.0], [21.2, 137.0], [21.3, 138.0], [21.4, 138.0], [21.5, 138.0], [21.6, 139.0], [21.7, 141.0], [21.8, 141.0], [21.9, 142.0], [22.0, 142.0], [22.1, 142.0], [22.2, 144.0], [22.3, 144.0], [22.4, 144.0], [22.5, 144.0], [22.6, 145.0], [22.7, 145.0], [22.8, 145.0], [22.9, 146.0], [23.0, 146.0], [23.1, 146.0], [23.2, 148.0], [23.3, 149.0], [23.4, 149.0], [23.5, 150.0], [23.6, 151.0], [23.7, 155.0], [23.8, 156.0], [23.9, 156.0], [24.0, 157.0], [24.1, 157.0], [24.2, 158.0], [24.3, 158.0], [24.4, 159.0], [24.5, 161.0], [24.6, 162.0], [24.7, 163.0], [24.8, 163.0], [24.9, 164.0], [25.0, 164.0], [25.1, 164.0], [25.2, 166.0], [25.3, 166.0], [25.4, 167.0], [25.5, 167.0], [25.6, 167.0], [25.7, 169.0], [25.8, 170.0], [25.9, 172.0], [26.0, 172.0], [26.1, 172.0], [26.2, 174.0], [26.3, 174.0], [26.4, 177.0], [26.5, 178.0], [26.6, 179.0], [26.7, 181.0], [26.8, 185.0], [26.9, 185.0], [27.0, 185.0], [27.1, 185.0], [27.2, 186.0], [27.3, 186.0], [27.4, 188.0], [27.5, 188.0], [27.6, 189.0], [27.7, 190.0], [27.8, 190.0], [27.9, 190.0], [28.0, 191.0], [28.1, 191.0], [28.2, 192.0], [28.3, 193.0], [28.4, 193.0], [28.5, 194.0], [28.6, 195.0], [28.7, 195.0], [28.8, 195.0], [28.9, 196.0], [29.0, 198.0], [29.1, 198.0], [29.2, 199.0], [29.3, 200.0], [29.4, 200.0], [29.5, 204.0], [29.6, 204.0], [29.7, 205.0], [29.8, 206.0], [29.9, 208.0], [30.0, 209.0], [30.1, 209.0], [30.2, 211.0], [30.3, 212.0], [30.4, 214.0], [30.5, 214.0], [30.6, 216.0], [30.7, 217.0], [30.8, 218.0], [30.9, 219.0], [31.0, 221.0], [31.1, 221.0], [31.2, 223.0], [31.3, 225.0], [31.4, 227.0], [31.5, 228.0], [31.6, 228.0], [31.7, 232.0], [31.8, 234.0], [31.9, 236.0], [32.0, 236.0], [32.1, 236.0], [32.2, 237.0], [32.3, 237.0], [32.4, 237.0], [32.5, 240.0], [32.6, 243.0], [32.7, 246.0], [32.8, 248.0], [32.9, 248.0], [33.0, 250.0], [33.1, 250.0], [33.2, 250.0], [33.3, 251.0], [33.4, 257.0], [33.5, 257.0], [33.6, 259.0], [33.7, 259.0], [33.8, 259.0], [33.9, 262.0], [34.0, 263.0], [34.1, 263.0], [34.2, 266.0], [34.3, 268.0], [34.4, 271.0], [34.5, 274.0], [34.6, 280.0], [34.7, 282.0], [34.8, 282.0], [34.9, 282.0], [35.0, 283.0], [35.1, 283.0], [35.2, 285.0], [35.3, 287.0], [35.4, 291.0], [35.5, 291.0], [35.6, 292.0], [35.7, 293.0], [35.8, 295.0], [35.9, 302.0], [36.0, 305.0], [36.1, 305.0], [36.2, 306.0], [36.3, 307.0], [36.4, 307.0], [36.5, 311.0], [36.6, 314.0], [36.7, 319.0], [36.8, 319.0], [36.9, 320.0], [37.0, 320.0], [37.1, 321.0], [37.2, 326.0], [37.3, 326.0], [37.4, 327.0], [37.5, 327.0], [37.6, 329.0], [37.7, 331.0], [37.8, 338.0], [37.9, 339.0], [38.0, 339.0], [38.1, 340.0], [38.2, 342.0], [38.3, 343.0], [38.4, 343.0], [38.5, 345.0], [38.6, 349.0], [38.7, 349.0], [38.8, 353.0], [38.9, 353.0], [39.0, 353.0], [39.1, 354.0], [39.2, 355.0], [39.3, 356.0], [39.4, 362.0], [39.5, 366.0], [39.6, 375.0], [39.7, 380.0], [39.8, 381.0], [39.9, 383.0], [40.0, 383.0], [40.1, 384.0], [40.2, 387.0], [40.3, 392.0], [40.4, 392.0], [40.5, 394.0], [40.6, 398.0], [40.7, 402.0], [40.8, 404.0], [40.9, 408.0], [41.0, 408.0], [41.1, 410.0], [41.2, 410.0], [41.3, 415.0], [41.4, 417.0], [41.5, 419.0], [41.6, 420.0], [41.7, 420.0], [41.8, 422.0], [41.9, 423.0], [42.0, 423.0], [42.1, 423.0], [42.2, 424.0], [42.3, 425.0], [42.4, 425.0], [42.5, 427.0], [42.6, 427.0], [42.7, 428.0], [42.8, 436.0], [42.9, 437.0], [43.0, 437.0], [43.1, 437.0], [43.2, 438.0], [43.3, 439.0], [43.4, 440.0], [43.5, 441.0], [43.6, 442.0], [43.7, 442.0], [43.8, 451.0], [43.9, 454.0], [44.0, 454.0], [44.1, 459.0], [44.2, 460.0], [44.3, 461.0], [44.4, 462.0], [44.5, 466.0], [44.6, 469.0], [44.7, 470.0], [44.8, 470.0], [44.9, 473.0], [45.0, 473.0], [45.1, 473.0], [45.2, 474.0], [45.3, 477.0], [45.4, 479.0], [45.5, 481.0], [45.6, 482.0], [45.7, 483.0], [45.8, 485.0], [45.9, 487.0], [46.0, 487.0], [46.1, 488.0], [46.2, 489.0], [46.3, 490.0], [46.4, 494.0], [46.5, 496.0], [46.6, 496.0], [46.7, 499.0], [46.8, 502.0], [46.9, 502.0], [47.0, 502.0], [47.1, 505.0], [47.2, 511.0], [47.3, 512.0], [47.4, 515.0], [47.5, 516.0], [47.6, 516.0], [47.7, 518.0], [47.8, 518.0], [47.9, 520.0], [48.0, 520.0], [48.1, 520.0], [48.2, 521.0], [48.3, 521.0], [48.4, 522.0], [48.5, 524.0], [48.6, 526.0], [48.7, 526.0], [48.8, 526.0], [48.9, 527.0], [49.0, 527.0], [49.1, 528.0], [49.2, 532.0], [49.3, 537.0], [49.4, 537.0], [49.5, 537.0], [49.6, 537.0], [49.7, 541.0], [49.8, 543.0], [49.9, 543.0], [50.0, 543.0], [50.1, 544.0], [50.2, 545.0], [50.3, 546.0], [50.4, 546.0], [50.5, 547.0], [50.6, 550.0], [50.7, 551.0], [50.8, 553.0], [50.9, 555.0], [51.0, 555.0], [51.1, 559.0], [51.2, 560.0], [51.3, 561.0], [51.4, 565.0], [51.5, 568.0], [51.6, 569.0], [51.7, 572.0], [51.8, 573.0], [51.9, 573.0], [52.0, 573.0], [52.1, 573.0], [52.2, 574.0], [52.3, 574.0], [52.4, 576.0], [52.5, 576.0], [52.6, 576.0], [52.7, 577.0], [52.8, 578.0], [52.9, 582.0], [53.0, 582.0], [53.1, 583.0], [53.2, 586.0], [53.3, 586.0], [53.4, 586.0], [53.5, 588.0], [53.6, 589.0], [53.7, 592.0], [53.8, 593.0], [53.9, 594.0], [54.0, 594.0], [54.1, 596.0], [54.2, 597.0], [54.3, 598.0], [54.4, 599.0], [54.5, 605.0], [54.6, 606.0], [54.7, 609.0], [54.8, 611.0], [54.9, 611.0], [55.0, 611.0], [55.1, 614.0], [55.2, 616.0], [55.3, 617.0], [55.4, 619.0], [55.5, 619.0], [55.6, 624.0], [55.7, 625.0], [55.8, 627.0], [55.9, 632.0], [56.0, 632.0], [56.1, 632.0], [56.2, 635.0], [56.3, 638.0], [56.4, 641.0], [56.5, 647.0], [56.6, 650.0], [56.7, 651.0], [56.8, 652.0], [56.9, 662.0], [57.0, 662.0], [57.1, 662.0], [57.2, 665.0], [57.3, 668.0], [57.4, 669.0], [57.5, 671.0], [57.6, 672.0], [57.7, 673.0], [57.8, 675.0], [57.9, 675.0], [58.0, 675.0], [58.1, 676.0], [58.2, 677.0], [58.3, 677.0], [58.4, 678.0], [58.5, 679.0], [58.6, 684.0], [58.7, 685.0], [58.8, 688.0], [58.9, 689.0], [59.0, 689.0], [59.1, 692.0], [59.2, 692.0], [59.3, 693.0], [59.4, 693.0], [59.5, 694.0], [59.6, 694.0], [59.7, 695.0], [59.8, 695.0], [59.9, 697.0], [60.0, 697.0], [60.1, 698.0], [60.2, 703.0], [60.3, 703.0], [60.4, 703.0], [60.5, 705.0], [60.6, 706.0], [60.7, 707.0], [60.8, 707.0], [60.9, 708.0], [61.0, 708.0], [61.1, 712.0], [61.2, 713.0], [61.3, 715.0], [61.4, 716.0], [61.5, 716.0], [61.6, 717.0], [61.7, 722.0], [61.8, 724.0], [61.9, 725.0], [62.0, 725.0], [62.1, 726.0], [62.2, 732.0], [62.3, 734.0], [62.4, 735.0], [62.5, 735.0], [62.6, 739.0], [62.7, 739.0], [62.8, 740.0], [62.9, 740.0], [63.0, 740.0], [63.1, 740.0], [63.2, 742.0], [63.3, 745.0], [63.4, 746.0], [63.5, 750.0], [63.6, 751.0], [63.7, 752.0], [63.8, 752.0], [63.9, 752.0], [64.0, 752.0], [64.1, 753.0], [64.2, 753.0], [64.3, 756.0], [64.4, 758.0], [64.5, 760.0], [64.6, 762.0], [64.7, 764.0], [64.8, 766.0], [64.9, 769.0], [65.0, 769.0], [65.1, 770.0], [65.2, 774.0], [65.3, 776.0], [65.4, 780.0], [65.5, 780.0], [65.6, 781.0], [65.7, 782.0], [65.8, 784.0], [65.9, 785.0], [66.0, 785.0], [66.1, 787.0], [66.2, 787.0], [66.3, 791.0], [66.4, 797.0], [66.5, 797.0], [66.6, 798.0], [66.7, 801.0], [66.8, 802.0], [66.9, 802.0], [67.0, 802.0], [67.1, 803.0], [67.2, 807.0], [67.3, 810.0], [67.4, 817.0], [67.5, 820.0], [67.6, 821.0], [67.7, 829.0], [67.8, 830.0], [67.9, 831.0], [68.0, 831.0], [68.1, 835.0], [68.2, 838.0], [68.3, 846.0], [68.4, 849.0], [68.5, 852.0], [68.6, 855.0], [68.7, 856.0], [68.8, 856.0], [68.9, 859.0], [69.0, 859.0], [69.1, 862.0], [69.2, 863.0], [69.3, 866.0], [69.4, 867.0], [69.5, 868.0], [69.6, 871.0], [69.7, 871.0], [69.8, 873.0], [69.9, 875.0], [70.0, 875.0], [70.1, 879.0], [70.2, 885.0], [70.3, 886.0], [70.4, 887.0], [70.5, 888.0], [70.6, 890.0], [70.7, 890.0], [70.8, 893.0], [70.9, 894.0], [71.0, 894.0], [71.1, 896.0], [71.2, 896.0], [71.3, 899.0], [71.4, 900.0], [71.5, 901.0], [71.6, 905.0], [71.7, 905.0], [71.8, 907.0], [71.9, 907.0], [72.0, 907.0], [72.1, 909.0], [72.2, 912.0], [72.3, 912.0], [72.4, 913.0], [72.5, 913.0], [72.6, 913.0], [72.7, 913.0], [72.8, 915.0], [72.9, 916.0], [73.0, 916.0], [73.1, 917.0], [73.2, 918.0], [73.3, 922.0], [73.4, 927.0], [73.5, 928.0], [73.6, 929.0], [73.7, 931.0], [73.8, 934.0], [73.9, 936.0], [74.0, 936.0], [74.1, 936.0], [74.2, 942.0], [74.3, 944.0], [74.4, 945.0], [74.5, 946.0], [74.6, 948.0], [74.7, 949.0], [74.8, 950.0], [74.9, 954.0], [75.0, 954.0], [75.1, 955.0], [75.2, 958.0], [75.3, 960.0], [75.4, 967.0], [75.5, 969.0], [75.6, 970.0], [75.7, 970.0], [75.8, 974.0], [75.9, 974.0], [76.0, 974.0], [76.1, 976.0], [76.2, 976.0], [76.3, 976.0], [76.4, 977.0], [76.5, 979.0], [76.6, 979.0], [76.7, 981.0], [76.8, 982.0], [76.9, 983.0], [77.0, 983.0], [77.1, 986.0], [77.2, 986.0], [77.3, 987.0], [77.4, 987.0], [77.5, 991.0], [77.6, 992.0], [77.7, 993.0], [77.8, 998.0], [77.9, 1004.0], [78.0, 1004.0], [78.1, 1005.0], [78.2, 1005.0], [78.3, 1007.0], [78.4, 1010.0], [78.5, 1011.0], [78.6, 1011.0], [78.7, 1015.0], [78.8, 1019.0], [78.9, 1020.0], [79.0, 1020.0], [79.1, 1021.0], [79.2, 1021.0], [79.3, 1022.0], [79.4, 1024.0], [79.5, 1024.0], [79.6, 1027.0], [79.7, 1028.0], [79.8, 1032.0], [79.9, 1040.0], [80.0, 1040.0], [80.1, 1040.0], [80.2, 1041.0], [80.3, 1044.0], [80.4, 1046.0], [80.5, 1047.0], [80.6, 1048.0], [80.7, 1051.0], [80.8, 1054.0], [80.9, 1056.0], [81.0, 1056.0], [81.1, 1057.0], [81.2, 1057.0], [81.3, 1057.0], [81.4, 1059.0], [81.5, 1060.0], [81.6, 1064.0], [81.7, 1065.0], [81.8, 1068.0], [81.9, 1068.0], [82.0, 1068.0], [82.1, 1072.0], [82.2, 1073.0], [82.3, 1076.0], [82.4, 1079.0], [82.5, 1083.0], [82.6, 1084.0], [82.7, 1085.0], [82.8, 1086.0], [82.9, 1087.0], [83.0, 1087.0], [83.1, 1088.0], [83.2, 1089.0], [83.3, 1090.0], [83.4, 1091.0], [83.5, 1091.0], [83.6, 1093.0], [83.7, 1094.0], [83.8, 1098.0], [83.9, 1100.0], [84.0, 1100.0], [84.1, 1102.0], [84.2, 1103.0], [84.3, 1105.0], [84.4, 1105.0], [84.5, 1106.0], [84.6, 1107.0], [84.7, 1107.0], [84.8, 1107.0], [84.9, 1108.0], [85.0, 1108.0], [85.1, 1110.0], [85.2, 1111.0], [85.3, 1116.0], [85.4, 1124.0], [85.5, 1124.0], [85.6, 1125.0], [85.7, 1130.0], [85.8, 1133.0], [85.9, 1134.0], [86.0, 1134.0], [86.1, 1137.0], [86.2, 1142.0], [86.3, 1144.0], [86.4, 1144.0], [86.5, 1145.0], [86.6, 1145.0], [86.7, 1147.0], [86.8, 1152.0], [86.9, 1152.0], [87.0, 1152.0], [87.1, 1160.0], [87.2, 1168.0], [87.3, 1171.0], [87.4, 1176.0], [87.5, 1179.0], [87.6, 1180.0], [87.7, 1191.0], [87.8, 1193.0], [87.9, 1194.0], [88.0, 1194.0], [88.1, 1196.0], [88.2, 1197.0], [88.3, 1208.0], [88.4, 1208.0], [88.5, 1211.0], [88.6, 1214.0], [88.7, 1214.0], [88.8, 1219.0], [88.9, 1222.0], [89.0, 1222.0], [89.1, 1223.0], [89.2, 1223.0], [89.3, 1224.0], [89.4, 1225.0], [89.5, 1239.0], [89.6, 1241.0], [89.7, 1242.0], [89.8, 1244.0], [89.9, 1247.0], [90.0, 1247.0], [90.1, 1249.0], [90.2, 1251.0], [90.3, 1262.0], [90.4, 1275.0], [90.5, 1276.0], [90.6, 1277.0], [90.7, 1277.0], [90.8, 1282.0], [90.9, 1283.0], [91.0, 1283.0], [91.1, 1284.0], [91.2, 1284.0], [91.3, 1285.0], [91.4, 1290.0], [91.5, 1294.0], [91.6, 1298.0], [91.7, 1302.0], [91.8, 1307.0], [91.9, 1307.0], [92.0, 1307.0], [92.1, 1312.0], [92.2, 1317.0], [92.3, 1319.0], [92.4, 1322.0], [92.5, 1329.0], [92.6, 1331.0], [92.7, 1334.0], [92.8, 1339.0], [92.9, 1341.0], [93.0, 1341.0], [93.1, 1342.0], [93.2, 1350.0], [93.3, 1353.0], [93.4, 1357.0], [93.5, 1366.0], [93.6, 1373.0], [93.7, 1374.0], [93.8, 1385.0], [93.9, 1387.0], [94.0, 1387.0], [94.1, 1390.0], [94.2, 1391.0], [94.3, 1397.0], [94.4, 1415.0], [94.5, 1415.0], [94.6, 1419.0], [94.7, 1434.0], [94.8, 1434.0], [94.9, 1441.0], [95.0, 1441.0], [95.1, 1442.0], [95.2, 1446.0], [95.3, 1457.0], [95.4, 1460.0], [95.5, 1464.0], [95.6, 1477.0], [95.7, 1484.0], [95.8, 1487.0], [95.9, 1501.0], [96.0, 1501.0], [96.1, 1502.0], [96.2, 1502.0], [96.3, 1517.0], [96.4, 1526.0], [96.5, 1547.0], [96.6, 1560.0], [96.7, 1566.0], [96.8, 1569.0], [96.9, 1588.0], [97.0, 1588.0], [97.1, 1732.0], [97.2, 1743.0], [97.3, 1748.0], [97.4, 1775.0], [97.5, 1811.0], [97.6, 1872.0], [97.7, 1921.0], [97.8, 1942.0], [97.9, 1948.0], [98.0, 1948.0], [98.1, 1964.0], [98.2, 1975.0], [98.3, 1994.0], [98.4, 2037.0], [98.5, 2079.0], [98.6, 2123.0], [98.7, 2127.0], [98.8, 2130.0], [98.9, 2137.0], [99.0, 2137.0], [99.1, 2227.0], [99.2, 2236.0], [99.3, 2259.0], [99.4, 2480.0], [99.5, 2622.0], [99.6, 2879.0], [99.7, 2952.0], [99.8, 3057.0], [99.9, 3194.0], [100.0, 3194.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 4.0], [0.1, 4.0], [0.2, 8.0], [0.3, 10.0], [0.4, 12.0], [0.5, 12.0], [0.6, 12.0], [0.7, 19.0], [0.8, 20.0], [0.9, 21.0], [1.0, 21.0], [1.1, 21.0], [1.2, 21.0], [1.3, 22.0], [1.4, 26.0], [1.5, 26.0], [1.6, 30.0], [1.7, 34.0], [1.8, 35.0], [1.9, 37.0], [2.0, 41.0], [2.1, 41.0], [2.2, 42.0], [2.3, 42.0], [2.4, 43.0], [2.5, 44.0], [2.6, 46.0], [2.7, 46.0], [2.8, 48.0], [2.9, 49.0], [3.0, 49.0], [3.1, 50.0], [3.2, 52.0], [3.3, 52.0], [3.4, 53.0], [3.5, 54.0], [3.6, 54.0], [3.7, 54.0], [3.8, 55.0], [3.9, 55.0], [4.0, 55.0], [4.1, 56.0], [4.2, 57.0], [4.3, 58.0], [4.4, 59.0], [4.5, 60.0], [4.6, 60.0], [4.7, 60.0], [4.8, 62.0], [4.9, 62.0], [5.0, 62.0], [5.1, 62.0], [5.2, 63.0], [5.3, 64.0], [5.4, 65.0], [5.5, 66.0], [5.6, 67.0], [5.7, 68.0], [5.8, 70.0], [5.9, 70.0], [6.0, 71.0], [6.1, 71.0], [6.2, 74.0], [6.3, 76.0], [6.4, 77.0], [6.5, 80.0], [6.6, 80.0], [6.7, 81.0], [6.8, 83.0], [6.9, 84.0], [7.0, 84.0], [7.1, 84.0], [7.2, 84.0], [7.3, 84.0], [7.4, 84.0], [7.5, 85.0], [7.6, 86.0], [7.7, 86.0], [7.8, 86.0], [7.9, 87.0], [8.0, 87.0], [8.1, 87.0], [8.2, 87.0], [8.3, 87.0], [8.4, 87.0], [8.5, 87.0], [8.6, 88.0], [8.7, 89.0], [8.8, 89.0], [8.9, 92.0], [9.0, 92.0], [9.1, 92.0], [9.2, 93.0], [9.3, 94.0], [9.4, 94.0], [9.5, 94.0], [9.6, 95.0], [9.7, 95.0], [9.8, 96.0], [9.9, 97.0], [10.0, 99.0], [10.1, 99.0], [10.2, 100.0], [10.3, 102.0], [10.4, 103.0], [10.5, 104.0], [10.6, 105.0], [10.7, 105.0], [10.8, 105.0], [10.9, 108.0], [11.0, 108.0], [11.1, 108.0], [11.2, 108.0], [11.3, 108.0], [11.4, 108.0], [11.5, 108.0], [11.6, 109.0], [11.7, 114.0], [11.8, 115.0], [11.9, 116.0], [12.0, 117.0], [12.1, 117.0], [12.2, 117.0], [12.3, 118.0], [12.4, 118.0], [12.5, 119.0], [12.6, 120.0], [12.7, 121.0], [12.8, 124.0], [12.9, 124.0], [13.0, 124.0], [13.1, 124.0], [13.2, 124.0], [13.3, 125.0], [13.4, 127.0], [13.5, 128.0], [13.6, 128.0], [13.7, 129.0], [13.8, 131.0], [13.9, 131.0], [14.0, 131.0], [14.1, 131.0], [14.2, 132.0], [14.3, 133.0], [14.4, 134.0], [14.5, 134.0], [14.6, 135.0], [14.7, 136.0], [14.8, 137.0], [14.9, 137.0], [15.0, 137.0], [15.1, 137.0], [15.2, 139.0], [15.3, 139.0], [15.4, 139.0], [15.5, 140.0], [15.6, 141.0], [15.7, 141.0], [15.8, 141.0], [15.9, 143.0], [16.0, 143.0], [16.1, 143.0], [16.2, 144.0], [16.3, 149.0], [16.4, 150.0], [16.5, 150.0], [16.6, 151.0], [16.7, 152.0], [16.8, 154.0], [16.9, 154.0], [17.0, 155.0], [17.1, 155.0], [17.2, 156.0], [17.3, 157.0], [17.4, 158.0], [17.5, 160.0], [17.6, 161.0], [17.7, 161.0], [17.8, 161.0], [17.9, 163.0], [18.0, 166.0], [18.1, 166.0], [18.2, 168.0], [18.3, 168.0], [18.4, 169.0], [18.5, 172.0], [18.6, 175.0], [18.7, 183.0], [18.8, 183.0], [18.9, 184.0], [19.0, 186.0], [19.1, 186.0], [19.2, 187.0], [19.3, 193.0], [19.4, 196.0], [19.5, 199.0], [19.6, 200.0], [19.7, 200.0], [19.8, 203.0], [19.9, 205.0], [20.0, 206.0], [20.1, 206.0], [20.2, 209.0], [20.3, 211.0], [20.4, 212.0], [20.5, 213.0], [20.6, 214.0], [20.7, 215.0], [20.8, 219.0], [20.9, 219.0], [21.0, 223.0], [21.1, 223.0], [21.2, 228.0], [21.3, 228.0], [21.4, 228.0], [21.5, 228.0], [21.6, 232.0], [21.7, 237.0], [21.8, 239.0], [21.9, 240.0], [22.0, 249.0], [22.1, 249.0], [22.2, 255.0], [22.3, 261.0], [22.4, 263.0], [22.5, 269.0], [22.6, 272.0], [22.7, 274.0], [22.8, 275.0], [22.9, 277.0], [23.0, 277.0], [23.1, 277.0], [23.2, 279.0], [23.3, 279.0], [23.4, 280.0], [23.5, 280.0], [23.6, 291.0], [23.7, 293.0], [23.8, 293.0], [23.9, 296.0], [24.0, 298.0], [24.1, 298.0], [24.2, 302.0], [24.3, 304.0], [24.4, 306.0], [24.5, 311.0], [24.6, 312.0], [24.7, 313.0], [24.8, 314.0], [24.9, 316.0], [25.0, 324.0], [25.1, 324.0], [25.2, 329.0], [25.3, 334.0], [25.4, 336.0], [25.5, 337.0], [25.6, 339.0], [25.7, 342.0], [25.8, 342.0], [25.9, 346.0], [26.0, 347.0], [26.1, 347.0], [26.2, 351.0], [26.3, 352.0], [26.4, 352.0], [26.5, 357.0], [26.6, 358.0], [26.7, 361.0], [26.8, 368.0], [26.9, 375.0], [27.0, 376.0], [27.1, 376.0], [27.2, 377.0], [27.3, 382.0], [27.4, 387.0], [27.5, 390.0], [27.6, 390.0], [27.7, 398.0], [27.8, 399.0], [27.9, 403.0], [28.0, 404.0], [28.1, 404.0], [28.2, 407.0], [28.3, 408.0], [28.4, 410.0], [28.5, 412.0], [28.6, 412.0], [28.7, 421.0], [28.8, 422.0], [28.9, 423.0], [29.0, 430.0], [29.1, 430.0], [29.2, 431.0], [29.3, 431.0], [29.4, 434.0], [29.5, 435.0], [29.6, 436.0], [29.7, 437.0], [29.8, 439.0], [29.9, 442.0], [30.0, 446.0], [30.1, 446.0], [30.2, 446.0], [30.3, 447.0], [30.4, 448.0], [30.5, 449.0], [30.6, 449.0], [30.7, 449.0], [30.8, 451.0], [30.9, 454.0], [31.0, 460.0], [31.1, 460.0], [31.2, 461.0], [31.3, 461.0], [31.4, 461.0], [31.5, 463.0], [31.6, 467.0], [31.7, 469.0], [31.8, 476.0], [31.9, 479.0], [32.0, 479.0], [32.1, 479.0], [32.2, 479.0], [32.3, 479.0], [32.4, 480.0], [32.5, 483.0], [32.6, 483.0], [32.7, 483.0], [32.8, 484.0], [32.9, 484.0], [33.0, 485.0], [33.1, 485.0], [33.2, 487.0], [33.3, 493.0], [33.4, 495.0], [33.5, 495.0], [33.6, 499.0], [33.7, 505.0], [33.8, 506.0], [33.9, 507.0], [34.0, 512.0], [34.1, 512.0], [34.2, 516.0], [34.3, 516.0], [34.4, 519.0], [34.5, 523.0], [34.6, 527.0], [34.7, 529.0], [34.8, 533.0], [34.9, 534.0], [35.0, 535.0], [35.1, 535.0], [35.2, 538.0], [35.3, 540.0], [35.4, 540.0], [35.5, 542.0], [35.6, 546.0], [35.7, 548.0], [35.8, 550.0], [35.9, 551.0], [36.0, 551.0], [36.1, 551.0], [36.2, 553.0], [36.3, 557.0], [36.4, 559.0], [36.5, 559.0], [36.6, 560.0], [36.7, 560.0], [36.8, 560.0], [36.9, 562.0], [37.0, 566.0], [37.1, 566.0], [37.2, 566.0], [37.3, 566.0], [37.4, 567.0], [37.5, 567.0], [37.6, 569.0], [37.7, 572.0], [37.8, 574.0], [37.9, 578.0], [38.0, 578.0], [38.1, 582.0], [38.2, 583.0], [38.3, 584.0], [38.4, 586.0], [38.5, 588.0], [38.6, 590.0], [38.7, 591.0], [38.8, 592.0], [38.9, 595.0], [39.0, 595.0], [39.1, 596.0], [39.2, 602.0], [39.3, 605.0], [39.4, 605.0], [39.5, 607.0], [39.6, 607.0], [39.7, 609.0], [39.8, 611.0], [39.9, 611.0], [40.0, 611.0], [40.1, 611.0], [40.2, 611.0], [40.3, 612.0], [40.4, 612.0], [40.5, 612.0], [40.6, 615.0], [40.7, 616.0], [40.8, 617.0], [40.9, 627.0], [41.0, 627.0], [41.1, 633.0], [41.2, 638.0], [41.3, 643.0], [41.4, 644.0], [41.5, 644.0], [41.6, 645.0], [41.7, 648.0], [41.8, 651.0], [41.9, 653.0], [42.0, 653.0], [42.1, 656.0], [42.2, 664.0], [42.3, 667.0], [42.4, 674.0], [42.5, 678.0], [42.6, 680.0], [42.7, 682.0], [42.8, 682.0], [42.9, 685.0], [43.0, 685.0], [43.1, 690.0], [43.2, 691.0], [43.3, 692.0], [43.4, 692.0], [43.5, 692.0], [43.6, 698.0], [43.7, 700.0], [43.8, 701.0], [43.9, 702.0], [44.0, 702.0], [44.1, 703.0], [44.2, 703.0], [44.3, 704.0], [44.4, 704.0], [44.5, 708.0], [44.6, 714.0], [44.7, 719.0], [44.8, 722.0], [44.9, 722.0], [45.0, 722.0], [45.1, 727.0], [45.2, 727.0], [45.3, 727.0], [45.4, 728.0], [45.5, 730.0], [45.6, 733.0], [45.7, 733.0], [45.8, 733.0], [45.9, 737.0], [46.0, 737.0], [46.1, 743.0], [46.2, 749.0], [46.3, 753.0], [46.4, 754.0], [46.5, 755.0], [46.6, 758.0], [46.7, 759.0], [46.8, 759.0], [46.9, 763.0], [47.0, 763.0], [47.1, 765.0], [47.2, 767.0], [47.3, 767.0], [47.4, 770.0], [47.5, 772.0], [47.6, 774.0], [47.7, 776.0], [47.8, 779.0], [47.9, 781.0], [48.0, 781.0], [48.1, 782.0], [48.2, 782.0], [48.3, 792.0], [48.4, 794.0], [48.5, 795.0], [48.6, 798.0], [48.7, 798.0], [48.8, 798.0], [48.9, 800.0], [49.0, 800.0], [49.1, 803.0], [49.2, 804.0], [49.3, 808.0], [49.4, 814.0], [49.5, 823.0], [49.6, 829.0], [49.7, 829.0], [49.8, 830.0], [49.9, 830.0], [50.0, 830.0], [50.1, 833.0], [50.2, 844.0], [50.3, 845.0], [50.4, 847.0], [50.5, 850.0], [50.6, 851.0], [50.7, 852.0], [50.8, 860.0], [50.9, 869.0], [51.0, 869.0], [51.1, 869.0], [51.2, 882.0], [51.3, 885.0], [51.4, 889.0], [51.5, 892.0], [51.6, 893.0], [51.7, 896.0], [51.8, 897.0], [51.9, 905.0], [52.0, 905.0], [52.1, 917.0], [52.2, 917.0], [52.3, 919.0], [52.4, 919.0], [52.5, 923.0], [52.6, 924.0], [52.7, 924.0], [52.8, 929.0], [52.9, 931.0], [53.0, 931.0], [53.1, 932.0], [53.2, 933.0], [53.3, 935.0], [53.4, 936.0], [53.5, 937.0], [53.6, 941.0], [53.7, 942.0], [53.8, 942.0], [53.9, 943.0], [54.0, 943.0], [54.1, 944.0], [54.2, 948.0], [54.3, 950.0], [54.4, 951.0], [54.5, 957.0], [54.6, 959.0], [54.7, 961.0], [54.8, 965.0], [54.9, 968.0], [55.0, 968.0], [55.1, 970.0], [55.2, 971.0], [55.3, 971.0], [55.4, 975.0], [55.5, 976.0], [55.6, 976.0], [55.7, 977.0], [55.8, 977.0], [55.9, 977.0], [56.0, 977.0], [56.1, 978.0], [56.2, 985.0], [56.3, 985.0], [56.4, 998.0], [56.5, 999.0], [56.6, 1006.0], [56.7, 1009.0], [56.8, 1011.0], [56.9, 1011.0], [57.0, 1011.0], [57.1, 1016.0], [57.2, 1017.0], [57.3, 1021.0], [57.4, 1025.0], [57.5, 1033.0], [57.6, 1036.0], [57.7, 1037.0], [57.8, 1039.0], [57.9, 1042.0], [58.0, 1042.0], [58.1, 1043.0], [58.2, 1043.0], [58.3, 1045.0], [58.4, 1059.0], [58.5, 1066.0], [58.6, 1067.0], [58.7, 1072.0], [58.8, 1075.0], [58.9, 1075.0], [59.0, 1075.0], [59.1, 1076.0], [59.2, 1093.0], [59.3, 1104.0], [59.4, 1105.0], [59.5, 1112.0], [59.6, 1113.0], [59.7, 1114.0], [59.8, 1114.0], [59.9, 1114.0], [60.0, 1114.0], [60.1, 1118.0], [60.2, 1124.0], [60.3, 1125.0], [60.4, 1130.0], [60.5, 1135.0], [60.6, 1139.0], [60.7, 1140.0], [60.8, 1141.0], [60.9, 1145.0], [61.0, 1145.0], [61.1, 1147.0], [61.2, 1147.0], [61.3, 1151.0], [61.4, 1152.0], [61.5, 1158.0], [61.6, 1163.0], [61.7, 1167.0], [61.8, 1167.0], [61.9, 1182.0], [62.0, 1182.0], [62.1, 1192.0], [62.2, 1194.0], [62.3, 1196.0], [62.4, 1197.0], [62.5, 1199.0], [62.6, 1202.0], [62.7, 1203.0], [62.8, 1203.0], [62.9, 1205.0], [63.0, 1205.0], [63.1, 1208.0], [63.2, 1218.0], [63.3, 1219.0], [63.4, 1225.0], [63.5, 1232.0], [63.6, 1232.0], [63.7, 1238.0], [63.8, 1241.0], [63.9, 1247.0], [64.0, 1247.0], [64.1, 1255.0], [64.2, 1257.0], [64.3, 1260.0], [64.4, 1261.0], [64.5, 1263.0], [64.6, 1280.0], [64.7, 1289.0], [64.8, 1290.0], [64.9, 1296.0], [65.0, 1296.0], [65.1, 1303.0], [65.2, 1303.0], [65.3, 1304.0], [65.4, 1306.0], [65.5, 1315.0], [65.6, 1329.0], [65.7, 1330.0], [65.8, 1332.0], [65.9, 1343.0], [66.0, 1343.0], [66.1, 1360.0], [66.2, 1374.0], [66.3, 1378.0], [66.4, 1385.0], [66.5, 1387.0], [66.6, 1394.0], [66.7, 1398.0], [66.8, 1414.0], [66.9, 1418.0], [67.0, 1418.0], [67.1, 1421.0], [67.2, 1421.0], [67.3, 1426.0], [67.4, 1427.0], [67.5, 1427.0], [67.6, 1431.0], [67.7, 1432.0], [67.8, 1434.0], [67.9, 1443.0], [68.0, 1443.0], [68.1, 1445.0], [68.2, 1448.0], [68.3, 1450.0], [68.4, 1457.0], [68.5, 1458.0], [68.6, 1463.0], [68.7, 1463.0], [68.8, 1464.0], [68.9, 1465.0], [69.0, 1465.0], [69.1, 1465.0], [69.2, 1481.0], [69.3, 1481.0], [69.4, 1492.0], [69.5, 1494.0], [69.6, 1496.0], [69.7, 1504.0], [69.8, 1507.0], [69.9, 1515.0], [70.0, 1515.0], [70.1, 1520.0], [70.2, 1528.0], [70.3, 1538.0], [70.4, 1545.0], [70.5, 1546.0], [70.6, 1547.0], [70.7, 1566.0], [70.8, 1570.0], [70.9, 1571.0], [71.0, 1571.0], [71.1, 1577.0], [71.2, 1586.0], [71.3, 1590.0], [71.4, 1598.0], [71.5, 1605.0], [71.6, 1607.0], [71.7, 1613.0], [71.8, 1620.0], [71.9, 1652.0], [72.0, 1652.0], [72.1, 1655.0], [72.2, 1664.0], [72.3, 1665.0], [72.4, 1666.0], [72.5, 1678.0], [72.6, 1681.0], [72.7, 1711.0], [72.8, 1735.0], [72.9, 1736.0], [73.0, 1736.0], [73.1, 1774.0], [73.2, 1780.0], [73.3, 1793.0], [73.4, 1820.0], [73.5, 1827.0], [73.6, 1830.0], [73.7, 1830.0], [73.8, 1846.0], [73.9, 1850.0], [74.0, 1850.0], [74.1, 1852.0], [74.2, 1854.0], [74.3, 1861.0], [74.4, 1870.0], [74.5, 1873.0], [74.6, 1880.0], [74.7, 1908.0], [74.8, 1912.0], [74.9, 1925.0], [75.0, 1925.0], [75.1, 1931.0], [75.2, 1949.0], [75.3, 1951.0], [75.4, 1952.0], [75.5, 1953.0], [75.6, 1956.0], [75.7, 1962.0], [75.8, 1967.0], [75.9, 1970.0], [76.0, 1970.0], [76.1, 1971.0], [76.2, 1976.0], [76.3, 1977.0], [76.4, 1980.0], [76.5, 1981.0], [76.6, 1982.0], [76.7, 1982.0], [76.8, 1982.0], [76.9, 1983.0], [77.0, 1983.0], [77.1, 1985.0], [77.2, 1986.0], [77.3, 1987.0], [77.4, 1987.0], [77.5, 1988.0], [77.6, 1988.0], [77.7, 1988.0], [77.8, 1988.0], [77.9, 1988.0], [78.0, 1988.0], [78.1, 1988.0], [78.2, 1988.0], [78.3, 1989.0], [78.4, 1989.0], [78.5, 1989.0], [78.6, 1991.0], [78.7, 1992.0], [78.8, 1993.0], [78.9, 1993.0], [79.0, 1993.0], [79.1, 1993.0], [79.2, 1993.0], [79.3, 1994.0], [79.4, 1994.0], [79.5, 1995.0], [79.6, 1995.0], [79.7, 1995.0], [79.8, 1995.0], [79.9, 1995.0], [80.0, 1995.0], [80.1, 2001.0], [80.2, 2002.0], [80.3, 2005.0], [80.4, 2011.0], [80.5, 2011.0], [80.6, 2016.0], [80.7, 2025.0], [80.8, 2028.0], [80.9, 2028.0], [81.0, 2028.0], [81.1, 2047.0], [81.2, 2053.0], [81.3, 2062.0], [81.4, 2064.0], [81.5, 2069.0], [81.6, 2071.0], [81.7, 2073.0], [81.8, 2101.0], [81.9, 2117.0], [82.0, 2117.0], [82.1, 2118.0], [82.2, 2120.0], [82.3, 2122.0], [82.4, 2124.0], [82.5, 2131.0], [82.6, 2143.0], [82.7, 2144.0], [82.8, 2146.0], [82.9, 2153.0], [83.0, 2153.0], [83.1, 2165.0], [83.2, 2172.0], [83.3, 2173.0], [83.4, 2177.0], [83.5, 2178.0], [83.6, 2178.0], [83.7, 2180.0], [83.8, 2180.0], [83.9, 2182.0], [84.0, 2182.0], [84.1, 2200.0], [84.2, 2204.0], [84.3, 2204.0], [84.4, 2214.0], [84.5, 2217.0], [84.6, 2225.0], [84.7, 2225.0], [84.8, 2226.0], [84.9, 2226.0], [85.0, 2226.0], [85.1, 2230.0], [85.2, 2232.0], [85.3, 2232.0], [85.4, 2236.0], [85.5, 2246.0], [85.6, 2247.0], [85.7, 2253.0], [85.8, 2255.0], [85.9, 2256.0], [86.0, 2256.0], [86.1, 2262.0], [86.2, 2264.0], [86.3, 2265.0], [86.4, 2271.0], [86.5, 2272.0], [86.6, 2275.0], [86.7, 2278.0], [86.8, 2319.0], [86.9, 2325.0], [87.0, 2325.0], [87.1, 2330.0], [87.2, 2330.0], [87.3, 2331.0], [87.4, 2338.0], [87.5, 2339.0], [87.6, 2350.0], [87.7, 2355.0], [87.8, 2356.0], [87.9, 2359.0], [88.0, 2359.0], [88.1, 2359.0], [88.2, 2361.0], [88.3, 2362.0], [88.4, 2364.0], [88.5, 2370.0], [88.6, 2372.0], [88.7, 2373.0], [88.8, 2380.0], [88.9, 2386.0], [89.0, 2386.0], [89.1, 2391.0], [89.2, 2398.0], [89.3, 2399.0], [89.4, 2404.0], [89.5, 2405.0], [89.6, 2405.0], [89.7, 2405.0], [89.8, 2410.0], [89.9, 2410.0], [90.0, 2410.0], [90.1, 2414.0], [90.2, 2420.0], [90.3, 2428.0], [90.4, 2433.0], [90.5, 2449.0], [90.6, 2450.0], [90.7, 2451.0], [90.8, 2454.0], [90.9, 2457.0], [91.0, 2457.0], [91.1, 2515.0], [91.2, 2552.0], [91.3, 2577.0], [91.4, 2578.0], [91.5, 2593.0], [91.6, 2641.0], [91.7, 2650.0], [91.8, 2659.0], [91.9, 2663.0], [92.0, 2663.0], [92.1, 2663.0], [92.2, 2671.0], [92.3, 2675.0], [92.4, 2676.0], [92.5, 2683.0], [92.6, 2689.0], [92.7, 2690.0], [92.8, 2701.0], [92.9, 2702.0], [93.0, 2702.0], [93.1, 2707.0], [93.2, 2708.0], [93.3, 2710.0], [93.4, 2717.0], [93.5, 2720.0], [93.6, 2723.0], [93.7, 2727.0], [93.8, 2733.0], [93.9, 2739.0], [94.0, 2739.0], [94.1, 2741.0], [94.2, 2742.0], [94.3, 2743.0], [94.4, 2745.0], [94.5, 2754.0], [94.6, 2759.0], [94.7, 2767.0], [94.8, 2772.0], [94.9, 2775.0], [95.0, 2775.0], [95.1, 2779.0], [95.2, 2779.0], [95.3, 2786.0], [95.4, 2791.0], [95.5, 2794.0], [95.6, 2806.0], [95.7, 2814.0], [95.8, 2823.0], [95.9, 2830.0], [96.0, 2830.0], [96.1, 2843.0], [96.2, 2846.0], [96.3, 2849.0], [96.4, 2884.0], [96.5, 2900.0], [96.6, 2936.0], [96.7, 2960.0], [96.8, 2975.0], [96.9, 2982.0], [97.0, 2982.0], [97.1, 2998.0], [97.2, 3020.0], [97.3, 3046.0], [97.4, 3053.0], [97.5, 3155.0], [97.6, 3183.0], [97.7, 3368.0], [97.8, 3446.0], [97.9, 3510.0], [98.0, 3510.0], [98.1, 3548.0], [98.2, 3582.0], [98.3, 3635.0], [98.4, 3724.0], [98.5, 3793.0], [98.6, 3808.0], [98.7, 4082.0], [98.8, 4104.0], [98.9, 4125.0], [99.0, 4125.0], [99.1, 4275.0], [99.2, 4358.0], [99.3, 4833.0], [99.4, 4853.0], [99.5, 5350.0], [99.6, 5440.0], [99.7, 5495.0], [99.8, 5944.0], [99.9, 6599.0], [100.0, 6599.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 8.0], [0.1, 8.0], [0.2, 23.0], [0.3, 30.0], [0.4, 53.0], [0.5, 59.0], [0.6, 62.0], [0.7, 72.0], [0.8, 73.0], [0.9, 75.0], [1.0, 75.0], [1.1, 95.0], [1.2, 97.0], [1.3, 98.0], [1.4, 98.0], [1.5, 100.0], [1.6, 102.0], [1.7, 106.0], [1.8, 108.0], [1.9, 109.0], [2.0, 109.0], [2.1, 114.0], [2.2, 115.0], [2.3, 116.0], [2.4, 116.0], [2.5, 120.0], [2.6, 120.0], [2.7, 124.0], [2.8, 124.0], [2.9, 125.0], [3.0, 125.0], [3.1, 125.0], [3.2, 131.0], [3.3, 131.0], [3.4, 131.0], [3.5, 139.0], [3.6, 143.0], [3.7, 145.0], [3.8, 149.0], [3.9, 150.0], [4.0, 150.0], [4.1, 152.0], [4.2, 154.0], [4.3, 156.0], [4.4, 158.0], [4.5, 158.0], [4.6, 158.0], [4.7, 161.0], [4.8, 161.0], [4.9, 161.0], [5.0, 162.0], [5.1, 162.0], [5.2, 163.0], [5.3, 167.0], [5.4, 167.0], [5.5, 167.0], [5.6, 167.0], [5.7, 169.0], [5.8, 171.0], [5.9, 172.0], [6.0, 177.0], [6.1, 177.0], [6.2, 182.0], [6.3, 183.0], [6.4, 185.0], [6.5, 188.0], [6.6, 189.0], [6.7, 189.0], [6.8, 193.0], [6.9, 199.0], [7.0, 200.0], [7.1, 200.0], [7.2, 201.0], [7.3, 202.0], [7.4, 203.0], [7.5, 203.0], [7.6, 205.0], [7.7, 205.0], [7.8, 206.0], [7.9, 207.0], [8.0, 208.0], [8.1, 208.0], [8.2, 209.0], [8.3, 212.0], [8.4, 216.0], [8.5, 218.0], [8.6, 218.0], [8.7, 221.0], [8.8, 224.0], [8.9, 226.0], [9.0, 228.0], [9.1, 228.0], [9.2, 230.0], [9.3, 232.0], [9.4, 234.0], [9.5, 235.0], [9.6, 235.0], [9.7, 237.0], [9.8, 243.0], [9.9, 245.0], [10.0, 251.0], [10.1, 251.0], [10.2, 253.0], [10.3, 253.0], [10.4, 253.0], [10.5, 254.0], [10.6, 255.0], [10.7, 256.0], [10.8, 257.0], [10.9, 258.0], [11.0, 258.0], [11.1, 258.0], [11.2, 259.0], [11.3, 261.0], [11.4, 263.0], [11.5, 266.0], [11.6, 268.0], [11.7, 269.0], [11.8, 270.0], [11.9, 272.0], [12.0, 275.0], [12.1, 275.0], [12.2, 276.0], [12.3, 280.0], [12.4, 284.0], [12.5, 288.0], [12.6, 291.0], [12.7, 295.0], [12.8, 300.0], [12.9, 301.0], [13.0, 303.0], [13.1, 303.0], [13.2, 303.0], [13.3, 304.0], [13.4, 306.0], [13.5, 308.0], [13.6, 313.0], [13.7, 315.0], [13.8, 318.0], [13.9, 318.0], [14.0, 325.0], [14.1, 325.0], [14.2, 327.0], [14.3, 329.0], [14.4, 333.0], [14.5, 341.0], [14.6, 343.0], [14.7, 344.0], [14.8, 347.0], [14.9, 353.0], [15.0, 356.0], [15.1, 356.0], [15.2, 356.0], [15.3, 357.0], [15.4, 359.0], [15.5, 362.0], [15.6, 364.0], [15.7, 366.0], [15.8, 368.0], [15.9, 369.0], [16.0, 369.0], [16.1, 369.0], [16.2, 373.0], [16.3, 375.0], [16.4, 376.0], [16.5, 383.0], [16.6, 385.0], [16.7, 388.0], [16.8, 390.0], [16.9, 391.0], [17.0, 398.0], [17.1, 398.0], [17.2, 403.0], [17.3, 403.0], [17.4, 406.0], [17.5, 406.0], [17.6, 407.0], [17.7, 412.0], [17.8, 413.0], [17.9, 419.0], [18.0, 425.0], [18.1, 425.0], [18.2, 431.0], [18.3, 437.0], [18.4, 442.0], [18.5, 443.0], [18.6, 446.0], [18.7, 461.0], [18.8, 468.0], [18.9, 470.0], [19.0, 475.0], [19.1, 475.0], [19.2, 480.0], [19.3, 481.0], [19.4, 483.0], [19.5, 486.0], [19.6, 487.0], [19.7, 488.0], [19.8, 491.0], [19.9, 495.0], [20.0, 501.0], [20.1, 501.0], [20.2, 505.0], [20.3, 509.0], [20.4, 512.0], [20.5, 514.0], [20.6, 518.0], [20.7, 521.0], [20.8, 534.0], [20.9, 539.0], [21.0, 545.0], [21.1, 545.0], [21.2, 556.0], [21.3, 558.0], [21.4, 560.0], [21.5, 562.0], [21.6, 568.0], [21.7, 575.0], [21.8, 577.0], [21.9, 593.0], [22.0, 603.0], [22.1, 603.0], [22.2, 613.0], [22.3, 624.0], [22.4, 634.0], [22.5, 644.0], [22.6, 648.0], [22.7, 661.0], [22.8, 663.0], [22.9, 665.0], [23.0, 666.0], [23.1, 666.0], [23.2, 670.0], [23.3, 671.0], [23.4, 672.0], [23.5, 674.0], [23.6, 681.0], [23.7, 684.0], [23.8, 689.0], [23.9, 698.0], [24.0, 705.0], [24.1, 705.0], [24.2, 708.0], [24.3, 715.0], [24.4, 716.0], [24.5, 722.0], [24.6, 728.0], [24.7, 729.0], [24.8, 732.0], [24.9, 751.0], [25.0, 755.0], [25.1, 755.0], [25.2, 768.0], [25.3, 781.0], [25.4, 782.0], [25.5, 785.0], [25.6, 790.0], [25.7, 794.0], [25.8, 796.0], [25.9, 797.0], [26.0, 801.0], [26.1, 801.0], [26.2, 802.0], [26.3, 807.0], [26.4, 816.0], [26.5, 818.0], [26.6, 820.0], [26.7, 838.0], [26.8, 841.0], [26.9, 844.0], [27.0, 857.0], [27.1, 857.0], [27.2, 861.0], [27.3, 873.0], [27.4, 878.0], [27.5, 879.0], [27.6, 889.0], [27.7, 892.0], [27.8, 900.0], [27.9, 904.0], [28.0, 910.0], [28.1, 910.0], [28.2, 916.0], [28.3, 921.0], [28.4, 921.0], [28.5, 926.0], [28.6, 930.0], [28.7, 937.0], [28.8, 940.0], [28.9, 949.0], [29.0, 951.0], [29.1, 951.0], [29.2, 952.0], [29.3, 959.0], [29.4, 959.0], [29.5, 959.0], [29.6, 960.0], [29.7, 965.0], [29.8, 977.0], [29.9, 981.0], [30.0, 983.0], [30.1, 983.0], [30.2, 984.0], [30.3, 986.0], [30.4, 992.0], [30.5, 996.0], [30.6, 997.0], [30.7, 998.0], [30.8, 1003.0], [30.9, 1008.0], [31.0, 1011.0], [31.1, 1011.0], [31.2, 1011.0], [31.3, 1016.0], [31.4, 1016.0], [31.5, 1024.0], [31.6, 1027.0], [31.7, 1030.0], [31.8, 1034.0], [31.9, 1036.0], [32.0, 1038.0], [32.1, 1038.0], [32.2, 1049.0], [32.3, 1057.0], [32.4, 1058.0], [32.5, 1063.0], [32.6, 1071.0], [32.7, 1074.0], [32.8, 1076.0], [32.9, 1080.0], [33.0, 1083.0], [33.1, 1083.0], [33.2, 1089.0], [33.3, 1089.0], [33.4, 1090.0], [33.5, 1094.0], [33.6, 1109.0], [33.7, 1117.0], [33.8, 1121.0], [33.9, 1134.0], [34.0, 1139.0], [34.1, 1139.0], [34.2, 1139.0], [34.3, 1153.0], [34.4, 1157.0], [34.5, 1160.0], [34.6, 1162.0], [34.7, 1171.0], [34.8, 1171.0], [34.9, 1177.0], [35.0, 1177.0], [35.1, 1177.0], [35.2, 1191.0], [35.3, 1205.0], [35.4, 1205.0], [35.5, 1206.0], [35.6, 1207.0], [35.7, 1209.0], [35.8, 1214.0], [35.9, 1232.0], [36.0, 1241.0], [36.1, 1241.0], [36.2, 1246.0], [36.3, 1251.0], [36.4, 1251.0], [36.5, 1258.0], [36.6, 1289.0], [36.7, 1291.0], [36.8, 1296.0], [36.9, 1304.0], [37.0, 1304.0], [37.1, 1307.0], [37.2, 1307.0], [37.3, 1308.0], [37.4, 1311.0], [37.5, 1313.0], [37.6, 1317.0], [37.7, 1318.0], [37.8, 1319.0], [37.9, 1324.0], [38.0, 1324.0], [38.1, 1324.0], [38.2, 1328.0], [38.3, 1332.0], [38.4, 1334.0], [38.5, 1335.0], [38.6, 1335.0], [38.7, 1340.0], [38.8, 1341.0], [38.9, 1341.0], [39.0, 1341.0], [39.1, 1341.0], [39.2, 1344.0], [39.3, 1354.0], [39.4, 1360.0], [39.5, 1362.0], [39.6, 1367.0], [39.7, 1372.0], [39.8, 1384.0], [39.9, 1389.0], [40.0, 1389.0], [40.1, 1394.0], [40.2, 1396.0], [40.3, 1398.0], [40.4, 1403.0], [40.5, 1409.0], [40.6, 1412.0], [40.7, 1417.0], [40.8, 1418.0], [40.9, 1419.0], [41.0, 1419.0], [41.1, 1432.0], [41.2, 1435.0], [41.3, 1439.0], [41.4, 1441.0], [41.5, 1448.0], [41.6, 1452.0], [41.7, 1456.0], [41.8, 1461.0], [41.9, 1471.0], [42.0, 1471.0], [42.1, 1475.0], [42.2, 1479.0], [42.3, 1485.0], [42.4, 1489.0], [42.5, 1490.0], [42.6, 1490.0], [42.7, 1513.0], [42.8, 1516.0], [42.9, 1516.0], [43.0, 1516.0], [43.1, 1521.0], [43.2, 1525.0], [43.3, 1526.0], [43.4, 1528.0], [43.5, 1539.0], [43.6, 1539.0], [43.7, 1540.0], [43.8, 1553.0], [43.9, 1555.0], [44.0, 1555.0], [44.1, 1564.0], [44.2, 1564.0], [44.3, 1572.0], [44.4, 1574.0], [44.5, 1603.0], [44.6, 1608.0], [44.7, 1610.0], [44.8, 1615.0], [44.9, 1619.0], [45.0, 1619.0], [45.1, 1624.0], [45.2, 1632.0], [45.3, 1639.0], [45.4, 1641.0], [45.5, 1648.0], [45.6, 1653.0], [45.7, 1661.0], [45.8, 1667.0], [45.9, 1670.0], [46.0, 1670.0], [46.1, 1678.0], [46.2, 1678.0], [46.3, 1685.0], [46.4, 1686.0], [46.5, 1688.0], [46.6, 1688.0], [46.7, 1695.0], [46.8, 1696.0], [46.9, 1700.0], [47.0, 1700.0], [47.1, 1714.0], [47.2, 1716.0], [47.3, 1718.0], [47.4, 1720.0], [47.5, 1724.0], [47.6, 1724.0], [47.7, 1727.0], [47.8, 1728.0], [47.9, 1729.0], [48.0, 1729.0], [48.1, 1731.0], [48.2, 1740.0], [48.3, 1743.0], [48.4, 1745.0], [48.5, 1746.0], [48.6, 1748.0], [48.7, 1750.0], [48.8, 1751.0], [48.9, 1755.0], [49.0, 1755.0], [49.1, 1758.0], [49.2, 1759.0], [49.3, 1767.0], [49.4, 1771.0], [49.5, 1779.0], [49.6, 1783.0], [49.7, 1784.0], [49.8, 1787.0], [49.9, 1789.0], [50.0, 1789.0], [50.1, 1794.0], [50.2, 1801.0], [50.3, 1801.0], [50.4, 1809.0], [50.5, 1811.0], [50.6, 1817.0], [50.7, 1817.0], [50.8, 1824.0], [50.9, 1841.0], [51.0, 1841.0], [51.1, 1841.0], [51.2, 1848.0], [51.3, 1848.0], [51.4, 1851.0], [51.5, 1853.0], [51.6, 1855.0], [51.7, 1871.0], [51.8, 1878.0], [51.9, 1879.0], [52.0, 1879.0], [52.1, 1892.0], [52.2, 1898.0], [52.3, 1908.0], [52.4, 1910.0], [52.5, 1912.0], [52.6, 1915.0], [52.7, 1915.0], [52.8, 1923.0], [52.9, 1926.0], [53.0, 1926.0], [53.1, 1927.0], [53.2, 1934.0], [53.3, 1943.0], [53.4, 1945.0], [53.5, 1949.0], [53.6, 1949.0], [53.7, 1958.0], [53.8, 1961.0], [53.9, 1968.0], [54.0, 1968.0], [54.1, 1986.0], [54.2, 2002.0], [54.3, 2005.0], [54.4, 2007.0], [54.5, 2008.0], [54.6, 2011.0], [54.7, 2013.0], [54.8, 2018.0], [54.9, 2021.0], [55.0, 2021.0], [55.1, 2024.0], [55.2, 2026.0], [55.3, 2034.0], [55.4, 2039.0], [55.5, 2041.0], [55.6, 2044.0], [55.7, 2047.0], [55.8, 2053.0], [55.9, 2054.0], [56.0, 2054.0], [56.1, 2071.0], [56.2, 2075.0], [56.3, 2076.0], [56.4, 2085.0], [56.5, 2093.0], [56.6, 2098.0], [56.7, 2099.0], [56.8, 2108.0], [56.9, 2114.0], [57.0, 2114.0], [57.1, 2120.0], [57.2, 2121.0], [57.3, 2121.0], [57.4, 2123.0], [57.5, 2132.0], [57.6, 2133.0], [57.7, 2137.0], [57.8, 2142.0], [57.9, 2146.0], [58.0, 2146.0], [58.1, 2150.0], [58.2, 2158.0], [58.3, 2159.0], [58.4, 2162.0], [58.5, 2163.0], [58.6, 2166.0], [58.7, 2167.0], [58.8, 2169.0], [58.9, 2179.0], [59.0, 2179.0], [59.1, 2182.0], [59.2, 2183.0], [59.3, 2186.0], [59.4, 2190.0], [59.5, 2191.0], [59.6, 2195.0], [59.7, 2197.0], [59.8, 2206.0], [59.9, 2210.0], [60.0, 2210.0], [60.1, 2212.0], [60.2, 2216.0], [60.3, 2217.0], [60.4, 2218.0], [60.5, 2218.0], [60.6, 2219.0], [60.7, 2220.0], [60.8, 2220.0], [60.9, 2220.0], [61.0, 2220.0], [61.1, 2221.0], [61.2, 2223.0], [61.3, 2224.0], [61.4, 2228.0], [61.5, 2229.0], [61.6, 2230.0], [61.7, 2234.0], [61.8, 2240.0], [61.9, 2242.0], [62.0, 2242.0], [62.1, 2256.0], [62.2, 2260.0], [62.3, 2260.0], [62.4, 2262.0], [62.5, 2267.0], [62.6, 2276.0], [62.7, 2277.0], [62.8, 2281.0], [62.9, 2282.0], [63.0, 2282.0], [63.1, 2283.0], [63.2, 2289.0], [63.3, 2292.0], [63.4, 2294.0], [63.5, 2300.0], [63.6, 2319.0], [63.7, 2320.0], [63.8, 2330.0], [63.9, 2333.0], [64.0, 2333.0], [64.1, 2341.0], [64.2, 2342.0], [64.3, 2348.0], [64.4, 2355.0], [64.5, 2361.0], [64.6, 2361.0], [64.7, 2373.0], [64.8, 2376.0], [64.9, 2383.0], [65.0, 2383.0], [65.1, 2385.0], [65.2, 2386.0], [65.3, 2388.0], [65.4, 2399.0], [65.5, 2411.0], [65.6, 2419.0], [65.7, 2419.0], [65.8, 2423.0], [65.9, 2425.0], [66.0, 2425.0], [66.1, 2428.0], [66.2, 2428.0], [66.3, 2435.0], [66.4, 2439.0], [66.5, 2439.0], [66.6, 2449.0], [66.7, 2452.0], [66.8, 2454.0], [66.9, 2459.0], [67.0, 2459.0], [67.1, 2469.0], [67.2, 2473.0], [67.3, 2477.0], [67.4, 2478.0], [67.5, 2482.0], [67.6, 2505.0], [67.7, 2512.0], [67.8, 2526.0], [67.9, 2531.0], [68.0, 2531.0], [68.1, 2544.0], [68.2, 2559.0], [68.3, 2564.0], [68.4, 2585.0], [68.5, 2588.0], [68.6, 2591.0], [68.7, 2593.0], [68.8, 2598.0], [68.9, 2603.0], [69.0, 2603.0], [69.1, 2634.0], [69.2, 2664.0], [69.3, 2680.0], [69.4, 2693.0], [69.5, 2724.0], [69.6, 2741.0], [69.7, 2747.0], [69.8, 2749.0], [69.9, 2757.0], [70.0, 2757.0], [70.1, 2798.0], [70.2, 2845.0], [70.3, 2850.0], [70.4, 2868.0], [70.5, 2898.0], [70.6, 2938.0], [70.7, 2961.0], [70.8, 2965.0], [70.9, 2998.0], [71.0, 2998.0], [71.1, 3012.0], [71.2, 3297.0], [71.3, 3517.0], [71.4, 3661.0], [71.5, 3967.0], [71.6, 3968.0], [71.7, 4208.0], [71.8, 4289.0], [71.9, 4296.0], [72.0, 4296.0], [72.1, 4304.0], [72.2, 4348.0], [72.3, 4366.0], [72.4, 4379.0], [72.5, 4405.0], [72.6, 4412.0], [72.7, 4479.0], [72.8, 4514.0], [72.9, 4566.0], [73.0, 4566.0], [73.1, 4573.0], [73.2, 4593.0], [73.3, 4617.0], [73.4, 4620.0], [73.5, 4642.0], [73.6, 4656.0], [73.7, 4687.0], [73.8, 4690.0], [73.9, 4752.0], [74.0, 4752.0], [74.1, 4926.0], [74.2, 4940.0], [74.3, 4958.0], [74.4, 4961.0], [74.5, 4969.0], [74.6, 4990.0], [74.7, 5001.0], [74.8, 5005.0], [74.9, 5012.0], [75.0, 5012.0], [75.1, 5020.0], [75.2, 5024.0], [75.3, 5026.0], [75.4, 5034.0], [75.5, 5038.0], [75.6, 5047.0], [75.7, 5053.0], [75.8, 5056.0], [75.9, 5062.0], [76.0, 5062.0], [76.1, 5063.0], [76.2, 5064.0], [76.3, 5066.0], [76.4, 5069.0], [76.5, 5069.0], [76.6, 5080.0], [76.7, 5082.0], [76.8, 5083.0], [76.9, 5092.0], [77.0, 5092.0], [77.1, 5092.0], [77.2, 5101.0], [77.3, 5108.0], [77.4, 5112.0], [77.5, 5114.0], [77.6, 5115.0], [77.7, 5118.0], [77.8, 5119.0], [77.9, 5120.0], [78.0, 5120.0], [78.1, 5120.0], [78.2, 5122.0], [78.3, 5123.0], [78.4, 5123.0], [78.5, 5123.0], [78.6, 5124.0], [78.7, 5124.0], [78.8, 5126.0], [78.9, 5126.0], [79.0, 5126.0], [79.1, 5127.0], [79.2, 5130.0], [79.3, 5136.0], [79.4, 5139.0], [79.5, 5140.0], [79.6, 5143.0], [79.7, 5148.0], [79.8, 5150.0], [79.9, 5153.0], [80.0, 5153.0], [80.1, 5154.0], [80.2, 5156.0], [80.3, 5163.0], [80.4, 5164.0], [80.5, 5170.0], [80.6, 5172.0], [80.7, 5181.0], [80.8, 5181.0], [80.9, 5185.0], [81.0, 5185.0], [81.1, 5224.0], [81.2, 5234.0], [81.3, 5240.0], [81.4, 5246.0], [81.5, 5264.0], [81.6, 5300.0], [81.7, 5300.0], [81.8, 5317.0], [81.9, 5343.0], [82.0, 5343.0], [82.1, 5360.0], [82.2, 5373.0], [82.3, 5373.0], [82.4, 5375.0], [82.5, 5375.0], [82.6, 5375.0], [82.7, 5376.0], [82.8, 5376.0], [82.9, 5377.0], [83.0, 5377.0], [83.1, 5378.0], [83.2, 5379.0], [83.3, 5380.0], [83.4, 5380.0], [83.5, 5380.0], [83.6, 5380.0], [83.7, 5380.0], [83.8, 5382.0], [83.9, 5383.0], [84.0, 5383.0], [84.1, 5383.0], [84.2, 5384.0], [84.3, 5385.0], [84.4, 5385.0], [84.5, 5386.0], [84.6, 5387.0], [84.7, 5390.0], [84.8, 5390.0], [84.9, 5391.0], [85.0, 5391.0], [85.1, 5391.0], [85.2, 5392.0], [85.3, 5392.0], [85.4, 5392.0], [85.5, 5392.0], [85.6, 5395.0], [85.7, 5395.0], [85.8, 5397.0], [85.9, 5397.0], [86.0, 5397.0], [86.1, 5412.0], [86.2, 5430.0], [86.3, 5430.0], [86.4, 5430.0], [86.5, 5435.0], [86.6, 5450.0], [86.7, 5456.0], [86.8, 5456.0], [86.9, 5471.0], [87.0, 5471.0], [87.1, 5478.0], [87.2, 5492.0], [87.3, 5504.0], [87.4, 5518.0], [87.5, 5529.0], [87.6, 5535.0], [87.7, 5543.0], [87.8, 5546.0], [87.9, 5549.0], [88.0, 5549.0], [88.1, 5552.0], [88.2, 5559.0], [88.3, 5575.0], [88.4, 5577.0], [88.5, 5577.0], [88.6, 5586.0], [88.7, 5588.0], [88.8, 5589.0], [88.9, 5599.0], [89.0, 5599.0], [89.1, 5610.0], [89.2, 5628.0], [89.3, 5628.0], [89.4, 5633.0], [89.5, 5641.0], [89.6, 5652.0], [89.7, 5656.0], [89.8, 5668.0], [89.9, 5680.0], [90.0, 5680.0], [90.1, 5680.0], [90.2, 5685.0], [90.3, 5685.0], [90.4, 5685.0], [90.5, 5695.0], [90.6, 5696.0], [90.7, 5705.0], [90.8, 5706.0], [90.9, 5713.0], [91.0, 5713.0], [91.1, 5728.0], [91.2, 5750.0], [91.3, 5757.0], [91.4, 5758.0], [91.5, 5764.0], [91.6, 5768.0], [91.7, 5774.0], [91.8, 5777.0], [91.9, 5797.0], [92.0, 5797.0], [92.1, 5818.0], [92.2, 5825.0], [92.3, 5830.0], [92.4, 5835.0], [92.5, 5836.0], [92.6, 5842.0], [92.7, 5876.0], [92.8, 5879.0], [92.9, 5887.0], [93.0, 5887.0], [93.1, 5889.0], [93.2, 5894.0], [93.3, 5894.0], [93.4, 5917.0], [93.5, 5924.0], [93.6, 5926.0], [93.7, 5936.0], [93.8, 5983.0], [93.9, 5995.0], [94.0, 5995.0], [94.1, 6010.0], [94.2, 6012.0], [94.3, 6013.0], [94.4, 6025.0], [94.5, 6039.0], [94.6, 6041.0], [94.7, 6067.0], [94.8, 6067.0], [94.9, 6090.0], [95.0, 6090.0], [95.1, 6098.0], [95.2, 6110.0], [95.3, 6115.0], [95.4, 6117.0], [95.5, 6118.0], [95.6, 6129.0], [95.7, 6137.0], [95.8, 6140.0], [95.9, 6145.0], [96.0, 6145.0], [96.1, 6149.0], [96.2, 6156.0], [96.3, 6164.0], [96.4, 6167.0], [96.5, 6176.0], [96.6, 6181.0], [96.7, 6182.0], [96.8, 6214.0], [96.9, 6216.0], [97.0, 6216.0], [97.1, 6216.0], [97.2, 6217.0], [97.3, 6226.0], [97.4, 6228.0], [97.5, 6238.0], [97.6, 6244.0], [97.7, 6274.0], [97.8, 6290.0], [97.9, 6299.0], [98.0, 6299.0], [98.1, 6301.0], [98.2, 6304.0], [98.3, 6306.0], [98.4, 6309.0], [98.5, 6392.0], [98.6, 6420.0], [98.7, 6448.0], [98.8, 6450.0], [98.9, 6467.0], [99.0, 6467.0], [99.1, 6479.0], [99.2, 6483.0], [99.3, 7327.0], [99.4, 7467.0], [99.5, 7776.0], [99.6, 7801.0], [99.7, 7826.0], [99.8, 8450.0], [99.9, 10501.0], [100.0, 10501.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 132.0, "series": [{"data": [[0.0, 25.0], [600.0, 19.0], [700.0, 3.0], [800.0, 13.0], [900.0, 14.0], [1000.0, 21.0], [1100.0, 15.0], [1200.0, 8.0], [1300.0, 11.0], [1400.0, 13.0], [1500.0, 4.0], [100.0, 27.0], [1600.0, 6.0], [1700.0, 10.0], [1800.0, 9.0], [1900.0, 1.0], [2000.0, 6.0], [2100.0, 12.0], [2300.0, 3.0], [2200.0, 7.0], [200.0, 18.0], [3500.0, 1.0], [3700.0, 1.0], [3900.0, 1.0], [300.0, 20.0], [6300.0, 1.0], [400.0, 18.0], [500.0, 13.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[0.0, 132.0], [600.0, 51.0], [700.0, 59.0], [800.0, 42.0], [900.0, 59.0], [1000.0, 54.0], [1100.0, 39.0], [1200.0, 31.0], [1300.0, 24.0], [1400.0, 14.0], [1500.0, 10.0], [100.0, 131.0], [1700.0, 4.0], [1800.0, 2.0], [1900.0, 6.0], [2000.0, 2.0], [2100.0, 4.0], [2200.0, 3.0], [2400.0, 1.0], [2600.0, 1.0], [2800.0, 1.0], [2900.0, 1.0], [3000.0, 1.0], [3100.0, 1.0], [200.0, 60.0], [300.0, 43.0], [400.0, 55.0], [500.0, 69.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 91.0], [600.0, 41.0], [700.0, 47.0], [800.0, 27.0], [900.0, 42.0], [1000.0, 24.0], [1100.0, 30.0], [1200.0, 22.0], [1300.0, 16.0], [1400.0, 26.0], [1500.0, 16.0], [1600.0, 11.0], [100.0, 85.0], [1700.0, 6.0], [1800.0, 12.0], [1900.0, 48.0], [2000.0, 16.0], [2100.0, 20.0], [2300.0, 23.0], [2200.0, 25.0], [2400.0, 15.0], [2500.0, 5.0], [2600.0, 11.0], [2800.0, 8.0], [2700.0, 25.0], [2900.0, 6.0], [3000.0, 3.0], [3100.0, 2.0], [200.0, 41.0], [3300.0, 1.0], [3400.0, 1.0], [3500.0, 3.0], [3700.0, 2.0], [3600.0, 1.0], [3800.0, 1.0], [4000.0, 1.0], [4100.0, 2.0], [4200.0, 1.0], [4300.0, 1.0], [4800.0, 2.0], [300.0, 34.0], [5300.0, 1.0], [5400.0, 2.0], [5900.0, 1.0], [400.0, 52.0], [6500.0, 1.0], [500.0, 49.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 13.0], [600.0, 18.0], [700.0, 18.0], [800.0, 16.0], [900.0, 27.0], [1000.0, 25.0], [1100.0, 15.0], [1200.0, 15.0], [1300.0, 31.0], [1400.0, 21.0], [1500.0, 16.0], [1600.0, 22.0], [1700.0, 29.0], [1800.0, 19.0], [1900.0, 17.0], [2000.0, 24.0], [2100.0, 27.0], [2300.0, 18.0], [2200.0, 33.0], [2400.0, 19.0], [2500.0, 12.0], [2600.0, 5.0], [2800.0, 4.0], [2700.0, 6.0], [2900.0, 4.0], [3000.0, 1.0], [3200.0, 1.0], [3500.0, 1.0], [3600.0, 1.0], [3900.0, 2.0], [4200.0, 3.0], [4300.0, 4.0], [4400.0, 3.0], [4600.0, 6.0], [4500.0, 4.0], [4700.0, 1.0], [4900.0, 6.0], [5000.0, 22.0], [5100.0, 35.0], [5300.0, 40.0], [5200.0, 5.0], [5600.0, 15.0], [5500.0, 16.0], [5400.0, 11.0], [5800.0, 12.0], [5700.0, 12.0], [6100.0, 15.0], [5900.0, 6.0], [6000.0, 10.0], [6300.0, 5.0], [6200.0, 11.0], [6400.0, 6.0], [7400.0, 1.0], [7300.0, 1.0], [7800.0, 2.0], [7700.0, 1.0], [8400.0, 1.0], [10500.0, 1.0], [100.0, 50.0], [200.0, 52.0], [300.0, 39.0], [400.0, 26.0], [500.0, 18.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 10500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 888.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1099.0, "series": [{"data": [[0.0, 1013.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1099.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 888.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 188.99166666666656, "minX": 1.72983912E12, "maxY": 188.99166666666656, "series": [{"data": [[1.72983912E12, 188.99166666666656]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72983912E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 11.0, "minX": 1.0, "maxY": 6385.166666666667, "series": [{"data": [[61.0, 247.0], [62.0, 221.5], [63.0, 200.0], [65.0, 1031.5], [10.0, 68.0], [184.0, 350.0], [199.0, 1492.0], [12.0, 58.0], [221.0, 3597.0], [217.0, 5186.0], [219.0, 2239.5], [14.0, 80.66666666666667], [243.0, 1489.2571428571432], [244.0, 736.2162162162164], [246.0, 394.38095238095246], [15.0, 92.0], [249.0, 1880.0], [252.0, 616.0], [17.0, 106.0], [18.0, 78.57142857142857], [19.0, 124.28571428571429], [20.0, 84.0], [21.0, 84.0], [22.0, 113.0], [23.0, 179.5], [24.0, 100.5]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[206.56666666666663, 946.9066666666666]], "isOverall": false, "label": "HTTP Request-2-Aggregated", "isController": false}, {"data": [[5.0, 22.0], [7.0, 39.0], [8.0, 32.0], [9.0, 49.666666666666664], [10.0, 43.666666666666664], [12.0, 59.333333333333336], [13.0, 61.0], [14.0, 79.4], [15.0, 77.7], [16.0, 63.0], [17.0, 104.83333333333334], [18.0, 107.29411764705881], [19.0, 104.9230769230769], [20.0, 77.15384615384616], [21.0, 120.28571428571429], [22.0, 127.84615384615384], [23.0, 119.28571428571429], [24.0, 134.0], [25.0, 107.5], [28.0, 279.0], [61.0, 642.5], [63.0, 290.91666666666663], [62.0, 437.2], [65.0, 823.2285714285712], [64.0, 1072.0], [93.0, 502.0], [94.0, 448.0], [116.0, 439.0], [121.0, 469.0], [128.0, 283.0], [147.0, 653.5], [146.0, 251.0], [155.0, 639.5], [164.0, 618.0], [165.0, 583.0], [184.0, 683.5909090909091], [185.0, 620.8], [187.0, 886.5], [190.0, 774.0], [188.0, 1457.0], [199.0, 2879.0], [196.0, 677.0], [193.0, 632.0], [194.0, 817.0], [201.0, 706.5], [200.0, 611.0], [212.0, 1390.0], [221.0, 620.8823529411765], [223.0, 895.8000000000001], [222.0, 1175.1666666666667], [217.0, 732.0], [219.0, 1383.0], [224.0, 831.0], [243.0, 576.991452991453], [244.0, 916.2389380530972], [246.0, 549.1444444444447], [247.0, 672.1111111111111], [241.0, 939.1410256410259], [242.0, 1082.142857142857], [245.0, 939.1111111111109], [240.0, 905.470588235294], [249.0, 1144.0], [248.0, 494.1111111111111], [252.0, 577.7948717948718], [254.0, 403.0], [253.0, 194.35714285714283], [1.0, 11.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[187.03888888888915, 617.737777777778]], "isOverall": false, "label": "HTTP Request-1-Aggregated", "isController": false}, {"data": [[5.0, 55.666666666666664], [7.0, 86.0], [8.0, 21.0], [9.0, 76.16666666666667], [10.0, 116.66666666666667], [12.0, 133.66666666666666], [13.0, 48.0], [14.0, 75.8], [15.0, 134.6], [16.0, 102.5], [17.0, 107.83333333333333], [18.0, 123.58823529411765], [19.0, 92.99999999999999], [20.0, 128.3076923076923], [21.0, 144.64285714285714], [22.0, 127.30769230769229], [23.0, 382.2857142857143], [24.0, 155.875], [25.0, 123.5], [28.0, 496.0], [61.0, 1647.0], [63.0, 884.6666666666666], [62.0, 1737.4], [65.0, 818.8285714285714], [64.0, 1025.0], [93.0, 535.0], [94.0, 643.0], [116.0, 377.0], [121.0, 495.0], [128.0, 506.0], [147.0, 617.0], [146.0, 1332.0], [155.0, 564.5], [164.0, 932.5], [165.0, 905.0], [184.0, 924.6363636363635], [185.0, 631.0], [187.0, 654.0], [188.0, 2742.0], [190.0, 306.0], [199.0, 730.0], [196.0, 612.0], [193.0, 397.5], [194.0, 277.0], [201.0, 333.5], [200.0, 560.0], [212.0, 2577.0], [221.0, 770.2941176470589], [223.0, 1460.8], [222.0, 1107.3333333333333], [217.0, 1123.4], [219.0, 547.6], [224.0, 1341.25], [243.0, 2198.4444444444443], [244.0, 2124.6371681415944], [246.0, 1142.9111111111115], [247.0, 737.1111111111111], [241.0, 1154.7564102564106], [242.0, 825.4285714285714], [245.0, 787.7777777777778], [240.0, 1318.235294117647], [249.0, 2582.3333333333335], [248.0, 496.77777777777777], [252.0, 620.4358974358972], [254.0, 244.83333333333334], [253.0, 262.9642857142857], [1.0, 19.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[187.03888888888912, 1124.2199999999996]], "isOverall": false, "label": "HTTP Request-0-Aggregated", "isController": false}, {"data": [[5.0, 90.0], [7.0, 125.0], [8.0, 53.0], [9.0, 129.5], [10.0, 183.33333333333334], [12.0, 217.66666666666666], [13.0, 109.0], [14.0, 204.2], [15.0, 258.99999999999994], [16.0, 166.0], [17.0, 244.41666666666669], [18.0, 279.88235294117646], [19.0, 237.8461538461538], [20.0, 238.69230769230768], [21.0, 309.7142857142857], [22.0, 294.0769230769231], [23.0, 570.1428571428571], [24.0, 331.125], [25.0, 286.5], [28.0, 775.0], [61.0, 2452.0], [63.0, 1430.166666666667], [62.0, 2396.4], [65.0, 1764.6000000000006], [64.0, 2098.0], [93.0, 1038.0], [94.0, 1227.3333333333333], [116.0, 816.0], [121.0, 965.0], [128.0, 790.0], [147.0, 1364.5], [146.0, 1787.0], [155.0, 1205.0], [164.0, 1608.5], [165.0, 1489.0], [184.0, 1703.1818181818182], [185.0, 1360.4], [187.0, 1677.0], [188.0, 4412.0], [190.0, 1080.0], [199.0, 5101.0], [196.0, 1289.0], [193.0, 1141.5], [194.0, 1094.0], [201.0, 1041.0], [200.0, 1171.0], [212.0, 3968.0], [221.0, 1622.6470588235293], [223.0, 2450.25], [222.0, 2283.0], [217.0, 3930.4], [219.0, 2833.0], [224.0, 2393.0], [243.0, 4915.649572649575], [244.0, 5627.849557522126], [246.0, 2078.144444444445], [247.0, 1413.111111111111], [241.0, 2174.5256410256416], [242.0, 2048.428571428571], [245.0, 1887.1851851851852], [240.0, 2303.294117647059], [248.0, 992.1111111111111], [249.0, 6385.166666666667], [252.0, 1301.1794871794873], [254.0, 648.3333333333333], [253.0, 484.1071428571427], [1.0, 30.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[187.03888888888918, 2470.6333333333346]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 254.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 11210.0, "minX": 1.72983912E12, "maxY": 40260.0, "series": [{"data": [[1.72983912E12, 40260.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.72983912E12, 11210.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72983912E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 617.737777777778, "minX": 1.72983912E12, "maxY": 2470.6333333333346, "series": [{"data": [[1.72983912E12, 946.9066666666666]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[1.72983912E12, 617.737777777778]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.72983912E12, 1124.2199999999996]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.72983912E12, 2470.6333333333346]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72983912E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 614.0144444444443, "minX": 1.72983912E12, "maxY": 1110.6511111111108, "series": [{"data": [[1.72983912E12, 805.3466666666669]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[1.72983912E12, 614.0144444444443]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.72983912E12, 1110.6511111111097]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.72983912E12, 1110.6511111111108]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72983912E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.72983912E12, "maxY": 294.7633333333334, "series": [{"data": [[1.72983912E12, 0.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[1.72983912E12, 0.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.72983912E12, 294.7633333333334]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.72983912E12, 294.7633333333331]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72983912E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 4.0, "minX": 1.72983912E12, "maxY": 10501.0, "series": [{"data": [[1.72983912E12, 10501.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.72983912E12, 2959.2000000000007]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.72983912E12, 6215.98]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.72983912E12, 5382.95]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.72983912E12, 4.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.72983912E12, 887.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72983912E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 81.0, "minX": 7.0, "maxY": 2136.0, "series": [{"data": [[167.0, 439.5], [170.0, 115.5], [181.0, 2069.0], [207.0, 521.0], [218.0, 547.0], [227.0, 483.0], [231.0, 907.0], [261.0, 1180.0], [317.0, 2136.0], [84.0, 859.0], [86.0, 81.0], [437.0, 1526.0], [7.0, 795.0], [120.0, 561.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 437.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 65.5, "minX": 7.0, "maxY": 2069.0, "series": [{"data": [[167.0, 324.5], [170.0, 93.0], [181.0, 2069.0], [207.0, 346.0], [218.0, 479.0], [227.0, 302.0], [231.0, 643.0], [261.0, 1068.0], [317.0, 1665.0], [84.0, 859.0], [86.0, 65.5], [437.0, 1047.0], [7.0, 795.0], [120.0, 550.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 437.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.72983912E12, "maxY": 50.0, "series": [{"data": [[1.72983912E12, 50.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72983912E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 20.0, "minX": 1.72983912E12, "maxY": 30.0, "series": [{"data": [[1.72983912E12, 30.0]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.72983912E12, 20.0]], "isOverall": false, "label": "302", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72983912E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 5.0, "minX": 1.72983912E12, "maxY": 15.0, "series": [{"data": [[1.72983912E12, 15.0]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.72983912E12, 15.0]], "isOverall": false, "label": "HTTP Request-0-success", "isController": false}, {"data": [[1.72983912E12, 15.0]], "isOverall": false, "label": "HTTP Request-1-success", "isController": false}, {"data": [[1.72983912E12, 5.0]], "isOverall": false, "label": "HTTP Request-2-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72983912E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.72983912E12, "maxY": 50.0, "series": [{"data": [[1.72983912E12, 50.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72983912E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

