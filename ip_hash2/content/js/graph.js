/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 5.0, "minX": 0.0, "maxY": 6867.0, "series": [{"data": [[0.0, 14.0], [0.1, 14.0], [0.2, 14.0], [0.3, 14.0], [0.4, 20.0], [0.5, 20.0], [0.6, 20.0], [0.7, 21.0], [0.8, 21.0], [0.9, 21.0], [1.0, 22.0], [1.1, 22.0], [1.2, 22.0], [1.3, 22.0], [1.4, 22.0], [1.5, 22.0], [1.6, 22.0], [1.7, 26.0], [1.8, 26.0], [1.9, 26.0], [2.0, 28.0], [2.1, 28.0], [2.2, 28.0], [2.3, 28.0], [2.4, 31.0], [2.5, 31.0], [2.6, 31.0], [2.7, 34.0], [2.8, 34.0], [2.9, 34.0], [3.0, 34.0], [3.1, 34.0], [3.2, 34.0], [3.3, 34.0], [3.4, 35.0], [3.5, 35.0], [3.6, 35.0], [3.7, 35.0], [3.8, 35.0], [3.9, 35.0], [4.0, 37.0], [4.1, 37.0], [4.2, 37.0], [4.3, 37.0], [4.4, 41.0], [4.5, 41.0], [4.6, 41.0], [4.7, 44.0], [4.8, 44.0], [4.9, 44.0], [5.0, 44.0], [5.1, 44.0], [5.2, 44.0], [5.3, 44.0], [5.4, 45.0], [5.5, 45.0], [5.6, 45.0], [5.7, 46.0], [5.8, 46.0], [5.9, 46.0], [6.0, 46.0], [6.1, 46.0], [6.2, 46.0], [6.3, 46.0], [6.4, 49.0], [6.5, 49.0], [6.6, 49.0], [6.7, 49.0], [6.8, 49.0], [6.9, 49.0], [7.0, 53.0], [7.1, 53.0], [7.2, 53.0], [7.3, 53.0], [7.4, 58.0], [7.5, 58.0], [7.6, 58.0], [7.7, 63.0], [7.8, 63.0], [7.9, 63.0], [8.0, 64.0], [8.1, 64.0], [8.2, 64.0], [8.3, 64.0], [8.4, 65.0], [8.5, 65.0], [8.6, 65.0], [8.7, 66.0], [8.8, 66.0], [8.9, 66.0], [9.0, 66.0], [9.1, 66.0], [9.2, 66.0], [9.3, 66.0], [9.4, 67.0], [9.5, 67.0], [9.6, 67.0], [9.7, 67.0], [9.8, 67.0], [9.9, 67.0], [10.0, 70.0], [10.1, 70.0], [10.2, 70.0], [10.3, 70.0], [10.4, 71.0], [10.5, 71.0], [10.6, 71.0], [10.7, 73.0], [10.8, 73.0], [10.9, 73.0], [11.0, 74.0], [11.1, 74.0], [11.2, 74.0], [11.3, 74.0], [11.4, 75.0], [11.5, 75.0], [11.6, 75.0], [11.7, 78.0], [11.8, 78.0], [11.9, 78.0], [12.0, 78.0], [12.1, 79.0], [12.2, 79.0], [12.3, 79.0], [12.4, 80.0], [12.5, 80.0], [12.6, 80.0], [12.7, 81.0], [12.8, 81.0], [12.9, 81.0], [13.0, 81.0], [13.1, 82.0], [13.2, 82.0], [13.3, 82.0], [13.4, 83.0], [13.5, 83.0], [13.6, 83.0], [13.7, 84.0], [13.8, 84.0], [13.9, 84.0], [14.0, 84.0], [14.1, 87.0], [14.2, 87.0], [14.3, 87.0], [14.4, 87.0], [14.5, 87.0], [14.6, 87.0], [14.7, 87.0], [14.8, 87.0], [14.9, 87.0], [15.0, 87.0], [15.1, 88.0], [15.2, 88.0], [15.3, 88.0], [15.4, 90.0], [15.5, 90.0], [15.6, 90.0], [15.7, 92.0], [15.8, 92.0], [15.9, 92.0], [16.0, 92.0], [16.1, 93.0], [16.2, 93.0], [16.3, 93.0], [16.4, 103.0], [16.5, 103.0], [16.6, 103.0], [16.7, 105.0], [16.8, 105.0], [16.9, 105.0], [17.0, 105.0], [17.1, 105.0], [17.2, 105.0], [17.3, 105.0], [17.4, 106.0], [17.5, 106.0], [17.6, 106.0], [17.7, 109.0], [17.8, 109.0], [17.9, 109.0], [18.0, 109.0], [18.1, 114.0], [18.2, 114.0], [18.3, 114.0], [18.4, 115.0], [18.5, 115.0], [18.6, 115.0], [18.7, 119.0], [18.8, 119.0], [18.9, 119.0], [19.0, 121.0], [19.1, 121.0], [19.2, 121.0], [19.3, 121.0], [19.4, 124.0], [19.5, 124.0], [19.6, 124.0], [19.7, 125.0], [19.8, 125.0], [19.9, 125.0], [20.0, 134.0], [20.1, 134.0], [20.2, 134.0], [20.3, 134.0], [20.4, 139.0], [20.5, 139.0], [20.6, 139.0], [20.7, 143.0], [20.8, 143.0], [20.9, 143.0], [21.0, 148.0], [21.1, 148.0], [21.2, 148.0], [21.3, 148.0], [21.4, 149.0], [21.5, 149.0], [21.6, 149.0], [21.7, 167.0], [21.8, 167.0], [21.9, 167.0], [22.0, 169.0], [22.1, 169.0], [22.2, 169.0], [22.3, 169.0], [22.4, 179.0], [22.5, 179.0], [22.6, 179.0], [22.7, 182.0], [22.8, 182.0], [22.9, 182.0], [23.0, 185.0], [23.1, 185.0], [23.2, 185.0], [23.3, 185.0], [23.4, 192.0], [23.5, 192.0], [23.6, 192.0], [23.7, 206.0], [23.8, 206.0], [23.9, 206.0], [24.0, 320.0], [24.1, 320.0], [24.2, 320.0], [24.3, 320.0], [24.4, 342.0], [24.5, 342.0], [24.6, 342.0], [24.7, 358.0], [24.8, 358.0], [24.9, 358.0], [25.0, 425.0], [25.1, 425.0], [25.2, 425.0], [25.3, 425.0], [25.4, 443.0], [25.5, 443.0], [25.6, 443.0], [25.7, 462.0], [25.8, 462.0], [25.9, 462.0], [26.0, 498.0], [26.1, 498.0], [26.2, 498.0], [26.3, 498.0], [26.4, 506.0], [26.5, 506.0], [26.6, 506.0], [26.7, 556.0], [26.8, 556.0], [26.9, 556.0], [27.0, 562.0], [27.1, 562.0], [27.2, 562.0], [27.3, 562.0], [27.4, 563.0], [27.5, 563.0], [27.6, 563.0], [27.7, 576.0], [27.8, 576.0], [27.9, 576.0], [28.0, 578.0], [28.1, 578.0], [28.2, 578.0], [28.3, 578.0], [28.4, 609.0], [28.5, 609.0], [28.6, 609.0], [28.7, 610.0], [28.8, 610.0], [28.9, 610.0], [29.0, 610.0], [29.1, 610.0], [29.2, 610.0], [29.3, 610.0], [29.4, 611.0], [29.5, 611.0], [29.6, 611.0], [29.7, 622.0], [29.8, 622.0], [29.9, 622.0], [30.0, 626.0], [30.1, 626.0], [30.2, 626.0], [30.3, 626.0], [30.4, 627.0], [30.5, 627.0], [30.6, 627.0], [30.7, 627.0], [30.8, 627.0], [30.9, 627.0], [31.0, 629.0], [31.1, 629.0], [31.2, 629.0], [31.3, 629.0], [31.4, 629.0], [31.5, 629.0], [31.6, 629.0], [31.7, 633.0], [31.8, 633.0], [31.9, 633.0], [32.0, 635.0], [32.1, 635.0], [32.2, 635.0], [32.3, 635.0], [32.4, 666.0], [32.5, 666.0], [32.6, 666.0], [32.7, 666.0], [32.8, 666.0], [32.9, 666.0], [33.0, 676.0], [33.1, 676.0], [33.2, 676.0], [33.3, 676.0], [33.4, 689.0], [33.5, 689.0], [33.6, 689.0], [33.7, 692.0], [33.8, 692.0], [33.9, 692.0], [34.0, 694.0], [34.1, 694.0], [34.2, 694.0], [34.3, 694.0], [34.4, 706.0], [34.5, 706.0], [34.6, 706.0], [34.7, 708.0], [34.8, 708.0], [34.9, 708.0], [35.0, 709.0], [35.1, 709.0], [35.2, 709.0], [35.3, 709.0], [35.4, 749.0], [35.5, 749.0], [35.6, 749.0], [35.7, 751.0], [35.8, 751.0], [35.9, 751.0], [36.0, 755.0], [36.1, 755.0], [36.2, 755.0], [36.3, 755.0], [36.4, 763.0], [36.5, 763.0], [36.6, 763.0], [36.7, 767.0], [36.8, 767.0], [36.9, 767.0], [37.0, 769.0], [37.1, 769.0], [37.2, 769.0], [37.3, 769.0], [37.4, 781.0], [37.5, 781.0], [37.6, 781.0], [37.7, 783.0], [37.8, 783.0], [37.9, 783.0], [38.0, 795.0], [38.1, 795.0], [38.2, 795.0], [38.3, 795.0], [38.4, 795.0], [38.5, 795.0], [38.6, 795.0], [38.7, 801.0], [38.8, 801.0], [38.9, 801.0], [39.0, 808.0], [39.1, 808.0], [39.2, 808.0], [39.3, 808.0], [39.4, 809.0], [39.5, 809.0], [39.6, 809.0], [39.7, 810.0], [39.8, 810.0], [39.9, 810.0], [40.0, 810.0], [40.1, 812.0], [40.2, 812.0], [40.3, 812.0], [40.4, 816.0], [40.5, 816.0], [40.6, 816.0], [40.7, 827.0], [40.8, 827.0], [40.9, 827.0], [41.0, 827.0], [41.1, 844.0], [41.2, 844.0], [41.3, 844.0], [41.4, 850.0], [41.5, 850.0], [41.6, 850.0], [41.7, 860.0], [41.8, 860.0], [41.9, 860.0], [42.0, 860.0], [42.1, 861.0], [42.2, 861.0], [42.3, 861.0], [42.4, 878.0], [42.5, 878.0], [42.6, 878.0], [42.7, 887.0], [42.8, 887.0], [42.9, 887.0], [43.0, 887.0], [43.1, 889.0], [43.2, 889.0], [43.3, 889.0], [43.4, 897.0], [43.5, 897.0], [43.6, 897.0], [43.7, 898.0], [43.8, 898.0], [43.9, 898.0], [44.0, 898.0], [44.1, 900.0], [44.2, 900.0], [44.3, 900.0], [44.4, 901.0], [44.5, 901.0], [44.6, 901.0], [44.7, 908.0], [44.8, 908.0], [44.9, 908.0], [45.0, 908.0], [45.1, 920.0], [45.2, 920.0], [45.3, 920.0], [45.4, 920.0], [45.5, 920.0], [45.6, 920.0], [45.7, 921.0], [45.8, 921.0], [45.9, 921.0], [46.0, 921.0], [46.1, 925.0], [46.2, 925.0], [46.3, 925.0], [46.4, 931.0], [46.5, 931.0], [46.6, 931.0], [46.7, 935.0], [46.8, 935.0], [46.9, 935.0], [47.0, 935.0], [47.1, 938.0], [47.2, 938.0], [47.3, 938.0], [47.4, 938.0], [47.5, 938.0], [47.6, 938.0], [47.7, 968.0], [47.8, 968.0], [47.9, 968.0], [48.0, 968.0], [48.1, 970.0], [48.2, 970.0], [48.3, 970.0], [48.4, 980.0], [48.5, 980.0], [48.6, 980.0], [48.7, 983.0], [48.8, 983.0], [48.9, 983.0], [49.0, 983.0], [49.1, 996.0], [49.2, 996.0], [49.3, 996.0], [49.4, 999.0], [49.5, 999.0], [49.6, 999.0], [49.7, 999.0], [49.8, 999.0], [49.9, 999.0], [50.0, 999.0], [50.1, 1004.0], [50.2, 1004.0], [50.3, 1004.0], [50.4, 1009.0], [50.5, 1009.0], [50.6, 1009.0], [50.7, 1012.0], [50.8, 1012.0], [50.9, 1012.0], [51.0, 1012.0], [51.1, 1022.0], [51.2, 1022.0], [51.3, 1022.0], [51.4, 1027.0], [51.5, 1027.0], [51.6, 1027.0], [51.7, 1028.0], [51.8, 1028.0], [51.9, 1028.0], [52.0, 1028.0], [52.1, 1035.0], [52.2, 1035.0], [52.3, 1035.0], [52.4, 1035.0], [52.5, 1035.0], [52.6, 1035.0], [52.7, 1038.0], [52.8, 1038.0], [52.9, 1038.0], [53.0, 1038.0], [53.1, 1039.0], [53.2, 1039.0], [53.3, 1039.0], [53.4, 1044.0], [53.5, 1044.0], [53.6, 1044.0], [53.7, 1053.0], [53.8, 1053.0], [53.9, 1053.0], [54.0, 1053.0], [54.1, 1056.0], [54.2, 1056.0], [54.3, 1056.0], [54.4, 1069.0], [54.5, 1069.0], [54.6, 1069.0], [54.7, 1075.0], [54.8, 1075.0], [54.9, 1075.0], [55.0, 1075.0], [55.1, 1078.0], [55.2, 1078.0], [55.3, 1078.0], [55.4, 1091.0], [55.5, 1091.0], [55.6, 1091.0], [55.7, 1104.0], [55.8, 1104.0], [55.9, 1104.0], [56.0, 1104.0], [56.1, 1106.0], [56.2, 1106.0], [56.3, 1106.0], [56.4, 1112.0], [56.5, 1112.0], [56.6, 1112.0], [56.7, 1112.0], [56.8, 1112.0], [56.9, 1112.0], [57.0, 1112.0], [57.1, 1117.0], [57.2, 1117.0], [57.3, 1117.0], [57.4, 1118.0], [57.5, 1118.0], [57.6, 1118.0], [57.7, 1127.0], [57.8, 1127.0], [57.9, 1127.0], [58.0, 1127.0], [58.1, 1133.0], [58.2, 1133.0], [58.3, 1133.0], [58.4, 1154.0], [58.5, 1154.0], [58.6, 1154.0], [58.7, 1157.0], [58.8, 1157.0], [58.9, 1157.0], [59.0, 1157.0], [59.1, 1158.0], [59.2, 1158.0], [59.3, 1158.0], [59.4, 1166.0], [59.5, 1166.0], [59.6, 1166.0], [59.7, 1187.0], [59.8, 1187.0], [59.9, 1187.0], [60.0, 1187.0], [60.1, 1198.0], [60.2, 1198.0], [60.3, 1198.0], [60.4, 1206.0], [60.5, 1206.0], [60.6, 1206.0], [60.7, 1214.0], [60.8, 1214.0], [60.9, 1214.0], [61.0, 1214.0], [61.1, 1216.0], [61.2, 1216.0], [61.3, 1216.0], [61.4, 1225.0], [61.5, 1225.0], [61.6, 1225.0], [61.7, 1234.0], [61.8, 1234.0], [61.9, 1234.0], [62.0, 1234.0], [62.1, 1234.0], [62.2, 1234.0], [62.3, 1234.0], [62.4, 1245.0], [62.5, 1245.0], [62.6, 1245.0], [62.7, 1251.0], [62.8, 1251.0], [62.9, 1251.0], [63.0, 1251.0], [63.1, 1251.0], [63.2, 1251.0], [63.3, 1251.0], [63.4, 1259.0], [63.5, 1259.0], [63.6, 1259.0], [63.7, 1266.0], [63.8, 1266.0], [63.9, 1266.0], [64.0, 1266.0], [64.1, 1271.0], [64.2, 1271.0], [64.3, 1271.0], [64.4, 1279.0], [64.5, 1279.0], [64.6, 1279.0], [64.7, 1285.0], [64.8, 1285.0], [64.9, 1285.0], [65.0, 1285.0], [65.1, 1286.0], [65.2, 1286.0], [65.3, 1286.0], [65.4, 1308.0], [65.5, 1308.0], [65.6, 1308.0], [65.7, 1318.0], [65.8, 1318.0], [65.9, 1318.0], [66.0, 1318.0], [66.1, 1336.0], [66.2, 1336.0], [66.3, 1336.0], [66.4, 1359.0], [66.5, 1359.0], [66.6, 1359.0], [66.7, 1361.0], [66.8, 1361.0], [66.9, 1361.0], [67.0, 1361.0], [67.1, 1369.0], [67.2, 1369.0], [67.3, 1369.0], [67.4, 1371.0], [67.5, 1371.0], [67.6, 1371.0], [67.7, 1388.0], [67.8, 1388.0], [67.9, 1388.0], [68.0, 1388.0], [68.1, 1389.0], [68.2, 1389.0], [68.3, 1389.0], [68.4, 1390.0], [68.5, 1390.0], [68.6, 1390.0], [68.7, 1391.0], [68.8, 1391.0], [68.9, 1391.0], [69.0, 1391.0], [69.1, 1402.0], [69.2, 1402.0], [69.3, 1402.0], [69.4, 1406.0], [69.5, 1406.0], [69.6, 1406.0], [69.7, 1406.0], [69.8, 1406.0], [69.9, 1406.0], [70.0, 1406.0], [70.1, 1419.0], [70.2, 1419.0], [70.3, 1419.0], [70.4, 1421.0], [70.5, 1421.0], [70.6, 1421.0], [70.7, 1427.0], [70.8, 1427.0], [70.9, 1427.0], [71.0, 1427.0], [71.1, 1434.0], [71.2, 1434.0], [71.3, 1434.0], [71.4, 1439.0], [71.5, 1439.0], [71.6, 1439.0], [71.7, 1440.0], [71.8, 1440.0], [71.9, 1440.0], [72.0, 1440.0], [72.1, 1446.0], [72.2, 1446.0], [72.3, 1446.0], [72.4, 1458.0], [72.5, 1458.0], [72.6, 1458.0], [72.7, 1466.0], [72.8, 1466.0], [72.9, 1466.0], [73.0, 1466.0], [73.1, 1472.0], [73.2, 1472.0], [73.3, 1472.0], [73.4, 1483.0], [73.5, 1483.0], [73.6, 1483.0], [73.7, 1488.0], [73.8, 1488.0], [73.9, 1488.0], [74.0, 1490.0], [74.1, 1490.0], [74.2, 1490.0], [74.3, 1490.0], [74.4, 1498.0], [74.5, 1498.0], [74.6, 1498.0], [74.7, 1515.0], [74.8, 1515.0], [74.9, 1515.0], [75.0, 1526.0], [75.1, 1526.0], [75.2, 1526.0], [75.3, 1526.0], [75.4, 1542.0], [75.5, 1542.0], [75.6, 1542.0], [75.7, 1546.0], [75.8, 1546.0], [75.9, 1546.0], [76.0, 1548.0], [76.1, 1548.0], [76.2, 1548.0], [76.3, 1548.0], [76.4, 1548.0], [76.5, 1548.0], [76.6, 1548.0], [76.7, 1553.0], [76.8, 1553.0], [76.9, 1553.0], [77.0, 1553.0], [77.1, 1553.0], [77.2, 1553.0], [77.3, 1553.0], [77.4, 1553.0], [77.5, 1553.0], [77.6, 1553.0], [77.7, 1574.0], [77.8, 1574.0], [77.9, 1574.0], [78.0, 1578.0], [78.1, 1578.0], [78.2, 1578.0], [78.3, 1578.0], [78.4, 1581.0], [78.5, 1581.0], [78.6, 1581.0], [78.7, 1583.0], [78.8, 1583.0], [78.9, 1583.0], [79.0, 1591.0], [79.1, 1591.0], [79.2, 1591.0], [79.3, 1591.0], [79.4, 1595.0], [79.5, 1595.0], [79.6, 1595.0], [79.7, 1614.0], [79.8, 1614.0], [79.9, 1614.0], [80.0, 1615.0], [80.1, 1615.0], [80.2, 1615.0], [80.3, 1615.0], [80.4, 1622.0], [80.5, 1622.0], [80.6, 1622.0], [80.7, 1624.0], [80.8, 1624.0], [80.9, 1624.0], [81.0, 1624.0], [81.1, 1624.0], [81.2, 1624.0], [81.3, 1624.0], [81.4, 1626.0], [81.5, 1626.0], [81.6, 1626.0], [81.7, 1647.0], [81.8, 1647.0], [81.9, 1647.0], [82.0, 1659.0], [82.1, 1659.0], [82.2, 1659.0], [82.3, 1659.0], [82.4, 1660.0], [82.5, 1660.0], [82.6, 1660.0], [82.7, 1679.0], [82.8, 1679.0], [82.9, 1679.0], [83.0, 1680.0], [83.1, 1680.0], [83.2, 1680.0], [83.3, 1680.0], [83.4, 1681.0], [83.5, 1681.0], [83.6, 1681.0], [83.7, 1691.0], [83.8, 1691.0], [83.9, 1691.0], [84.0, 1712.0], [84.1, 1712.0], [84.2, 1712.0], [84.3, 1712.0], [84.4, 1714.0], [84.5, 1714.0], [84.6, 1714.0], [84.7, 1755.0], [84.8, 1755.0], [84.9, 1755.0], [85.0, 1756.0], [85.1, 1756.0], [85.2, 1756.0], [85.3, 1756.0], [85.4, 1756.0], [85.5, 1756.0], [85.6, 1756.0], [85.7, 1765.0], [85.8, 1765.0], [85.9, 1765.0], [86.0, 1780.0], [86.1, 1780.0], [86.2, 1780.0], [86.3, 1780.0], [86.4, 1782.0], [86.5, 1782.0], [86.6, 1782.0], [86.7, 1787.0], [86.8, 1787.0], [86.9, 1787.0], [87.0, 1792.0], [87.1, 1792.0], [87.2, 1792.0], [87.3, 1792.0], [87.4, 1792.0], [87.5, 1792.0], [87.6, 1792.0], [87.7, 1801.0], [87.8, 1801.0], [87.9, 1801.0], [88.0, 1805.0], [88.1, 1805.0], [88.2, 1805.0], [88.3, 1805.0], [88.4, 1816.0], [88.5, 1816.0], [88.6, 1816.0], [88.7, 1820.0], [88.8, 1820.0], [88.9, 1820.0], [89.0, 1830.0], [89.1, 1830.0], [89.2, 1830.0], [89.3, 1830.0], [89.4, 1836.0], [89.5, 1836.0], [89.6, 1836.0], [89.7, 1837.0], [89.8, 1837.0], [89.9, 1837.0], [90.0, 1840.0], [90.1, 1840.0], [90.2, 1840.0], [90.3, 1840.0], [90.4, 1845.0], [90.5, 1845.0], [90.6, 1845.0], [90.7, 1852.0], [90.8, 1852.0], [90.9, 1852.0], [91.0, 1854.0], [91.1, 1854.0], [91.2, 1854.0], [91.3, 1854.0], [91.4, 1867.0], [91.5, 1867.0], [91.6, 1867.0], [91.7, 1877.0], [91.8, 1877.0], [91.9, 1877.0], [92.0, 1904.0], [92.1, 1904.0], [92.2, 1904.0], [92.3, 1904.0], [92.4, 1908.0], [92.5, 1908.0], [92.6, 1908.0], [92.7, 1908.0], [92.8, 1908.0], [92.9, 1908.0], [93.0, 1909.0], [93.1, 1909.0], [93.2, 1909.0], [93.3, 1909.0], [93.4, 1920.0], [93.5, 1920.0], [93.6, 1920.0], [93.7, 1921.0], [93.8, 1921.0], [93.9, 1921.0], [94.0, 1936.0], [94.1, 1936.0], [94.2, 1936.0], [94.3, 1936.0], [94.4, 1945.0], [94.5, 1945.0], [94.6, 1945.0], [94.7, 1951.0], [94.8, 1951.0], [94.9, 1951.0], [95.0, 1962.0], [95.1, 1962.0], [95.2, 1962.0], [95.3, 1962.0], [95.4, 1973.0], [95.5, 1973.0], [95.6, 1973.0], [95.7, 1986.0], [95.8, 1986.0], [95.9, 1986.0], [96.0, 1989.0], [96.1, 1989.0], [96.2, 1989.0], [96.3, 1989.0], [96.4, 1990.0], [96.5, 1990.0], [96.6, 1990.0], [96.7, 1992.0], [96.8, 1992.0], [96.9, 1992.0], [97.0, 2002.0], [97.1, 2002.0], [97.2, 2002.0], [97.3, 2002.0], [97.4, 2004.0], [97.5, 2004.0], [97.6, 2004.0], [97.7, 2027.0], [97.8, 2027.0], [97.9, 2027.0], [98.0, 2030.0], [98.1, 2030.0], [98.2, 2030.0], [98.3, 2030.0], [98.4, 2058.0], [98.5, 2058.0], [98.6, 2058.0], [98.7, 2061.0], [98.8, 2061.0], [98.9, 2061.0], [99.0, 2087.0], [99.1, 2087.0], [99.2, 2087.0], [99.3, 2087.0], [99.4, 2090.0], [99.5, 2090.0], [99.6, 2090.0], [99.7, 3118.0], [99.8, 3118.0], [99.9, 3118.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[0.0, 5.0], [0.1, 5.0], [0.2, 5.0], [0.3, 7.0], [0.4, 8.0], [0.5, 15.0], [0.6, 15.0], [0.7, 22.0], [0.8, 26.0], [0.9, 27.0], [1.0, 27.0], [1.1, 27.0], [1.2, 27.0], [1.3, 27.0], [1.4, 29.0], [1.5, 30.0], [1.6, 30.0], [1.7, 30.0], [1.8, 30.0], [1.9, 30.0], [2.0, 31.0], [2.1, 31.0], [2.2, 31.0], [2.3, 31.0], [2.4, 32.0], [2.5, 33.0], [2.6, 33.0], [2.7, 33.0], [2.8, 34.0], [2.9, 37.0], [3.0, 37.0], [3.1, 37.0], [3.2, 37.0], [3.3, 38.0], [3.4, 39.0], [3.5, 40.0], [3.6, 40.0], [3.7, 40.0], [3.8, 41.0], [3.9, 41.0], [4.0, 41.0], [4.1, 42.0], [4.2, 42.0], [4.3, 43.0], [4.4, 45.0], [4.5, 45.0], [4.6, 45.0], [4.7, 45.0], [4.8, 47.0], [4.9, 48.0], [5.0, 49.0], [5.1, 49.0], [5.2, 51.0], [5.3, 52.0], [5.4, 52.0], [5.5, 52.0], [5.6, 52.0], [5.7, 53.0], [5.8, 53.0], [5.9, 54.0], [6.0, 54.0], [6.1, 54.0], [6.2, 55.0], [6.3, 55.0], [6.4, 56.0], [6.5, 56.0], [6.6, 56.0], [6.7, 56.0], [6.8, 56.0], [6.9, 57.0], [7.0, 58.0], [7.1, 58.0], [7.2, 58.0], [7.3, 58.0], [7.4, 59.0], [7.5, 59.0], [7.6, 60.0], [7.7, 61.0], [7.8, 62.0], [7.9, 62.0], [8.0, 63.0], [8.1, 63.0], [8.2, 63.0], [8.3, 63.0], [8.4, 63.0], [8.5, 63.0], [8.6, 64.0], [8.7, 65.0], [8.8, 66.0], [8.9, 66.0], [9.0, 67.0], [9.1, 67.0], [9.2, 68.0], [9.3, 69.0], [9.4, 69.0], [9.5, 71.0], [9.6, 71.0], [9.7, 72.0], [9.8, 73.0], [9.9, 73.0], [10.0, 75.0], [10.1, 75.0], [10.2, 76.0], [10.3, 77.0], [10.4, 79.0], [10.5, 80.0], [10.6, 81.0], [10.7, 81.0], [10.8, 82.0], [10.9, 82.0], [11.0, 84.0], [11.1, 84.0], [11.2, 85.0], [11.3, 85.0], [11.4, 86.0], [11.5, 86.0], [11.6, 86.0], [11.7, 87.0], [11.8, 87.0], [11.9, 88.0], [12.0, 89.0], [12.1, 89.0], [12.2, 89.0], [12.3, 89.0], [12.4, 90.0], [12.5, 90.0], [12.6, 92.0], [12.7, 93.0], [12.8, 93.0], [12.9, 93.0], [13.0, 96.0], [13.1, 96.0], [13.2, 96.0], [13.3, 96.0], [13.4, 97.0], [13.5, 97.0], [13.6, 97.0], [13.7, 97.0], [13.8, 98.0], [13.9, 98.0], [14.0, 99.0], [14.1, 99.0], [14.2, 100.0], [14.3, 100.0], [14.4, 102.0], [14.5, 102.0], [14.6, 103.0], [14.7, 104.0], [14.8, 104.0], [14.9, 105.0], [15.0, 106.0], [15.1, 106.0], [15.2, 106.0], [15.3, 107.0], [15.4, 108.0], [15.5, 109.0], [15.6, 109.0], [15.7, 109.0], [15.8, 110.0], [15.9, 111.0], [16.0, 112.0], [16.1, 112.0], [16.2, 112.0], [16.3, 112.0], [16.4, 112.0], [16.5, 113.0], [16.6, 113.0], [16.7, 114.0], [16.8, 114.0], [16.9, 114.0], [17.0, 114.0], [17.1, 114.0], [17.2, 114.0], [17.3, 115.0], [17.4, 116.0], [17.5, 116.0], [17.6, 116.0], [17.7, 117.0], [17.8, 117.0], [17.9, 118.0], [18.0, 119.0], [18.1, 119.0], [18.2, 120.0], [18.3, 121.0], [18.4, 122.0], [18.5, 124.0], [18.6, 126.0], [18.7, 127.0], [18.8, 127.0], [18.9, 127.0], [19.0, 132.0], [19.1, 132.0], [19.2, 132.0], [19.3, 132.0], [19.4, 133.0], [19.5, 134.0], [19.6, 135.0], [19.7, 136.0], [19.8, 138.0], [19.9, 138.0], [20.0, 138.0], [20.1, 138.0], [20.2, 138.0], [20.3, 139.0], [20.4, 140.0], [20.5, 141.0], [20.6, 143.0], [20.7, 143.0], [20.8, 145.0], [20.9, 146.0], [21.0, 148.0], [21.1, 148.0], [21.2, 148.0], [21.3, 149.0], [21.4, 149.0], [21.5, 149.0], [21.6, 150.0], [21.7, 150.0], [21.8, 151.0], [21.9, 152.0], [22.0, 152.0], [22.1, 152.0], [22.2, 153.0], [22.3, 156.0], [22.4, 156.0], [22.5, 156.0], [22.6, 157.0], [22.7, 157.0], [22.8, 157.0], [22.9, 158.0], [23.0, 160.0], [23.1, 160.0], [23.2, 162.0], [23.3, 162.0], [23.4, 163.0], [23.5, 163.0], [23.6, 165.0], [23.7, 166.0], [23.8, 167.0], [23.9, 167.0], [24.0, 168.0], [24.1, 168.0], [24.2, 168.0], [24.3, 169.0], [24.4, 170.0], [24.5, 172.0], [24.6, 174.0], [24.7, 175.0], [24.8, 176.0], [24.9, 179.0], [25.0, 180.0], [25.1, 180.0], [25.2, 180.0], [25.3, 185.0], [25.4, 187.0], [25.5, 189.0], [25.6, 190.0], [25.7, 196.0], [25.8, 198.0], [25.9, 204.0], [26.0, 207.0], [26.1, 207.0], [26.2, 211.0], [26.3, 212.0], [26.4, 216.0], [26.5, 218.0], [26.6, 218.0], [26.7, 219.0], [26.8, 220.0], [26.9, 220.0], [27.0, 221.0], [27.1, 221.0], [27.2, 225.0], [27.3, 227.0], [27.4, 228.0], [27.5, 233.0], [27.6, 233.0], [27.7, 234.0], [27.8, 234.0], [27.9, 235.0], [28.0, 236.0], [28.1, 236.0], [28.2, 237.0], [28.3, 238.0], [28.4, 238.0], [28.5, 244.0], [28.6, 245.0], [28.7, 246.0], [28.8, 247.0], [28.9, 249.0], [29.0, 249.0], [29.1, 249.0], [29.2, 250.0], [29.3, 252.0], [29.4, 252.0], [29.5, 255.0], [29.6, 256.0], [29.7, 257.0], [29.8, 261.0], [29.9, 267.0], [30.0, 267.0], [30.1, 267.0], [30.2, 267.0], [30.3, 270.0], [30.4, 272.0], [30.5, 273.0], [30.6, 277.0], [30.7, 283.0], [30.8, 284.0], [30.9, 286.0], [31.0, 286.0], [31.1, 286.0], [31.2, 288.0], [31.3, 289.0], [31.4, 291.0], [31.5, 292.0], [31.6, 292.0], [31.7, 294.0], [31.8, 295.0], [31.9, 299.0], [32.0, 299.0], [32.1, 299.0], [32.2, 301.0], [32.3, 307.0], [32.4, 310.0], [32.5, 311.0], [32.6, 312.0], [32.7, 313.0], [32.8, 316.0], [32.9, 316.0], [33.0, 318.0], [33.1, 318.0], [33.2, 320.0], [33.3, 320.0], [33.4, 329.0], [33.5, 329.0], [33.6, 330.0], [33.7, 332.0], [33.8, 335.0], [33.9, 335.0], [34.0, 336.0], [34.1, 336.0], [34.2, 337.0], [34.3, 337.0], [34.4, 338.0], [34.5, 341.0], [34.6, 343.0], [34.7, 345.0], [34.8, 348.0], [34.9, 348.0], [35.0, 349.0], [35.1, 349.0], [35.2, 350.0], [35.3, 351.0], [35.4, 351.0], [35.5, 352.0], [35.6, 356.0], [35.7, 359.0], [35.8, 360.0], [35.9, 360.0], [36.0, 363.0], [36.1, 363.0], [36.2, 364.0], [36.3, 365.0], [36.4, 366.0], [36.5, 369.0], [36.6, 369.0], [36.7, 370.0], [36.8, 370.0], [36.9, 373.0], [37.0, 375.0], [37.1, 375.0], [37.2, 376.0], [37.3, 376.0], [37.4, 376.0], [37.5, 378.0], [37.6, 379.0], [37.7, 381.0], [37.8, 382.0], [37.9, 383.0], [38.0, 383.0], [38.1, 386.0], [38.2, 386.0], [38.3, 390.0], [38.4, 390.0], [38.5, 395.0], [38.6, 396.0], [38.7, 399.0], [38.8, 405.0], [38.9, 408.0], [39.0, 408.0], [39.1, 410.0], [39.2, 412.0], [39.3, 413.0], [39.4, 413.0], [39.5, 415.0], [39.6, 415.0], [39.7, 416.0], [39.8, 417.0], [39.9, 417.0], [40.0, 417.0], [40.1, 417.0], [40.2, 418.0], [40.3, 419.0], [40.4, 420.0], [40.5, 420.0], [40.6, 421.0], [40.7, 422.0], [40.8, 424.0], [40.9, 424.0], [41.0, 424.0], [41.1, 424.0], [41.2, 426.0], [41.3, 428.0], [41.4, 428.0], [41.5, 431.0], [41.6, 433.0], [41.7, 433.0], [41.8, 437.0], [41.9, 440.0], [42.0, 440.0], [42.1, 441.0], [42.2, 441.0], [42.3, 443.0], [42.4, 444.0], [42.5, 447.0], [42.6, 448.0], [42.7, 448.0], [42.8, 452.0], [42.9, 453.0], [43.0, 453.0], [43.1, 453.0], [43.2, 453.0], [43.3, 456.0], [43.4, 459.0], [43.5, 461.0], [43.6, 462.0], [43.7, 462.0], [43.8, 465.0], [43.9, 467.0], [44.0, 467.0], [44.1, 472.0], [44.2, 477.0], [44.3, 479.0], [44.4, 484.0], [44.5, 485.0], [44.6, 485.0], [44.7, 489.0], [44.8, 492.0], [44.9, 495.0], [45.0, 495.0], [45.1, 497.0], [45.2, 498.0], [45.3, 500.0], [45.4, 509.0], [45.5, 512.0], [45.6, 512.0], [45.7, 515.0], [45.8, 517.0], [45.9, 518.0], [46.0, 518.0], [46.1, 520.0], [46.2, 521.0], [46.3, 524.0], [46.4, 524.0], [46.5, 526.0], [46.6, 526.0], [46.7, 526.0], [46.8, 529.0], [46.9, 532.0], [47.0, 532.0], [47.1, 533.0], [47.2, 533.0], [47.3, 534.0], [47.4, 535.0], [47.5, 535.0], [47.6, 537.0], [47.7, 539.0], [47.8, 540.0], [47.9, 541.0], [48.0, 541.0], [48.1, 541.0], [48.2, 542.0], [48.3, 544.0], [48.4, 545.0], [48.5, 547.0], [48.6, 547.0], [48.7, 547.0], [48.8, 548.0], [48.9, 548.0], [49.0, 548.0], [49.1, 551.0], [49.2, 552.0], [49.3, 552.0], [49.4, 552.0], [49.5, 553.0], [49.6, 555.0], [49.7, 556.0], [49.8, 560.0], [49.9, 561.0], [50.0, 561.0], [50.1, 562.0], [50.2, 563.0], [50.3, 563.0], [50.4, 564.0], [50.5, 566.0], [50.6, 567.0], [50.7, 568.0], [50.8, 571.0], [50.9, 574.0], [51.0, 574.0], [51.1, 575.0], [51.2, 575.0], [51.3, 576.0], [51.4, 588.0], [51.5, 590.0], [51.6, 594.0], [51.7, 594.0], [51.8, 596.0], [51.9, 598.0], [52.0, 598.0], [52.1, 598.0], [52.2, 600.0], [52.3, 600.0], [52.4, 601.0], [52.5, 601.0], [52.6, 602.0], [52.7, 603.0], [52.8, 603.0], [52.9, 605.0], [53.0, 605.0], [53.1, 606.0], [53.2, 606.0], [53.3, 606.0], [53.4, 607.0], [53.5, 609.0], [53.6, 609.0], [53.7, 610.0], [53.8, 611.0], [53.9, 611.0], [54.0, 611.0], [54.1, 620.0], [54.2, 622.0], [54.3, 623.0], [54.4, 625.0], [54.5, 627.0], [54.6, 629.0], [54.7, 630.0], [54.8, 631.0], [54.9, 631.0], [55.0, 631.0], [55.1, 633.0], [55.2, 634.0], [55.3, 638.0], [55.4, 639.0], [55.5, 639.0], [55.6, 640.0], [55.7, 645.0], [55.8, 646.0], [55.9, 647.0], [56.0, 647.0], [56.1, 648.0], [56.2, 649.0], [56.3, 650.0], [56.4, 651.0], [56.5, 651.0], [56.6, 653.0], [56.7, 656.0], [56.8, 657.0], [56.9, 660.0], [57.0, 660.0], [57.1, 661.0], [57.2, 664.0], [57.3, 667.0], [57.4, 668.0], [57.5, 670.0], [57.6, 670.0], [57.7, 676.0], [57.8, 676.0], [57.9, 677.0], [58.0, 677.0], [58.1, 680.0], [58.2, 686.0], [58.3, 687.0], [58.4, 692.0], [58.5, 692.0], [58.6, 699.0], [58.7, 701.0], [58.8, 703.0], [58.9, 703.0], [59.0, 703.0], [59.1, 705.0], [59.2, 707.0], [59.3, 708.0], [59.4, 708.0], [59.5, 708.0], [59.6, 715.0], [59.7, 715.0], [59.8, 718.0], [59.9, 722.0], [60.0, 722.0], [60.1, 730.0], [60.2, 731.0], [60.3, 735.0], [60.4, 735.0], [60.5, 737.0], [60.6, 738.0], [60.7, 739.0], [60.8, 740.0], [60.9, 740.0], [61.0, 740.0], [61.1, 746.0], [61.2, 746.0], [61.3, 747.0], [61.4, 748.0], [61.5, 748.0], [61.6, 751.0], [61.7, 753.0], [61.8, 759.0], [61.9, 765.0], [62.0, 765.0], [62.1, 766.0], [62.2, 767.0], [62.3, 768.0], [62.4, 771.0], [62.5, 771.0], [62.6, 779.0], [62.7, 781.0], [62.8, 784.0], [62.9, 797.0], [63.0, 797.0], [63.1, 797.0], [63.2, 798.0], [63.3, 799.0], [63.4, 800.0], [63.5, 803.0], [63.6, 806.0], [63.7, 806.0], [63.8, 807.0], [63.9, 808.0], [64.0, 808.0], [64.1, 811.0], [64.2, 815.0], [64.3, 817.0], [64.4, 819.0], [64.5, 823.0], [64.6, 825.0], [64.7, 826.0], [64.8, 826.0], [64.9, 833.0], [65.0, 833.0], [65.1, 836.0], [65.2, 842.0], [65.3, 844.0], [65.4, 846.0], [65.5, 851.0], [65.6, 852.0], [65.7, 854.0], [65.8, 858.0], [65.9, 858.0], [66.0, 858.0], [66.1, 862.0], [66.2, 864.0], [66.3, 865.0], [66.4, 867.0], [66.5, 869.0], [66.6, 870.0], [66.7, 872.0], [66.8, 872.0], [66.9, 872.0], [67.0, 872.0], [67.1, 876.0], [67.2, 877.0], [67.3, 877.0], [67.4, 878.0], [67.5, 878.0], [67.6, 878.0], [67.7, 879.0], [67.8, 880.0], [67.9, 881.0], [68.0, 881.0], [68.1, 882.0], [68.2, 883.0], [68.3, 885.0], [68.4, 885.0], [68.5, 890.0], [68.6, 890.0], [68.7, 892.0], [68.8, 897.0], [68.9, 907.0], [69.0, 907.0], [69.1, 911.0], [69.2, 913.0], [69.3, 917.0], [69.4, 918.0], [69.5, 918.0], [69.6, 919.0], [69.7, 919.0], [69.8, 920.0], [69.9, 920.0], [70.0, 920.0], [70.1, 921.0], [70.2, 922.0], [70.3, 922.0], [70.4, 922.0], [70.5, 926.0], [70.6, 929.0], [70.7, 929.0], [70.8, 930.0], [70.9, 933.0], [71.0, 933.0], [71.1, 936.0], [71.2, 941.0], [71.3, 942.0], [71.4, 943.0], [71.5, 944.0], [71.6, 944.0], [71.7, 948.0], [71.8, 949.0], [71.9, 950.0], [72.0, 950.0], [72.1, 956.0], [72.2, 958.0], [72.3, 967.0], [72.4, 969.0], [72.5, 970.0], [72.6, 973.0], [72.7, 976.0], [72.8, 976.0], [72.9, 983.0], [73.0, 983.0], [73.1, 987.0], [73.2, 989.0], [73.3, 990.0], [73.4, 991.0], [73.5, 994.0], [73.6, 998.0], [73.7, 999.0], [73.8, 1000.0], [73.9, 1000.0], [74.0, 1000.0], [74.1, 1001.0], [74.2, 1004.0], [74.3, 1007.0], [74.4, 1014.0], [74.5, 1014.0], [74.6, 1018.0], [74.7, 1019.0], [74.8, 1019.0], [74.9, 1022.0], [75.0, 1022.0], [75.1, 1022.0], [75.2, 1023.0], [75.3, 1024.0], [75.4, 1025.0], [75.5, 1026.0], [75.6, 1029.0], [75.7, 1032.0], [75.8, 1033.0], [75.9, 1035.0], [76.0, 1035.0], [76.1, 1036.0], [76.2, 1038.0], [76.3, 1042.0], [76.4, 1042.0], [76.5, 1046.0], [76.6, 1048.0], [76.7, 1052.0], [76.8, 1053.0], [76.9, 1054.0], [77.0, 1054.0], [77.1, 1063.0], [77.2, 1063.0], [77.3, 1065.0], [77.4, 1066.0], [77.5, 1066.0], [77.6, 1066.0], [77.7, 1067.0], [77.8, 1072.0], [77.9, 1073.0], [78.0, 1073.0], [78.1, 1075.0], [78.2, 1077.0], [78.3, 1081.0], [78.4, 1086.0], [78.5, 1086.0], [78.6, 1088.0], [78.7, 1091.0], [78.8, 1091.0], [78.9, 1092.0], [79.0, 1092.0], [79.1, 1094.0], [79.2, 1096.0], [79.3, 1097.0], [79.4, 1100.0], [79.5, 1104.0], [79.6, 1116.0], [79.7, 1116.0], [79.8, 1119.0], [79.9, 1121.0], [80.0, 1121.0], [80.1, 1125.0], [80.2, 1125.0], [80.3, 1133.0], [80.4, 1141.0], [80.5, 1142.0], [80.6, 1145.0], [80.7, 1150.0], [80.8, 1150.0], [80.9, 1151.0], [81.0, 1151.0], [81.1, 1151.0], [81.2, 1169.0], [81.3, 1173.0], [81.4, 1181.0], [81.5, 1192.0], [81.6, 1196.0], [81.7, 1199.0], [81.8, 1201.0], [81.9, 1202.0], [82.0, 1202.0], [82.1, 1202.0], [82.2, 1206.0], [82.3, 1213.0], [82.4, 1214.0], [82.5, 1227.0], [82.6, 1231.0], [82.7, 1232.0], [82.8, 1232.0], [82.9, 1233.0], [83.0, 1233.0], [83.1, 1238.0], [83.2, 1246.0], [83.3, 1247.0], [83.4, 1248.0], [83.5, 1254.0], [83.6, 1260.0], [83.7, 1260.0], [83.8, 1265.0], [83.9, 1265.0], [84.0, 1265.0], [84.1, 1281.0], [84.2, 1284.0], [84.3, 1286.0], [84.4, 1287.0], [84.5, 1289.0], [84.6, 1289.0], [84.7, 1290.0], [84.8, 1296.0], [84.9, 1302.0], [85.0, 1302.0], [85.1, 1307.0], [85.2, 1314.0], [85.3, 1323.0], [85.4, 1323.0], [85.5, 1324.0], [85.6, 1327.0], [85.7, 1332.0], [85.8, 1338.0], [85.9, 1338.0], [86.0, 1338.0], [86.1, 1342.0], [86.2, 1345.0], [86.3, 1348.0], [86.4, 1349.0], [86.5, 1352.0], [86.6, 1354.0], [86.7, 1356.0], [86.8, 1361.0], [86.9, 1362.0], [87.0, 1362.0], [87.1, 1366.0], [87.2, 1367.0], [87.3, 1373.0], [87.4, 1374.0], [87.5, 1382.0], [87.6, 1388.0], [87.7, 1413.0], [87.8, 1421.0], [87.9, 1424.0], [88.0, 1424.0], [88.1, 1436.0], [88.2, 1460.0], [88.3, 1460.0], [88.4, 1461.0], [88.5, 1466.0], [88.6, 1468.0], [88.7, 1471.0], [88.8, 1475.0], [88.9, 1480.0], [89.0, 1480.0], [89.1, 1481.0], [89.2, 1495.0], [89.3, 1511.0], [89.4, 1518.0], [89.5, 1537.0], [89.6, 1540.0], [89.7, 1543.0], [89.8, 1548.0], [89.9, 1548.0], [90.0, 1548.0], [90.1, 1549.0], [90.2, 1553.0], [90.3, 1567.0], [90.4, 1575.0], [90.5, 1578.0], [90.6, 1590.0], [90.7, 1595.0], [90.8, 1595.0], [90.9, 1600.0], [91.0, 1600.0], [91.1, 1602.0], [91.2, 1620.0], [91.3, 1627.0], [91.4, 1631.0], [91.5, 1631.0], [91.6, 1636.0], [91.7, 1643.0], [91.8, 1644.0], [91.9, 1660.0], [92.0, 1660.0], [92.1, 1663.0], [92.2, 1667.0], [92.3, 1684.0], [92.4, 1687.0], [92.5, 1699.0], [92.6, 1704.0], [92.7, 1713.0], [92.8, 1739.0], [92.9, 1777.0], [93.0, 1777.0], [93.1, 1800.0], [93.2, 1813.0], [93.3, 1826.0], [93.4, 1838.0], [93.5, 1864.0], [93.6, 1880.0], [93.7, 1880.0], [93.8, 1887.0], [93.9, 1907.0], [94.0, 1907.0], [94.1, 1933.0], [94.2, 1940.0], [94.3, 1951.0], [94.4, 1970.0], [94.5, 2005.0], [94.6, 2007.0], [94.7, 2013.0], [94.8, 2016.0], [94.9, 2046.0], [95.0, 2046.0], [95.1, 2048.0], [95.2, 2076.0], [95.3, 2120.0], [95.4, 2197.0], [95.5, 2226.0], [95.6, 2280.0], [95.7, 2300.0], [95.8, 2337.0], [95.9, 2340.0], [96.0, 2340.0], [96.1, 2359.0], [96.2, 2361.0], [96.3, 2365.0], [96.4, 2379.0], [96.5, 2390.0], [96.6, 2396.0], [96.7, 2407.0], [96.8, 2423.0], [96.9, 2431.0], [97.0, 2431.0], [97.1, 2459.0], [97.2, 2461.0], [97.3, 2492.0], [97.4, 2496.0], [97.5, 2516.0], [97.6, 2516.0], [97.7, 2566.0], [97.8, 2582.0], [97.9, 2605.0], [98.0, 2605.0], [98.1, 2618.0], [98.2, 2652.0], [98.3, 2657.0], [98.4, 2664.0], [98.5, 2677.0], [98.6, 2694.0], [98.7, 2766.0], [98.8, 2768.0], [98.9, 2781.0], [99.0, 2781.0], [99.1, 2792.0], [99.2, 2808.0], [99.3, 2859.0], [99.4, 2882.0], [99.5, 2907.0], [99.6, 3048.0], [99.7, 3117.0], [99.8, 3152.0], [99.9, 3748.0], [100.0, 3748.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 12.0], [0.1, 12.0], [0.2, 12.0], [0.3, 12.0], [0.4, 14.0], [0.5, 16.0], [0.6, 16.0], [0.7, 17.0], [0.8, 22.0], [0.9, 23.0], [1.0, 24.0], [1.1, 24.0], [1.2, 25.0], [1.3, 25.0], [1.4, 26.0], [1.5, 27.0], [1.6, 27.0], [1.7, 29.0], [1.8, 30.0], [1.9, 30.0], [2.0, 30.0], [2.1, 34.0], [2.2, 35.0], [2.3, 35.0], [2.4, 37.0], [2.5, 39.0], [2.6, 39.0], [2.7, 39.0], [2.8, 40.0], [2.9, 41.0], [3.0, 41.0], [3.1, 42.0], [3.2, 42.0], [3.3, 42.0], [3.4, 43.0], [3.5, 46.0], [3.6, 47.0], [3.7, 48.0], [3.8, 48.0], [3.9, 49.0], [4.0, 49.0], [4.1, 50.0], [4.2, 50.0], [4.3, 51.0], [4.4, 54.0], [4.5, 54.0], [4.6, 56.0], [4.7, 57.0], [4.8, 58.0], [4.9, 58.0], [5.0, 59.0], [5.1, 59.0], [5.2, 60.0], [5.3, 61.0], [5.4, 61.0], [5.5, 61.0], [5.6, 62.0], [5.7, 63.0], [5.8, 63.0], [5.9, 64.0], [6.0, 64.0], [6.1, 64.0], [6.2, 64.0], [6.3, 65.0], [6.4, 65.0], [6.5, 66.0], [6.6, 68.0], [6.7, 68.0], [6.8, 68.0], [6.9, 70.0], [7.0, 70.0], [7.1, 70.0], [7.2, 70.0], [7.3, 71.0], [7.4, 71.0], [7.5, 71.0], [7.6, 72.0], [7.7, 72.0], [7.8, 72.0], [7.9, 73.0], [8.0, 73.0], [8.1, 73.0], [8.2, 73.0], [8.3, 74.0], [8.4, 76.0], [8.5, 76.0], [8.6, 78.0], [8.7, 79.0], [8.8, 79.0], [8.9, 80.0], [9.0, 80.0], [9.1, 80.0], [9.2, 81.0], [9.3, 82.0], [9.4, 83.0], [9.5, 85.0], [9.6, 86.0], [9.7, 88.0], [9.8, 89.0], [9.9, 91.0], [10.0, 92.0], [10.1, 92.0], [10.2, 94.0], [10.3, 94.0], [10.4, 94.0], [10.5, 95.0], [10.6, 95.0], [10.7, 97.0], [10.8, 97.0], [10.9, 99.0], [11.0, 100.0], [11.1, 100.0], [11.2, 101.0], [11.3, 101.0], [11.4, 101.0], [11.5, 102.0], [11.6, 102.0], [11.7, 102.0], [11.8, 103.0], [11.9, 104.0], [12.0, 104.0], [12.1, 104.0], [12.2, 105.0], [12.3, 105.0], [12.4, 105.0], [12.5, 107.0], [12.6, 107.0], [12.7, 110.0], [12.8, 110.0], [12.9, 110.0], [13.0, 111.0], [13.1, 111.0], [13.2, 112.0], [13.3, 114.0], [13.4, 115.0], [13.5, 116.0], [13.6, 117.0], [13.7, 119.0], [13.8, 120.0], [13.9, 122.0], [14.0, 123.0], [14.1, 123.0], [14.2, 124.0], [14.3, 124.0], [14.4, 127.0], [14.5, 127.0], [14.6, 128.0], [14.7, 128.0], [14.8, 128.0], [14.9, 129.0], [15.0, 129.0], [15.1, 129.0], [15.2, 130.0], [15.3, 131.0], [15.4, 131.0], [15.5, 133.0], [15.6, 133.0], [15.7, 134.0], [15.8, 134.0], [15.9, 137.0], [16.0, 137.0], [16.1, 137.0], [16.2, 139.0], [16.3, 140.0], [16.4, 141.0], [16.5, 143.0], [16.6, 143.0], [16.7, 143.0], [16.8, 144.0], [16.9, 145.0], [17.0, 145.0], [17.1, 145.0], [17.2, 145.0], [17.3, 145.0], [17.4, 146.0], [17.5, 146.0], [17.6, 147.0], [17.7, 148.0], [17.8, 148.0], [17.9, 150.0], [18.0, 150.0], [18.1, 150.0], [18.2, 152.0], [18.3, 153.0], [18.4, 154.0], [18.5, 156.0], [18.6, 157.0], [18.7, 158.0], [18.8, 158.0], [18.9, 158.0], [19.0, 159.0], [19.1, 159.0], [19.2, 160.0], [19.3, 160.0], [19.4, 161.0], [19.5, 162.0], [19.6, 163.0], [19.7, 164.0], [19.8, 164.0], [19.9, 166.0], [20.0, 166.0], [20.1, 166.0], [20.2, 171.0], [20.3, 171.0], [20.4, 174.0], [20.5, 175.0], [20.6, 175.0], [20.7, 179.0], [20.8, 179.0], [20.9, 180.0], [21.0, 182.0], [21.1, 182.0], [21.2, 182.0], [21.3, 183.0], [21.4, 185.0], [21.5, 185.0], [21.6, 186.0], [21.7, 186.0], [21.8, 186.0], [21.9, 188.0], [22.0, 190.0], [22.1, 190.0], [22.2, 191.0], [22.3, 191.0], [22.4, 195.0], [22.5, 197.0], [22.6, 197.0], [22.7, 198.0], [22.8, 198.0], [22.9, 200.0], [23.0, 201.0], [23.1, 201.0], [23.2, 202.0], [23.3, 203.0], [23.4, 204.0], [23.5, 205.0], [23.6, 205.0], [23.7, 205.0], [23.8, 206.0], [23.9, 208.0], [24.0, 210.0], [24.1, 210.0], [24.2, 211.0], [24.3, 212.0], [24.4, 212.0], [24.5, 214.0], [24.6, 216.0], [24.7, 219.0], [24.8, 219.0], [24.9, 221.0], [25.0, 222.0], [25.1, 222.0], [25.2, 223.0], [25.3, 232.0], [25.4, 233.0], [25.5, 235.0], [25.6, 241.0], [25.7, 247.0], [25.8, 248.0], [25.9, 250.0], [26.0, 251.0], [26.1, 251.0], [26.2, 253.0], [26.3, 256.0], [26.4, 258.0], [26.5, 263.0], [26.6, 264.0], [26.7, 267.0], [26.8, 274.0], [26.9, 283.0], [27.0, 285.0], [27.1, 285.0], [27.2, 286.0], [27.3, 286.0], [27.4, 297.0], [27.5, 307.0], [27.6, 311.0], [27.7, 313.0], [27.8, 313.0], [27.9, 314.0], [28.0, 327.0], [28.1, 327.0], [28.2, 328.0], [28.3, 329.0], [28.4, 329.0], [28.5, 331.0], [28.6, 333.0], [28.7, 336.0], [28.8, 337.0], [28.9, 337.0], [29.0, 338.0], [29.1, 338.0], [29.2, 343.0], [29.3, 350.0], [29.4, 352.0], [29.5, 353.0], [29.6, 353.0], [29.7, 354.0], [29.8, 359.0], [29.9, 363.0], [30.0, 364.0], [30.1, 364.0], [30.2, 365.0], [30.3, 370.0], [30.4, 375.0], [30.5, 376.0], [30.6, 377.0], [30.7, 380.0], [30.8, 382.0], [30.9, 391.0], [31.0, 393.0], [31.1, 393.0], [31.2, 393.0], [31.3, 400.0], [31.4, 402.0], [31.5, 405.0], [31.6, 407.0], [31.7, 408.0], [31.8, 408.0], [31.9, 408.0], [32.0, 411.0], [32.1, 411.0], [32.2, 412.0], [32.3, 413.0], [32.4, 414.0], [32.5, 417.0], [32.6, 418.0], [32.7, 420.0], [32.8, 424.0], [32.9, 427.0], [33.0, 430.0], [33.1, 430.0], [33.2, 432.0], [33.3, 433.0], [33.4, 433.0], [33.5, 437.0], [33.6, 437.0], [33.7, 438.0], [33.8, 438.0], [33.9, 440.0], [34.0, 440.0], [34.1, 440.0], [34.2, 441.0], [34.3, 443.0], [34.4, 444.0], [34.5, 450.0], [34.6, 452.0], [34.7, 467.0], [34.8, 470.0], [34.9, 475.0], [35.0, 477.0], [35.1, 477.0], [35.2, 477.0], [35.3, 478.0], [35.4, 479.0], [35.5, 480.0], [35.6, 484.0], [35.7, 484.0], [35.8, 484.0], [35.9, 487.0], [36.0, 493.0], [36.1, 493.0], [36.2, 495.0], [36.3, 499.0], [36.4, 507.0], [36.5, 508.0], [36.6, 513.0], [36.7, 519.0], [36.8, 530.0], [36.9, 532.0], [37.0, 532.0], [37.1, 535.0], [37.2, 536.0], [37.3, 540.0], [37.4, 542.0], [37.5, 544.0], [37.6, 544.0], [37.7, 556.0], [37.8, 556.0], [37.9, 558.0], [38.0, 558.0], [38.1, 558.0], [38.2, 559.0], [38.3, 561.0], [38.4, 561.0], [38.5, 571.0], [38.6, 572.0], [38.7, 575.0], [38.8, 576.0], [38.9, 581.0], [39.0, 581.0], [39.1, 591.0], [39.2, 592.0], [39.3, 592.0], [39.4, 595.0], [39.5, 596.0], [39.6, 598.0], [39.7, 599.0], [39.8, 602.0], [39.9, 603.0], [40.0, 603.0], [40.1, 603.0], [40.2, 604.0], [40.3, 609.0], [40.4, 611.0], [40.5, 613.0], [40.6, 619.0], [40.7, 619.0], [40.8, 624.0], [40.9, 624.0], [41.0, 624.0], [41.1, 626.0], [41.2, 628.0], [41.3, 631.0], [41.4, 632.0], [41.5, 632.0], [41.6, 639.0], [41.7, 639.0], [41.8, 650.0], [41.9, 660.0], [42.0, 660.0], [42.1, 668.0], [42.2, 673.0], [42.3, 677.0], [42.4, 678.0], [42.5, 683.0], [42.6, 685.0], [42.7, 686.0], [42.8, 690.0], [42.9, 690.0], [43.0, 690.0], [43.1, 693.0], [43.2, 697.0], [43.3, 698.0], [43.4, 698.0], [43.5, 701.0], [43.6, 702.0], [43.7, 707.0], [43.8, 708.0], [43.9, 718.0], [44.0, 718.0], [44.1, 721.0], [44.2, 727.0], [44.3, 730.0], [44.4, 731.0], [44.5, 733.0], [44.6, 735.0], [44.7, 742.0], [44.8, 742.0], [44.9, 744.0], [45.0, 744.0], [45.1, 749.0], [45.2, 757.0], [45.3, 758.0], [45.4, 758.0], [45.5, 758.0], [45.6, 761.0], [45.7, 767.0], [45.8, 767.0], [45.9, 770.0], [46.0, 770.0], [46.1, 771.0], [46.2, 771.0], [46.3, 772.0], [46.4, 773.0], [46.5, 774.0], [46.6, 774.0], [46.7, 775.0], [46.8, 782.0], [46.9, 784.0], [47.0, 784.0], [47.1, 784.0], [47.2, 784.0], [47.3, 788.0], [47.4, 789.0], [47.5, 789.0], [47.6, 800.0], [47.7, 801.0], [47.8, 804.0], [47.9, 805.0], [48.0, 805.0], [48.1, 806.0], [48.2, 817.0], [48.3, 818.0], [48.4, 822.0], [48.5, 827.0], [48.6, 828.0], [48.7, 838.0], [48.8, 842.0], [48.9, 843.0], [49.0, 843.0], [49.1, 848.0], [49.2, 851.0], [49.3, 851.0], [49.4, 854.0], [49.5, 854.0], [49.6, 855.0], [49.7, 858.0], [49.8, 860.0], [49.9, 865.0], [50.0, 865.0], [50.1, 872.0], [50.2, 874.0], [50.3, 875.0], [50.4, 876.0], [50.5, 877.0], [50.6, 883.0], [50.7, 887.0], [50.8, 888.0], [50.9, 888.0], [51.0, 888.0], [51.1, 890.0], [51.2, 891.0], [51.3, 893.0], [51.4, 896.0], [51.5, 897.0], [51.6, 897.0], [51.7, 905.0], [51.8, 909.0], [51.9, 917.0], [52.0, 917.0], [52.1, 929.0], [52.2, 930.0], [52.3, 937.0], [52.4, 939.0], [52.5, 940.0], [52.6, 945.0], [52.7, 949.0], [52.8, 950.0], [52.9, 950.0], [53.0, 950.0], [53.1, 974.0], [53.2, 977.0], [53.3, 979.0], [53.4, 980.0], [53.5, 982.0], [53.6, 982.0], [53.7, 984.0], [53.8, 996.0], [53.9, 998.0], [54.0, 998.0], [54.1, 1012.0], [54.2, 1013.0], [54.3, 1014.0], [54.4, 1016.0], [54.5, 1017.0], [54.6, 1018.0], [54.7, 1022.0], [54.8, 1025.0], [54.9, 1026.0], [55.0, 1026.0], [55.1, 1027.0], [55.2, 1032.0], [55.3, 1033.0], [55.4, 1033.0], [55.5, 1036.0], [55.6, 1046.0], [55.7, 1048.0], [55.8, 1049.0], [55.9, 1055.0], [56.0, 1055.0], [56.1, 1058.0], [56.2, 1062.0], [56.3, 1086.0], [56.4, 1088.0], [56.5, 1089.0], [56.6, 1094.0], [56.7, 1101.0], [56.8, 1105.0], [56.9, 1108.0], [57.0, 1108.0], [57.1, 1109.0], [57.2, 1110.0], [57.3, 1117.0], [57.4, 1121.0], [57.5, 1130.0], [57.6, 1131.0], [57.7, 1133.0], [57.8, 1135.0], [57.9, 1137.0], [58.0, 1137.0], [58.1, 1139.0], [58.2, 1158.0], [58.3, 1166.0], [58.4, 1171.0], [58.5, 1172.0], [58.6, 1188.0], [58.7, 1190.0], [58.8, 1190.0], [58.9, 1194.0], [59.0, 1194.0], [59.1, 1199.0], [59.2, 1211.0], [59.3, 1211.0], [59.4, 1224.0], [59.5, 1228.0], [59.6, 1228.0], [59.7, 1232.0], [59.8, 1234.0], [59.9, 1246.0], [60.0, 1246.0], [60.1, 1252.0], [60.2, 1253.0], [60.3, 1254.0], [60.4, 1269.0], [60.5, 1277.0], [60.6, 1293.0], [60.7, 1297.0], [60.8, 1301.0], [60.9, 1304.0], [61.0, 1304.0], [61.1, 1306.0], [61.2, 1307.0], [61.3, 1308.0], [61.4, 1309.0], [61.5, 1312.0], [61.6, 1314.0], [61.7, 1315.0], [61.8, 1319.0], [61.9, 1322.0], [62.0, 1322.0], [62.1, 1325.0], [62.2, 1341.0], [62.3, 1362.0], [62.4, 1372.0], [62.5, 1381.0], [62.6, 1385.0], [62.7, 1386.0], [62.8, 1407.0], [62.9, 1414.0], [63.0, 1414.0], [63.1, 1417.0], [63.2, 1420.0], [63.3, 1433.0], [63.4, 1451.0], [63.5, 1468.0], [63.6, 1478.0], [63.7, 1526.0], [63.8, 1534.0], [63.9, 1534.0], [64.0, 1534.0], [64.1, 1540.0], [64.2, 1551.0], [64.3, 1557.0], [64.4, 1557.0], [64.5, 1563.0], [64.6, 1594.0], [64.7, 1629.0], [64.8, 1631.0], [64.9, 1642.0], [65.0, 1642.0], [65.1, 1648.0], [65.2, 1666.0], [65.3, 1666.0], [65.4, 1716.0], [65.5, 1724.0], [65.6, 1726.0], [65.7, 1727.0], [65.8, 1737.0], [65.9, 1737.0], [66.0, 1737.0], [66.1, 1753.0], [66.2, 1794.0], [66.3, 1829.0], [66.4, 1847.0], [66.5, 1864.0], [66.6, 1892.0], [66.7, 1894.0], [66.8, 1915.0], [66.9, 1922.0], [67.0, 1922.0], [67.1, 1924.0], [67.2, 1940.0], [67.3, 1945.0], [67.4, 1957.0], [67.5, 1989.0], [67.6, 2042.0], [67.7, 2044.0], [67.8, 2053.0], [67.9, 2062.0], [68.0, 2062.0], [68.1, 2093.0], [68.2, 2097.0], [68.3, 2099.0], [68.4, 2103.0], [68.5, 2105.0], [68.6, 2107.0], [68.7, 2107.0], [68.8, 2109.0], [68.9, 2116.0], [69.0, 2116.0], [69.1, 2116.0], [69.2, 2124.0], [69.3, 2134.0], [69.4, 2144.0], [69.5, 2152.0], [69.6, 2159.0], [69.7, 2174.0], [69.8, 2185.0], [69.9, 2186.0], [70.0, 2186.0], [70.1, 2187.0], [70.2, 2195.0], [70.3, 2203.0], [70.4, 2203.0], [70.5, 2226.0], [70.6, 2299.0], [70.7, 2308.0], [70.8, 2315.0], [70.9, 2319.0], [71.0, 2319.0], [71.1, 2322.0], [71.2, 2322.0], [71.3, 2326.0], [71.4, 2327.0], [71.5, 2334.0], [71.6, 2341.0], [71.7, 2369.0], [71.8, 2371.0], [71.9, 2380.0], [72.0, 2380.0], [72.1, 2397.0], [72.2, 2419.0], [72.3, 2420.0], [72.4, 2432.0], [72.5, 2438.0], [72.6, 2442.0], [72.7, 2444.0], [72.8, 2450.0], [72.9, 2454.0], [73.0, 2454.0], [73.1, 2464.0], [73.2, 2467.0], [73.3, 2472.0], [73.4, 2478.0], [73.5, 2479.0], [73.6, 2481.0], [73.7, 2483.0], [73.8, 2484.0], [73.9, 2487.0], [74.0, 2487.0], [74.1, 2490.0], [74.2, 2490.0], [74.3, 2495.0], [74.4, 2508.0], [74.5, 2516.0], [74.6, 2516.0], [74.7, 2560.0], [74.8, 2569.0], [74.9, 2583.0], [75.0, 2583.0], [75.1, 2584.0], [75.2, 2587.0], [75.3, 2609.0], [75.4, 2613.0], [75.5, 2620.0], [75.6, 2623.0], [75.7, 2624.0], [75.8, 2632.0], [75.9, 2639.0], [76.0, 2639.0], [76.1, 2647.0], [76.2, 2650.0], [76.3, 2653.0], [76.4, 2661.0], [76.5, 2668.0], [76.6, 2670.0], [76.7, 2670.0], [76.8, 2670.0], [76.9, 2670.0], [77.0, 2670.0], [77.1, 2671.0], [77.2, 2671.0], [77.3, 2671.0], [77.4, 2671.0], [77.5, 2671.0], [77.6, 2672.0], [77.7, 2672.0], [77.8, 2673.0], [77.9, 2674.0], [78.0, 2674.0], [78.1, 2674.0], [78.2, 2674.0], [78.3, 2674.0], [78.4, 2674.0], [78.5, 2675.0], [78.6, 2675.0], [78.7, 2675.0], [78.8, 2675.0], [78.9, 2676.0], [79.0, 2676.0], [79.1, 2676.0], [79.2, 2677.0], [79.3, 2677.0], [79.4, 2678.0], [79.5, 2678.0], [79.6, 2678.0], [79.7, 2678.0], [79.8, 2679.0], [79.9, 2679.0], [80.0, 2679.0], [80.1, 2679.0], [80.2, 2680.0], [80.3, 2680.0], [80.4, 2680.0], [80.5, 2681.0], [80.6, 2682.0], [80.7, 2682.0], [80.8, 2682.0], [80.9, 2682.0], [81.0, 2682.0], [81.1, 2682.0], [81.2, 2683.0], [81.3, 2683.0], [81.4, 2683.0], [81.5, 2683.0], [81.6, 2683.0], [81.7, 2684.0], [81.8, 2684.0], [81.9, 2684.0], [82.0, 2684.0], [82.1, 2684.0], [82.2, 2684.0], [82.3, 2684.0], [82.4, 2685.0], [82.5, 2685.0], [82.6, 2685.0], [82.7, 2685.0], [82.8, 2686.0], [82.9, 2686.0], [83.0, 2686.0], [83.1, 2686.0], [83.2, 2686.0], [83.3, 2687.0], [83.4, 2687.0], [83.5, 2687.0], [83.6, 2687.0], [83.7, 2688.0], [83.8, 2688.0], [83.9, 2688.0], [84.0, 2688.0], [84.1, 2689.0], [84.2, 2689.0], [84.3, 2689.0], [84.4, 2690.0], [84.5, 2690.0], [84.6, 2690.0], [84.7, 2690.0], [84.8, 2690.0], [84.9, 2691.0], [85.0, 2691.0], [85.1, 2691.0], [85.2, 2691.0], [85.3, 2691.0], [85.4, 2691.0], [85.5, 2692.0], [85.6, 2692.0], [85.7, 2692.0], [85.8, 2692.0], [85.9, 2693.0], [86.0, 2693.0], [86.1, 2693.0], [86.2, 2693.0], [86.3, 2693.0], [86.4, 2693.0], [86.5, 2693.0], [86.6, 2693.0], [86.7, 2694.0], [86.8, 2694.0], [86.9, 2694.0], [87.0, 2694.0], [87.1, 2694.0], [87.2, 2694.0], [87.3, 2694.0], [87.4, 2694.0], [87.5, 2694.0], [87.6, 2694.0], [87.7, 2695.0], [87.8, 2695.0], [87.9, 2695.0], [88.0, 2695.0], [88.1, 2695.0], [88.2, 2695.0], [88.3, 2695.0], [88.4, 2695.0], [88.5, 2696.0], [88.6, 2696.0], [88.7, 2696.0], [88.8, 2696.0], [88.9, 2696.0], [89.0, 2696.0], [89.1, 2696.0], [89.2, 2696.0], [89.3, 2697.0], [89.4, 2697.0], [89.5, 2697.0], [89.6, 2697.0], [89.7, 2698.0], [89.8, 2698.0], [89.9, 2698.0], [90.0, 2698.0], [90.1, 2698.0], [90.2, 2698.0], [90.3, 2699.0], [90.4, 2699.0], [90.5, 2699.0], [90.6, 2699.0], [90.7, 2700.0], [90.8, 2700.0], [90.9, 2700.0], [91.0, 2700.0], [91.1, 2700.0], [91.2, 2700.0], [91.3, 2700.0], [91.4, 2700.0], [91.5, 2700.0], [91.6, 2700.0], [91.7, 2700.0], [91.8, 2700.0], [91.9, 2700.0], [92.0, 2700.0], [92.1, 2701.0], [92.2, 2701.0], [92.3, 2701.0], [92.4, 2702.0], [92.5, 2702.0], [92.6, 2702.0], [92.7, 2702.0], [92.8, 2702.0], [92.9, 2703.0], [93.0, 2703.0], [93.1, 2703.0], [93.2, 2703.0], [93.3, 2703.0], [93.4, 2704.0], [93.5, 2704.0], [93.6, 2704.0], [93.7, 2704.0], [93.8, 2705.0], [93.9, 2706.0], [94.0, 2706.0], [94.1, 2706.0], [94.2, 2706.0], [94.3, 2707.0], [94.4, 2707.0], [94.5, 2707.0], [94.6, 2708.0], [94.7, 2708.0], [94.8, 2708.0], [94.9, 2709.0], [95.0, 2709.0], [95.1, 2709.0], [95.2, 2710.0], [95.3, 2710.0], [95.4, 2710.0], [95.5, 2710.0], [95.6, 2711.0], [95.7, 2711.0], [95.8, 2711.0], [95.9, 2712.0], [96.0, 2712.0], [96.1, 2712.0], [96.2, 2712.0], [96.3, 2713.0], [96.4, 2715.0], [96.5, 2716.0], [96.6, 2718.0], [96.7, 2721.0], [96.8, 2732.0], [96.9, 2740.0], [97.0, 2740.0], [97.1, 2746.0], [97.2, 2758.0], [97.3, 2759.0], [97.4, 2771.0], [97.5, 2816.0], [97.6, 2850.0], [97.7, 2852.0], [97.8, 2864.0], [97.9, 2883.0], [98.0, 2883.0], [98.1, 3034.0], [98.2, 3038.0], [98.3, 3039.0], [98.4, 3042.0], [98.5, 3046.0], [98.6, 3049.0], [98.7, 3054.0], [98.8, 3059.0], [98.9, 3062.0], [99.0, 3062.0], [99.1, 3065.0], [99.2, 3070.0], [99.3, 3115.0], [99.4, 3130.0], [99.5, 3446.0], [99.6, 4777.0], [99.7, 5250.0], [99.8, 5432.0], [99.9, 5472.0], [100.0, 5472.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 38.0], [0.1, 38.0], [0.2, 42.0], [0.3, 42.0], [0.4, 48.0], [0.5, 61.0], [0.6, 69.0], [0.7, 70.0], [0.8, 73.0], [0.9, 76.0], [1.0, 76.0], [1.1, 77.0], [1.2, 80.0], [1.3, 84.0], [1.4, 86.0], [1.5, 87.0], [1.6, 87.0], [1.7, 88.0], [1.8, 89.0], [1.9, 91.0], [2.0, 91.0], [2.1, 94.0], [2.2, 95.0], [2.3, 97.0], [2.4, 98.0], [2.5, 109.0], [2.6, 110.0], [2.7, 111.0], [2.8, 111.0], [2.9, 114.0], [3.0, 114.0], [3.1, 115.0], [3.2, 116.0], [3.3, 117.0], [3.4, 118.0], [3.5, 120.0], [3.6, 124.0], [3.7, 124.0], [3.8, 129.0], [3.9, 129.0], [4.0, 129.0], [4.1, 131.0], [4.2, 132.0], [4.3, 132.0], [4.4, 133.0], [4.5, 135.0], [4.6, 136.0], [4.7, 140.0], [4.8, 141.0], [4.9, 144.0], [5.0, 148.0], [5.1, 148.0], [5.2, 148.0], [5.3, 148.0], [5.4, 149.0], [5.5, 149.0], [5.6, 159.0], [5.7, 159.0], [5.8, 159.0], [5.9, 159.0], [6.0, 159.0], [6.1, 159.0], [6.2, 162.0], [6.3, 162.0], [6.4, 163.0], [6.5, 165.0], [6.6, 172.0], [6.7, 173.0], [6.8, 174.0], [6.9, 174.0], [7.0, 175.0], [7.1, 175.0], [7.2, 176.0], [7.3, 179.0], [7.4, 180.0], [7.5, 180.0], [7.6, 190.0], [7.7, 195.0], [7.8, 201.0], [7.9, 201.0], [8.0, 203.0], [8.1, 203.0], [8.2, 207.0], [8.3, 208.0], [8.4, 208.0], [8.5, 209.0], [8.6, 214.0], [8.7, 216.0], [8.8, 216.0], [8.9, 217.0], [9.0, 217.0], [9.1, 217.0], [9.2, 217.0], [9.3, 218.0], [9.4, 221.0], [9.5, 221.0], [9.6, 221.0], [9.7, 222.0], [9.8, 222.0], [9.9, 223.0], [10.0, 225.0], [10.1, 225.0], [10.2, 227.0], [10.3, 229.0], [10.4, 230.0], [10.5, 233.0], [10.6, 235.0], [10.7, 237.0], [10.8, 238.0], [10.9, 238.0], [11.0, 241.0], [11.1, 241.0], [11.2, 244.0], [11.3, 244.0], [11.4, 244.0], [11.5, 246.0], [11.6, 246.0], [11.7, 248.0], [11.8, 249.0], [11.9, 250.0], [12.0, 251.0], [12.1, 251.0], [12.2, 254.0], [12.3, 255.0], [12.4, 258.0], [12.5, 259.0], [12.6, 261.0], [12.7, 261.0], [12.8, 262.0], [12.9, 262.0], [13.0, 265.0], [13.1, 265.0], [13.2, 266.0], [13.3, 266.0], [13.4, 270.0], [13.5, 272.0], [13.6, 275.0], [13.7, 276.0], [13.8, 276.0], [13.9, 278.0], [14.0, 278.0], [14.1, 278.0], [14.2, 279.0], [14.3, 279.0], [14.4, 281.0], [14.5, 282.0], [14.6, 283.0], [14.7, 283.0], [14.8, 284.0], [14.9, 284.0], [15.0, 284.0], [15.1, 284.0], [15.2, 289.0], [15.3, 291.0], [15.4, 291.0], [15.5, 293.0], [15.6, 294.0], [15.7, 297.0], [15.8, 300.0], [15.9, 301.0], [16.0, 303.0], [16.1, 303.0], [16.2, 305.0], [16.3, 307.0], [16.4, 307.0], [16.5, 312.0], [16.6, 323.0], [16.7, 330.0], [16.8, 331.0], [16.9, 344.0], [17.0, 345.0], [17.1, 345.0], [17.2, 345.0], [17.3, 351.0], [17.4, 359.0], [17.5, 361.0], [17.6, 364.0], [17.7, 367.0], [17.8, 368.0], [17.9, 369.0], [18.0, 373.0], [18.1, 373.0], [18.2, 377.0], [18.3, 377.0], [18.4, 378.0], [18.5, 379.0], [18.6, 380.0], [18.7, 380.0], [18.8, 381.0], [18.9, 382.0], [19.0, 382.0], [19.1, 382.0], [19.2, 389.0], [19.3, 391.0], [19.4, 393.0], [19.5, 396.0], [19.6, 399.0], [19.7, 402.0], [19.8, 404.0], [19.9, 413.0], [20.0, 418.0], [20.1, 418.0], [20.2, 420.0], [20.3, 422.0], [20.4, 423.0], [20.5, 427.0], [20.6, 428.0], [20.7, 433.0], [20.8, 453.0], [20.9, 459.0], [21.0, 462.0], [21.1, 462.0], [21.2, 463.0], [21.3, 467.0], [21.4, 468.0], [21.5, 470.0], [21.6, 474.0], [21.7, 482.0], [21.8, 487.0], [21.9, 502.0], [22.0, 506.0], [22.1, 506.0], [22.2, 512.0], [22.3, 513.0], [22.4, 519.0], [22.5, 522.0], [22.6, 523.0], [22.7, 524.0], [22.8, 537.0], [22.9, 539.0], [23.0, 544.0], [23.1, 544.0], [23.2, 555.0], [23.3, 556.0], [23.4, 560.0], [23.5, 561.0], [23.6, 563.0], [23.7, 581.0], [23.8, 585.0], [23.9, 592.0], [24.0, 593.0], [24.1, 593.0], [24.2, 594.0], [24.3, 601.0], [24.4, 619.0], [24.5, 651.0], [24.6, 661.0], [24.7, 663.0], [24.8, 676.0], [24.9, 691.0], [25.0, 692.0], [25.1, 692.0], [25.2, 714.0], [25.3, 728.0], [25.4, 741.0], [25.5, 743.0], [25.6, 766.0], [25.7, 770.0], [25.8, 781.0], [25.9, 783.0], [26.0, 787.0], [26.1, 787.0], [26.2, 794.0], [26.3, 796.0], [26.4, 799.0], [26.5, 806.0], [26.6, 812.0], [26.7, 818.0], [26.8, 824.0], [26.9, 842.0], [27.0, 858.0], [27.1, 858.0], [27.2, 860.0], [27.3, 861.0], [27.4, 862.0], [27.5, 864.0], [27.6, 876.0], [27.7, 888.0], [27.8, 898.0], [27.9, 904.0], [28.0, 918.0], [28.1, 918.0], [28.2, 933.0], [28.3, 938.0], [28.4, 970.0], [28.5, 974.0], [28.6, 985.0], [28.7, 1022.0], [28.8, 1058.0], [28.9, 1101.0], [29.0, 1103.0], [29.1, 1103.0], [29.2, 1113.0], [29.3, 1151.0], [29.4, 1157.0], [29.5, 1174.0], [29.6, 1179.0], [29.7, 1183.0], [29.8, 1186.0], [29.9, 1188.0], [30.0, 1228.0], [30.1, 1228.0], [30.2, 1240.0], [30.3, 1242.0], [30.4, 1263.0], [30.5, 1264.0], [30.6, 1266.0], [30.7, 1268.0], [30.8, 1272.0], [30.9, 1280.0], [31.0, 1283.0], [31.1, 1283.0], [31.2, 1286.0], [31.3, 1286.0], [31.4, 1289.0], [31.5, 1295.0], [31.6, 1307.0], [31.7, 1325.0], [31.8, 1329.0], [31.9, 1330.0], [32.0, 1336.0], [32.1, 1336.0], [32.2, 1346.0], [32.3, 1348.0], [32.4, 1358.0], [32.5, 1359.0], [32.6, 1359.0], [32.7, 1372.0], [32.8, 1374.0], [32.9, 1391.0], [33.0, 1395.0], [33.1, 1395.0], [33.2, 1403.0], [33.3, 1409.0], [33.4, 1427.0], [33.5, 1427.0], [33.6, 1430.0], [33.7, 1440.0], [33.8, 1452.0], [33.9, 1455.0], [34.0, 1465.0], [34.1, 1465.0], [34.2, 1477.0], [34.3, 1482.0], [34.4, 1487.0], [34.5, 1490.0], [34.6, 1492.0], [34.7, 1495.0], [34.8, 1499.0], [34.9, 1513.0], [35.0, 1518.0], [35.1, 1518.0], [35.2, 1523.0], [35.3, 1539.0], [35.4, 1543.0], [35.5, 1548.0], [35.6, 1554.0], [35.7, 1562.0], [35.8, 1563.0], [35.9, 1572.0], [36.0, 1572.0], [36.1, 1573.0], [36.2, 1598.0], [36.3, 1608.0], [36.4, 1608.0], [36.5, 1611.0], [36.6, 1614.0], [36.7, 1615.0], [36.8, 1623.0], [36.9, 1627.0], [37.0, 1627.0], [37.1, 1630.0], [37.2, 1654.0], [37.3, 1656.0], [37.4, 1659.0], [37.5, 1660.0], [37.6, 1660.0], [37.7, 1663.0], [37.8, 1672.0], [37.9, 1672.0], [38.0, 1672.0], [38.1, 1679.0], [38.2, 1685.0], [38.3, 1690.0], [38.4, 1691.0], [38.5, 1694.0], [38.6, 1700.0], [38.7, 1702.0], [38.8, 1702.0], [38.9, 1702.0], [39.0, 1702.0], [39.1, 1706.0], [39.2, 1708.0], [39.3, 1712.0], [39.4, 1712.0], [39.5, 1713.0], [39.6, 1715.0], [39.7, 1721.0], [39.8, 1722.0], [39.9, 1725.0], [40.0, 1725.0], [40.1, 1731.0], [40.2, 1746.0], [40.3, 1747.0], [40.4, 1747.0], [40.5, 1749.0], [40.6, 1755.0], [40.7, 1757.0], [40.8, 1757.0], [40.9, 1757.0], [41.0, 1757.0], [41.1, 1760.0], [41.2, 1764.0], [41.3, 1773.0], [41.4, 1781.0], [41.5, 1782.0], [41.6, 1787.0], [41.7, 1787.0], [41.8, 1790.0], [41.9, 1790.0], [42.0, 1790.0], [42.1, 1790.0], [42.2, 1795.0], [42.3, 1797.0], [42.4, 1801.0], [42.5, 1802.0], [42.6, 1813.0], [42.7, 1817.0], [42.8, 1818.0], [42.9, 1821.0], [43.0, 1821.0], [43.1, 1825.0], [43.2, 1836.0], [43.3, 1841.0], [43.4, 1842.0], [43.5, 1850.0], [43.6, 1851.0], [43.7, 1852.0], [43.8, 1852.0], [43.9, 1867.0], [44.0, 1867.0], [44.1, 1868.0], [44.2, 1868.0], [44.3, 1876.0], [44.4, 1877.0], [44.5, 1885.0], [44.6, 1902.0], [44.7, 1904.0], [44.8, 1904.0], [44.9, 1906.0], [45.0, 1906.0], [45.1, 1909.0], [45.2, 1909.0], [45.3, 1912.0], [45.4, 1914.0], [45.5, 1919.0], [45.6, 1923.0], [45.7, 1926.0], [45.8, 1927.0], [45.9, 1928.0], [46.0, 1928.0], [46.1, 1932.0], [46.2, 1945.0], [46.3, 1959.0], [46.4, 1961.0], [46.5, 1972.0], [46.6, 1972.0], [46.7, 1977.0], [46.8, 1983.0], [46.9, 1985.0], [47.0, 1985.0], [47.1, 1991.0], [47.2, 1995.0], [47.3, 2007.0], [47.4, 2010.0], [47.5, 2019.0], [47.6, 2021.0], [47.7, 2023.0], [47.8, 2029.0], [47.9, 2038.0], [48.0, 2038.0], [48.1, 2038.0], [48.2, 2046.0], [48.3, 2050.0], [48.4, 2058.0], [48.5, 2063.0], [48.6, 2063.0], [48.7, 2064.0], [48.8, 2068.0], [48.9, 2072.0], [49.0, 2072.0], [49.1, 2074.0], [49.2, 2078.0], [49.3, 2085.0], [49.4, 2087.0], [49.5, 2087.0], [49.6, 2090.0], [49.7, 2093.0], [49.8, 2114.0], [49.9, 2116.0], [50.0, 2116.0], [50.1, 2124.0], [50.2, 2126.0], [50.3, 2132.0], [50.4, 2132.0], [50.5, 2137.0], [50.6, 2138.0], [50.7, 2142.0], [50.8, 2143.0], [50.9, 2145.0], [51.0, 2145.0], [51.1, 2147.0], [51.2, 2149.0], [51.3, 2153.0], [51.4, 2158.0], [51.5, 2163.0], [51.6, 2182.0], [51.7, 2188.0], [51.8, 2194.0], [51.9, 2198.0], [52.0, 2198.0], [52.1, 2198.0], [52.2, 2221.0], [52.3, 2222.0], [52.4, 2222.0], [52.5, 2226.0], [52.6, 2229.0], [52.7, 2230.0], [52.8, 2232.0], [52.9, 2238.0], [53.0, 2238.0], [53.1, 2247.0], [53.2, 2248.0], [53.3, 2255.0], [53.4, 2258.0], [53.5, 2264.0], [53.6, 2268.0], [53.7, 2268.0], [53.8, 2271.0], [53.9, 2295.0], [54.0, 2295.0], [54.1, 2297.0], [54.2, 2318.0], [54.3, 2319.0], [54.4, 2320.0], [54.5, 2324.0], [54.6, 2324.0], [54.7, 2327.0], [54.8, 2328.0], [54.9, 2328.0], [55.0, 2328.0], [55.1, 2329.0], [55.2, 2334.0], [55.3, 2334.0], [55.4, 2335.0], [55.5, 2335.0], [55.6, 2336.0], [55.7, 2342.0], [55.8, 2342.0], [55.9, 2349.0], [56.0, 2349.0], [56.1, 2351.0], [56.2, 2352.0], [56.3, 2356.0], [56.4, 2359.0], [56.5, 2361.0], [56.6, 2375.0], [56.7, 2376.0], [56.8, 2382.0], [56.9, 2389.0], [57.0, 2389.0], [57.1, 2390.0], [57.2, 2390.0], [57.3, 2392.0], [57.4, 2394.0], [57.5, 2394.0], [57.6, 2399.0], [57.7, 2402.0], [57.8, 2403.0], [57.9, 2404.0], [58.0, 2404.0], [58.1, 2407.0], [58.2, 2413.0], [58.3, 2432.0], [58.4, 2436.0], [58.5, 2441.0], [58.6, 2462.0], [58.7, 2470.0], [58.8, 2473.0], [58.9, 2479.0], [59.0, 2479.0], [59.1, 2483.0], [59.2, 2486.0], [59.3, 2486.0], [59.4, 2488.0], [59.5, 2497.0], [59.6, 2500.0], [59.7, 2506.0], [59.8, 2508.0], [59.9, 2510.0], [60.0, 2510.0], [60.1, 2514.0], [60.2, 2522.0], [60.3, 2526.0], [60.4, 2533.0], [60.5, 2536.0], [60.6, 2542.0], [60.7, 2543.0], [60.8, 2544.0], [60.9, 2546.0], [61.0, 2546.0], [61.1, 2551.0], [61.2, 2554.0], [61.3, 2573.0], [61.4, 2586.0], [61.5, 2601.0], [61.6, 2603.0], [61.7, 2610.0], [61.8, 2614.0], [61.9, 2615.0], [62.0, 2615.0], [62.1, 2639.0], [62.2, 2660.0], [62.3, 2666.0], [62.4, 2703.0], [62.5, 2724.0], [62.6, 2744.0], [62.7, 2767.0], [62.8, 2778.0], [62.9, 2780.0], [63.0, 2780.0], [63.1, 2793.0], [63.2, 2798.0], [63.3, 2801.0], [63.4, 2841.0], [63.5, 2848.0], [63.6, 2849.0], [63.7, 2850.0], [63.8, 2857.0], [63.9, 2858.0], [64.0, 2858.0], [64.1, 2868.0], [64.2, 2880.0], [64.3, 2910.0], [64.4, 2925.0], [64.5, 2966.0], [64.6, 2977.0], [64.7, 2984.0], [64.8, 3001.0], [64.9, 3007.0], [65.0, 3007.0], [65.1, 3043.0], [65.2, 3054.0], [65.3, 3067.0], [65.4, 3070.0], [65.5, 3078.0], [65.6, 3079.0], [65.7, 3096.0], [65.8, 3097.0], [65.9, 3108.0], [66.0, 3108.0], [66.1, 3138.0], [66.2, 3139.0], [66.3, 3140.0], [66.4, 3148.0], [66.5, 3154.0], [66.6, 3157.0], [66.7, 3163.0], [66.8, 3170.0], [66.9, 3183.0], [67.0, 3183.0], [67.1, 3188.0], [67.2, 3190.0], [67.3, 3204.0], [67.4, 3205.0], [67.5, 3206.0], [67.6, 3209.0], [67.7, 3216.0], [67.8, 3222.0], [67.9, 3233.0], [68.0, 3233.0], [68.1, 3234.0], [68.2, 3239.0], [68.3, 3241.0], [68.4, 3248.0], [68.5, 3257.0], [68.6, 3257.0], [68.7, 3258.0], [68.8, 3261.0], [68.9, 3267.0], [69.0, 3267.0], [69.1, 3306.0], [69.2, 3309.0], [69.3, 3314.0], [69.4, 3332.0], [69.5, 3345.0], [69.6, 3347.0], [69.7, 3356.0], [69.8, 3357.0], [69.9, 3377.0], [70.0, 3377.0], [70.1, 3392.0], [70.2, 3419.0], [70.3, 3419.0], [70.4, 3449.0], [70.5, 3475.0], [70.6, 3475.0], [70.7, 3479.0], [70.8, 3480.0], [70.9, 3492.0], [71.0, 3492.0], [71.1, 3495.0], [71.2, 3519.0], [71.3, 3539.0], [71.4, 3558.0], [71.5, 3561.0], [71.6, 3577.0], [71.7, 3584.0], [71.8, 3584.0], [71.9, 3587.0], [72.0, 3587.0], [72.1, 3597.0], [72.2, 3605.0], [72.3, 3607.0], [72.4, 3611.0], [72.5, 3656.0], [72.6, 3684.0], [72.7, 3687.0], [72.8, 3694.0], [72.9, 3700.0], [73.0, 3700.0], [73.1, 3730.0], [73.2, 3736.0], [73.3, 3748.0], [73.4, 3760.0], [73.5, 3825.0], [73.6, 3828.0], [73.7, 3946.0], [73.8, 3994.0], [73.9, 3997.0], [74.0, 3997.0], [74.1, 4012.0], [74.2, 4042.0], [74.3, 4159.0], [74.4, 4229.0], [74.5, 4343.0], [74.6, 4524.0], [74.7, 4577.0], [74.8, 4619.0], [74.9, 4649.0], [75.0, 4649.0], [75.1, 4956.0], [75.2, 4963.0], [75.3, 5030.0], [75.4, 5069.0], [75.5, 5100.0], [75.6, 5112.0], [75.7, 5116.0], [75.8, 5146.0], [75.9, 5149.0], [76.0, 5149.0], [76.1, 5170.0], [76.2, 5186.0], [76.3, 5194.0], [76.4, 5196.0], [76.5, 5199.0], [76.6, 5225.0], [76.7, 5235.0], [76.8, 5268.0], [76.9, 5280.0], [77.0, 5280.0], [77.1, 5342.0], [77.2, 5346.0], [77.3, 5354.0], [77.4, 5357.0], [77.5, 5367.0], [77.6, 5402.0], [77.7, 5408.0], [77.8, 5449.0], [77.9, 5455.0], [78.0, 5455.0], [78.1, 5467.0], [78.2, 5482.0], [78.3, 5517.0], [78.4, 5522.0], [78.5, 5541.0], [78.6, 5564.0], [78.7, 5589.0], [78.8, 5599.0], [78.9, 5612.0], [79.0, 5612.0], [79.1, 5612.0], [79.2, 5614.0], [79.3, 5614.0], [79.4, 5617.0], [79.5, 5621.0], [79.6, 5625.0], [79.7, 5629.0], [79.8, 5629.0], [79.9, 5635.0], [80.0, 5635.0], [80.1, 5635.0], [80.2, 5636.0], [80.3, 5637.0], [80.4, 5640.0], [80.5, 5641.0], [80.6, 5644.0], [80.7, 5644.0], [80.8, 5647.0], [80.9, 5650.0], [81.0, 5650.0], [81.1, 5650.0], [81.2, 5650.0], [81.3, 5650.0], [81.4, 5651.0], [81.5, 5652.0], [81.6, 5654.0], [81.7, 5655.0], [81.8, 5657.0], [81.9, 5657.0], [82.0, 5657.0], [82.1, 5658.0], [82.2, 5659.0], [82.3, 5659.0], [82.4, 5660.0], [82.5, 5660.0], [82.6, 5660.0], [82.7, 5660.0], [82.8, 5661.0], [82.9, 5661.0], [83.0, 5661.0], [83.1, 5661.0], [83.2, 5662.0], [83.3, 5662.0], [83.4, 5662.0], [83.5, 5663.0], [83.6, 5663.0], [83.7, 5664.0], [83.8, 5664.0], [83.9, 5665.0], [84.0, 5665.0], [84.1, 5666.0], [84.2, 5667.0], [84.3, 5668.0], [84.4, 5670.0], [84.5, 5671.0], [84.6, 5672.0], [84.7, 5672.0], [84.8, 5673.0], [84.9, 5673.0], [85.0, 5673.0], [85.1, 5673.0], [85.2, 5674.0], [85.3, 5674.0], [85.4, 5675.0], [85.5, 5675.0], [85.6, 5676.0], [85.7, 5676.0], [85.8, 5677.0], [85.9, 5678.0], [86.0, 5678.0], [86.1, 5679.0], [86.2, 5680.0], [86.3, 5681.0], [86.4, 5681.0], [86.5, 5681.0], [86.6, 5682.0], [86.7, 5682.0], [86.8, 5682.0], [86.9, 5683.0], [87.0, 5683.0], [87.1, 5684.0], [87.2, 5685.0], [87.3, 5685.0], [87.4, 5685.0], [87.5, 5687.0], [87.6, 5687.0], [87.7, 5688.0], [87.8, 5688.0], [87.9, 5689.0], [88.0, 5689.0], [88.1, 5689.0], [88.2, 5690.0], [88.3, 5691.0], [88.4, 5693.0], [88.5, 5693.0], [88.6, 5694.0], [88.7, 5695.0], [88.8, 5695.0], [88.9, 5695.0], [89.0, 5695.0], [89.1, 5698.0], [89.2, 5703.0], [89.3, 5704.0], [89.4, 5704.0], [89.5, 5706.0], [89.6, 5706.0], [89.7, 5707.0], [89.8, 5707.0], [89.9, 5707.0], [90.0, 5707.0], [90.1, 5708.0], [90.2, 5708.0], [90.3, 5708.0], [90.4, 5708.0], [90.5, 5709.0], [90.6, 5710.0], [90.7, 5710.0], [90.8, 5710.0], [90.9, 5711.0], [91.0, 5711.0], [91.1, 5711.0], [91.2, 5712.0], [91.3, 5712.0], [91.4, 5712.0], [91.5, 5713.0], [91.6, 5713.0], [91.7, 5713.0], [91.8, 5714.0], [91.9, 5714.0], [92.0, 5714.0], [92.1, 5715.0], [92.2, 5715.0], [92.3, 5715.0], [92.4, 5716.0], [92.5, 5717.0], [92.6, 5717.0], [92.7, 5717.0], [92.8, 5718.0], [92.9, 5718.0], [93.0, 5718.0], [93.1, 5719.0], [93.2, 5719.0], [93.3, 5719.0], [93.4, 5720.0], [93.5, 5720.0], [93.6, 5720.0], [93.7, 5720.0], [93.8, 5721.0], [93.9, 5721.0], [94.0, 5721.0], [94.1, 5721.0], [94.2, 5722.0], [94.3, 5723.0], [94.4, 5723.0], [94.5, 5724.0], [94.6, 5724.0], [94.7, 5725.0], [94.8, 5727.0], [94.9, 5727.0], [95.0, 5727.0], [95.1, 5728.0], [95.2, 5728.0], [95.3, 5728.0], [95.4, 5729.0], [95.5, 5729.0], [95.6, 5729.0], [95.7, 5730.0], [95.8, 5730.0], [95.9, 5730.0], [96.0, 5730.0], [96.1, 5731.0], [96.2, 5731.0], [96.3, 5732.0], [96.4, 5733.0], [96.5, 5733.0], [96.6, 5733.0], [96.7, 5734.0], [96.8, 5735.0], [96.9, 5735.0], [97.0, 5735.0], [97.1, 5736.0], [97.2, 5736.0], [97.3, 5738.0], [97.4, 5738.0], [97.5, 5741.0], [97.6, 5741.0], [97.7, 5741.0], [97.8, 5742.0], [97.9, 5742.0], [98.0, 5742.0], [98.1, 5743.0], [98.2, 5744.0], [98.3, 5745.0], [98.4, 5746.0], [98.5, 5746.0], [98.6, 5747.0], [98.7, 5750.0], [98.8, 5754.0], [98.9, 5763.0], [99.0, 5763.0], [99.1, 5768.0], [99.2, 5795.0], [99.3, 5801.0], [99.4, 5814.0], [99.5, 5835.0], [99.6, 5910.0], [99.7, 6677.0], [99.8, 6707.0], [99.9, 6867.0], [100.0, 6867.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 139.0, "series": [{"data": [[0.0, 49.0], [600.0, 18.0], [700.0, 13.0], [3100.0, 1.0], [200.0, 1.0], [800.0, 16.0], [900.0, 18.0], [1000.0, 17.0], [1100.0, 14.0], [300.0, 3.0], [1200.0, 15.0], [1300.0, 11.0], [1400.0, 17.0], [1500.0, 15.0], [100.0, 22.0], [1600.0, 13.0], [400.0, 4.0], [1700.0, 11.0], [1800.0, 13.0], [1900.0, 15.0], [2000.0, 8.0], [500.0, 6.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[0.0, 127.0], [600.0, 59.0], [700.0, 42.0], [800.0, 50.0], [900.0, 44.0], [1000.0, 50.0], [1100.0, 22.0], [1200.0, 28.0], [1300.0, 25.0], [1400.0, 14.0], [1500.0, 15.0], [100.0, 106.0], [1600.0, 15.0], [1700.0, 4.0], [1800.0, 8.0], [1900.0, 5.0], [2000.0, 7.0], [2100.0, 2.0], [2200.0, 2.0], [2300.0, 9.0], [2400.0, 7.0], [2500.0, 4.0], [2600.0, 7.0], [2700.0, 4.0], [2800.0, 3.0], [2900.0, 1.0], [3000.0, 1.0], [3100.0, 2.0], [200.0, 56.0], [3700.0, 1.0], [300.0, 60.0], [400.0, 58.0], [500.0, 62.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 99.0], [600.0, 33.0], [700.0, 37.0], [800.0, 37.0], [900.0, 21.0], [1000.0, 24.0], [1100.0, 22.0], [1200.0, 15.0], [1300.0, 18.0], [1400.0, 8.0], [1500.0, 9.0], [100.0, 107.0], [1600.0, 6.0], [1700.0, 8.0], [1800.0, 5.0], [1900.0, 7.0], [2000.0, 7.0], [2100.0, 17.0], [2300.0, 13.0], [2200.0, 4.0], [2400.0, 20.0], [2500.0, 8.0], [2600.0, 139.0], [2700.0, 61.0], [2800.0, 5.0], [3000.0, 11.0], [3100.0, 2.0], [200.0, 41.0], [3400.0, 1.0], [300.0, 34.0], [4700.0, 1.0], [5200.0, 1.0], [5400.0, 2.0], [400.0, 46.0], [500.0, 31.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 22.0], [600.0, 8.0], [700.0, 12.0], [800.0, 13.0], [900.0, 7.0], [1000.0, 2.0], [1100.0, 10.0], [1200.0, 14.0], [1300.0, 14.0], [1400.0, 16.0], [1500.0, 12.0], [1600.0, 21.0], [1700.0, 34.0], [1800.0, 20.0], [1900.0, 24.0], [2000.0, 23.0], [2100.0, 21.0], [2200.0, 18.0], [2300.0, 32.0], [2400.0, 17.0], [2500.0, 17.0], [2600.0, 8.0], [2800.0, 9.0], [2700.0, 8.0], [2900.0, 5.0], [3000.0, 10.0], [3100.0, 12.0], [3200.0, 16.0], [3300.0, 10.0], [3400.0, 9.0], [3500.0, 9.0], [3700.0, 5.0], [3600.0, 7.0], [3800.0, 2.0], [3900.0, 3.0], [4000.0, 2.0], [4300.0, 1.0], [4200.0, 1.0], [4100.0, 1.0], [4500.0, 2.0], [4600.0, 2.0], [5100.0, 10.0], [5000.0, 2.0], [4900.0, 2.0], [5300.0, 5.0], [5200.0, 4.0], [5600.0, 92.0], [5500.0, 6.0], [5400.0, 6.0], [5800.0, 3.0], [5700.0, 91.0], [5900.0, 1.0], [6600.0, 1.0], [6800.0, 1.0], [6700.0, 1.0], [100.0, 48.0], [200.0, 72.0], [300.0, 35.0], [400.0, 20.0], [500.0, 21.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 6800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 903.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1086.0, "series": [{"data": [[0.0, 1011.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 903.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1086.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 183.7069999999998, "minX": 1.72983864E12, "maxY": 183.7069999999998, "series": [{"data": [[1.72983864E12, 183.7069999999998]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72983864E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 5.0, "minX": 1.0, "maxY": 5598.277272727278, "series": [{"data": [[41.0, 81.0], [48.0, 80.0], [51.0, 26.0], [111.0, 358.0], [109.0, 381.5], [10.0, 35.0], [11.0, 48.666666666666664], [230.0, 3118.0], [228.0, 610.0], [227.0, 795.0], [232.0, 1269.7772727272722], [233.0, 94.625], [234.0, 37.0], [235.0, 28.666666666666668], [237.0, 45.0], [244.0, 810.0], [241.0, 40.0], [245.0, 1056.0], [17.0, 82.2], [18.0, 70.6], [19.0, 93.8], [20.0, 79.44444444444444], [21.0, 86.0], [22.0, 124.11111111111111], [23.0, 110.625], [24.0, 109.0], [25.0, 92.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[191.64000000000001, 976.486666666667]], "isOverall": false, "label": "HTTP Request-2-Aggregated", "isController": false}, {"data": [[3.0, 8.0], [4.0, 27.666666666666668], [6.0, 30.0], [7.0, 33.0], [9.0, 37.0], [10.0, 47.75], [11.0, 51.285714285714285], [13.0, 39.0], [15.0, 157.0], [16.0, 52.25], [17.0, 58.3], [18.0, 70.6923076923077], [19.0, 88.21052631578947], [20.0, 95.36363636363635], [21.0, 118.20000000000002], [22.0, 136.08333333333334], [23.0, 150.1111111111111], [24.0, 97.0], [25.0, 85.66666666666667], [26.0, 99.0], [41.0, 60.666666666666664], [42.0, 1862.75], [43.0, 2549.2083333333335], [45.0, 51.5], [49.0, 167.66666666666666], [48.0, 169.4], [50.0, 97.0], [51.0, 261.0], [53.0, 141.0], [54.0, 476.0], [111.0, 1000.0], [109.0, 425.25], [108.0, 372.0], [112.0, 485.0], [209.0, 352.0], [210.0, 878.0], [217.0, 512.0], [218.0, 878.0], [230.0, 1296.5454545454543], [229.0, 903.5555555555554], [228.0, 658.8703703703704], [227.0, 669.3448275862069], [232.0, 1123.9181818181814], [233.0, 512.4444444444445], [234.0, 162.0], [235.0, 737.6], [238.0, 543.1538461538462], [237.0, 520.5555555555555], [239.0, 471.1111111111111], [240.0, 471.5294117647059], [242.0, 442.20833333333326], [243.0, 386.63636363636357], [244.0, 392.25], [241.0, 880.952380952381], [245.0, 472.19999999999993], [1.0, 5.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[182.82555555555555, 713.8277777777779]], "isOverall": false, "label": "HTTP Request-1-Aggregated", "isController": false}, {"data": [[3.0, 61.0], [4.0, 53.666666666666664], [6.0, 47.0], [7.0, 45.0], [9.0, 73.0], [10.0, 68.5], [11.0, 80.85714285714286], [13.0, 42.66666666666667], [15.0, 103.0], [16.0, 60.25], [17.0, 114.4], [18.0, 104.07692307692308], [19.0, 125.26315789473684], [20.0, 152.9545454545455], [21.0, 136.46666666666667], [22.0, 142.08333333333334], [23.0, 145.88888888888883], [24.0, 140.8], [25.0, 185.83333333333334], [26.0, 63.0], [41.0, 81.33333333333333], [42.0, 785.75], [43.0, 963.5416666666669], [45.0, 108.5], [49.0, 145.66666666666666], [48.0, 260.4], [50.0, 131.0], [51.0, 1234.0], [53.0, 248.0], [54.0, 373.0], [111.0, 905.0], [109.0, 1253.5], [108.0, 259.0], [112.0, 175.0], [210.0, 1325.0], [209.0, 25.0], [217.0, 2864.0], [218.0, 2397.0], [230.0, 806.0681818181818], [229.0, 1092.7777777777778], [228.0, 1373.3148148148148], [227.0, 2092.2241379310344], [232.0, 2593.4227272727276], [233.0, 3364.6666666666665], [234.0, 3039.0], [235.0, 948.2], [238.0, 631.9230769230769], [237.0, 750.8888888888889], [239.0, 498.2777777777778], [240.0, 659.7352941176473], [242.0, 1483.2916666666665], [243.0, 461.54545454545456], [244.0, 512.625], [241.0, 915.5396825396828], [245.0, 684.6], [1.0, 29.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[182.82555555555567, 1247.7333333333327]], "isOverall": false, "label": "HTTP Request-0-Aggregated", "isController": false}, {"data": [[3.0, 70.0], [4.0, 86.0], [6.0, 87.0], [7.0, 101.0], [9.0, 110.0], [10.0, 137.75], [11.0, 158.14285714285714], [13.0, 82.0], [15.0, 261.0], [16.0, 113.75], [17.0, 243.99999999999997], [18.0, 208.61538461538464], [19.0, 266.10526315789474], [20.0, 289.9545454545455], [21.0, 297.4666666666667], [22.0, 336.125], [23.0, 335.962962962963], [24.0, 259.8], [25.0, 320.5], [26.0, 162.0], [41.0, 169.33333333333331], [42.0, 2662.25], [43.0, 3621.5833333333335], [45.0, 160.0], [49.0, 330.0], [48.0, 446.6], [50.0, 246.0], [51.0, 1523.0], [53.0, 389.0], [54.0, 878.0], [111.0, 2264.0], [109.0, 2099.25], [108.0, 669.0], [112.0, 661.0], [210.0, 2801.0], [209.0, 378.0], [217.0, 3377.0], [218.0, 3687.0], [230.0, 2265.590909090909], [229.0, 2275.4444444444443], [228.0, 2592.944444444445], [227.0, 2939.844827586207], [232.0, 5598.277272727278], [233.0, 4607.111111111111], [234.0, 3239.0], [235.0, 1819.2], [238.0, 1175.6153846153845], [237.0, 1289.0], [239.0, 975.6666666666665], [240.0, 1578.4607843137253], [242.0, 2045.5416666666667], [243.0, 911.5454545454545], [244.0, 1225.625], [241.0, 2122.9841269841268], [245.0, 1405.466666666667], [1.0, 38.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[182.82555555555552, 2587.512222222219]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 245.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 11210.0, "minX": 1.72983864E12, "maxY": 40260.0, "series": [{"data": [[1.72983864E12, 40260.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.72983864E12, 11210.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72983864E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 713.8277777777779, "minX": 1.72983864E12, "maxY": 2587.512222222219, "series": [{"data": [[1.72983864E12, 976.486666666667]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[1.72983864E12, 713.8277777777779]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.72983864E12, 1247.7333333333327]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.72983864E12, 2587.512222222219]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72983864E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 699.3733333333333, "minX": 1.72983864E12, "maxY": 1126.860000000001, "series": [{"data": [[1.72983864E12, 699.3733333333333]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[1.72983864E12, 703.374444444444]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.72983864E12, 1126.8600000000001]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.72983864E12, 1126.860000000001]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72983864E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.72983864E12, "maxY": 253.26777777777744, "series": [{"data": [[1.72983864E12, 0.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[1.72983864E12, 0.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.72983864E12, 253.26777777777744]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.72983864E12, 253.26777777777744]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72983864E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 5.0, "minX": 1.72983864E12, "maxY": 6867.0, "series": [{"data": [[1.72983864E12, 6867.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.72983864E12, 3204.9]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.72983864E12, 5733.99]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.72983864E12, 5662.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.72983864E12, 5.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.72983864E12, 930.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72983864E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 58.0, "minX": 51.0, "maxY": 2689.0, "series": [{"data": [[159.0, 1201.0], [183.0, 758.0], [181.0, 842.0], [178.0, 150.0], [187.0, 200.0], [196.0, 574.0], [51.0, 223.0], [206.0, 110.5], [52.0, 654.0], [223.0, 2689.0], [57.0, 58.0], [248.0, 1852.0], [271.0, 1101.0], [265.0, 714.0], [492.0, 2052.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 492.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 48.0, "minX": 51.0, "maxY": 2181.0, "series": [{"data": [[159.0, 1201.0], [183.0, 727.0], [181.0, 742.0], [178.0, 127.0], [187.0, 146.0], [196.0, 339.0], [51.0, 129.0], [206.0, 96.5], [52.0, 654.0], [223.0, 2181.0], [57.0, 48.0], [248.0, 1301.5], [271.0, 626.0], [265.0, 647.0], [492.0, 1446.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 492.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.72983864E12, "maxY": 50.0, "series": [{"data": [[1.72983864E12, 50.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72983864E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 20.0, "minX": 1.72983864E12, "maxY": 30.0, "series": [{"data": [[1.72983864E12, 30.0]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.72983864E12, 20.0]], "isOverall": false, "label": "302", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72983864E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 5.0, "minX": 1.72983864E12, "maxY": 15.0, "series": [{"data": [[1.72983864E12, 15.0]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.72983864E12, 15.0]], "isOverall": false, "label": "HTTP Request-0-success", "isController": false}, {"data": [[1.72983864E12, 15.0]], "isOverall": false, "label": "HTTP Request-1-success", "isController": false}, {"data": [[1.72983864E12, 5.0]], "isOverall": false, "label": "HTTP Request-2-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72983864E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.72983864E12, "maxY": 50.0, "series": [{"data": [[1.72983864E12, 50.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72983864E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

